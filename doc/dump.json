[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "src/actions/authorization.js",
    "content": "import { remote } from 'electron';\nimport { push } from 'react-router-redux';\nimport { toastr } from 'react-redux-toastr';\nimport { swal } from 'react-redux-sweetalert';\nimport { filter, uniq, slice } from 'lodash';\nimport settings from 'electron-settings';\nimport * as AUTH from '../constants/authorization';\nimport Encryption, { deleteInstance } from '../core/Encryption';\nimport store from '../store/index';\nimport { fetch } from './servers';\nimport { fetch as fetchUsers } from './users';\nimport { compileMessage } from '../utils/messages';\n\n\n/**\n * Save configuration to file\n * @param {bool} closeFileOnSuccess If set, it redirects to login page and dispatch close action\n */\nexport const save = (closeFileOnSuccess = false) => (dispatch) => {\n    const state = store.getState();\n    // Get all necessary data from store\n    const file = state.auth.file;\n    const servers = state.servers.list.toArray();\n\n    let users = {};\n    if (state.users.list) {\n        users = state.users.list.toJS();\n    }\n\n    const encryption = new Encryption(file.filename, file.password);\n\n    // Save data object to file\n    encryption.save({\n        servers, users,\n    }).then(() => {\n        toastr.success('Authorization', 'Successfully saved file');\n        dispatch({\n            type: AUTH.SAVE_SUCCESS,\n            payload: null,\n        });\n\n        if (closeFileOnSuccess) {\n            dispatch({\n                type: AUTH.CLOSE,\n            });\n            dispatch(push('/login'));\n        }\n    }).catch((e) => {\n        toastr.error('Authorization', compileMessage('Problem during file save', e));\n        dispatch({\n            type: AUTH.SAVE_FAILURE,\n            payload: null,\n        });\n    });\n};\n\nexport const addRecent = (filename) => {\n    let previousConfigFiles = settings.get('recent_config_files') || [];\n    previousConfigFiles.unshift(filename);\n    previousConfigFiles = slice(filter(uniq(previousConfigFiles), x => !!x), 0, 5);\n    settings.set('recent_config_files', previousConfigFiles);\n};\n\nexport const load = (file, filename) => (dispatch) => {\n    // Try to open selected file and load it\n    try {\n        const encryption = new Encryption(filename, file.password);\n        encryption.read().then((data) => {\n            dispatch(fetch(data.servers));\n            dispatch(fetchUsers(data.users));\n            dispatch({\n                type: AUTH.LOAD_SUCCESS,\n                payload: null,\n            });\n            toastr.success('Authorization', 'Successfully loaded data');\n            addRecent(filename);\n            dispatch(push('/'));\n        }).catch((e) => {\n            throw e;\n        });\n    } catch (e) {\n        dispatch({\n            type: AUTH.LOAD_FAILURE,\n            payload: null,\n        });\n        toastr.error('Authorization', compileMessage('Problem during file opening', e));\n    }\n};\n\nexport const newFile = file => (dispatch) => {\n    const encryption = new Encryption(file.filename, file.password, false);\n\n    // Create actual file and save initial encrypted empty json\n    encryption.save({}, 'w').then(() => {\n        dispatch({\n            type: AUTH.NEW,\n            payload: { ...file },\n        });\n        toastr.success('Authorization', 'Successfully created new file');\n        addRecent(file.filename);\n        dispatch(push('/'));\n    }).catch((e) => {\n        toastr.error('Authorization', compileMessage('Problem during file creation', e));\n    });\n};\n\nexport const openFilePassword = inputFilename => (dispatch) => {\n    const file = {};\n    const filename = [].concat(inputFilename)[0];\n\n    dispatch(swal({\n        title: 'Password',\n        type: 'input',\n        inputType: 'password',\n        inputPlaceholder: 'Password...',\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        text: 'Type password for chosen file',\n        showCancelButton: true,\n        closeOnConfirm: true,\n        onConfirm: (password) => {\n            if (!password) {\n                toastr.error('Authorization', 'Invalid password');\n                return;\n            }\n\n            file.password = password;\n            dispatch({\n                type: AUTH.OPEN,\n                payload: {\n                    ...file,\n                    filename,\n                },\n            });\n            dispatch(load(file, filename));\n        },\n        onCancel: () => {\n        },\n        allowOutsideClick: true,\n        onOutsideClick: () => {\n        },\n        onEscapeKey: () => {\n        },\n    }));\n};\n\nexport const openFile = () => (dispatch) => {\n    remote.dialog.showOpenDialog(remote.getCurrentWindow(), {\n        properties: ['openFile'],\n    }, (filename) => {\n        if (!filename) {\n            return;\n        }\n\n        dispatch(openFilePassword(filename));\n    });\n};\n\nexport const fetchRecent = () => (dispatch) => {\n    dispatch({\n        type: AUTH.FETCH_RECENT,\n        payload: settings.get('recent_config_files') || [],\n    });\n};\n\n\nexport const closeFile = () => (dispatch) => {\n    dispatch(save(true));\n    dispatch({\n        type: AUTH.CLEAR_STATE,\n    });\n    deleteInstance();\n};\n",
    "static": true,
    "longname": "src/actions/authorization.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "function",
    "name": "save",
    "memberof": "src/actions/authorization.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/authorization.js~save",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/authorization.js",
    "importStyle": "{save}",
    "description": "Save configuration to file",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "bool"
        ],
        "spread": false,
        "optional": false,
        "name": "closeFileOnSuccess",
        "description": "If set, it redirects to login page and dispatch close action"
      }
    ]
  },
  {
    "__docId__": 2,
    "kind": "function",
    "name": "addRecent",
    "memberof": "src/actions/authorization.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/authorization.js~addRecent",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/authorization.js",
    "importStyle": "{addRecent}",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "filename",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 3,
    "kind": "function",
    "name": "load",
    "memberof": "src/actions/authorization.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/authorization.js~load",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/authorization.js",
    "importStyle": "{load}",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "file",
        "types": [
          "*"
        ]
      },
      {
        "name": "filename",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 4,
    "kind": "function",
    "name": "newFile",
    "memberof": "src/actions/authorization.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/authorization.js~newFile",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/authorization.js",
    "importStyle": "{newFile}",
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "file",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 5,
    "kind": "function",
    "name": "openFilePassword",
    "memberof": "src/actions/authorization.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/authorization.js~openFilePassword",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/authorization.js",
    "importStyle": "{openFilePassword}",
    "description": null,
    "lineNumber": 107,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "inputFilename",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 6,
    "kind": "function",
    "name": "openFile",
    "memberof": "src/actions/authorization.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/authorization.js~openFile",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/authorization.js",
    "importStyle": "{openFile}",
    "description": null,
    "lineNumber": 147,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 7,
    "kind": "function",
    "name": "fetchRecent",
    "memberof": "src/actions/authorization.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/authorization.js~fetchRecent",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/authorization.js",
    "importStyle": "{fetchRecent}",
    "description": null,
    "lineNumber": 159,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 8,
    "kind": "function",
    "name": "closeFile",
    "memberof": "src/actions/authorization.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/authorization.js~closeFile",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/authorization.js",
    "importStyle": "{closeFile}",
    "description": null,
    "lineNumber": 167,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 9,
    "kind": "file",
    "name": "src/actions/logs.js",
    "content": "import { isObject } from 'lodash';\nimport moment from 'moment';\nimport uuid from 'uuid';\nimport * as LOG from '../constants/logs';\n\nexport const add = (inputMessage, level, module = 'APP') => {\n    const time = moment().format('YYYY-MM-DD H:mm:ss.SS');\n    let message = inputMessage;\n\n    switch (level) {\n        case LOG.LEVEL.WARNING:\n            console.warn(message);\n            break;\n        case LOG.LEVEL.ERROR:\n            console.error(message);\n            break;\n        default:\n            console.log(message);\n    }\n\n    if (isObject(message)) {\n        if (message.message) {\n            message = message.message;\n        } else if (message.command) {\n            message = JSON.stringify(message, null, 2);\n        } else {\n            console.error(message);\n        }\n    }\n\n    message = message.replace(/\\\\n/g, '\\n').replace(/\\\\t/g, '\\t').replace(/\\\\r/g, '\\r');\n\n    return {\n        type: LOG.ADD,\n        payload: {\n            id: uuid.v1(),\n            message,\n            level,\n            module,\n            time,\n        },\n    };\n};\n\nexport const collapse = () => ({\n    type: LOG.TOGGLE_COLLAPSE,\n});\n\n\nexport const clear = () => ({\n    type: LOG.CLEAR,\n});\n",
    "static": true,
    "longname": "src/actions/logs.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 10,
    "kind": "function",
    "name": "add",
    "memberof": "src/actions/logs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/logs.js~add",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/logs.js",
    "importStyle": "{add}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "inputMessage",
        "types": [
          "*"
        ]
      },
      {
        "name": "level",
        "types": [
          "*"
        ]
      },
      {
        "name": "module",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "APP",
        "defaultValue": "APP"
      }
    ],
    "return": {
      "types": [
        "{\"type\": *, \"payload\": *}"
      ]
    }
  },
  {
    "__docId__": 11,
    "kind": "function",
    "name": "collapse",
    "memberof": "src/actions/logs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/logs.js~collapse",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/logs.js",
    "importStyle": "{collapse}",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 12,
    "kind": "function",
    "name": "clear",
    "memberof": "src/actions/logs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/logs.js~clear",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/logs.js",
    "importStyle": "{clear}",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 13,
    "kind": "file",
    "name": "src/actions/servers.js",
    "content": "import { push } from 'react-router-redux';\nimport uuid from 'uuid';\nimport os from 'os';\nimport { toastr } from 'react-redux-toastr';\nimport { swal } from 'react-redux-sweetalert';\nimport { spawn } from 'child_process';\nimport { capitalize, lowerCase } from 'lodash';\nimport store from '../store/index';\nimport * as SERVER from '../constants/servers';\nimport SSH from '../core/SSH';\nimport { add as addLog } from '../actions/logs';\nimport * as LOG from '../constants/logs';\nimport { save } from './authorization';\nimport ConfigurationReader from '../core/ConfigurationReader';\nimport ConfigurationGenerator from '../core/ConfigurationGenerator';\nimport { compileMessage } from '../utils/messages';\nimport { getServer } from '../selectors/servers';\n\nexport const fetch = servers => ({\n    type: SERVER.FETCH,\n    payload: servers,\n});\n\nconst addSuccess = server => (dispatch) => {\n    dispatch({\n        type: SERVER.ADD_SUCCESS,\n        payload: {\n            server,\n        },\n    });\n    dispatch(save());\n};\n\nexport const add = inputServer => (dispatch) => {\n    const server = { ...inputServer, id: uuid.v1() };\n    dispatch(addSuccess(server));\n    dispatch(push(`/server/show/${server.id}`));\n};\n\nconst editSuccess = server => (dispatch) => {\n    dispatch({\n        type: SERVER.EDIT_SUCCESS,\n        payload: {\n            server,\n        },\n    });\n    dispatch(save());\n};\n\nexport const edit = server => (dispatch) => {\n    dispatch(editSuccess(server));\n    dispatch(push(`/server/show/${server.id}`));\n};\n\nexport const setupSuccess = server => ({\n    type: SERVER.SETUP_SUCCESS,\n    payload: {\n        server,\n    },\n});\n\nexport const setupFailure = server => ({\n    type: SERVER.SETUP_FAILURE,\n    payload: {\n        server,\n    },\n});\n\nexport const setup = server => (dispatch) => {\n    let ssh;\n    dispatch({ type: SERVER.SETUP, payload: { server } });\n\n    try {\n        ssh = new SSH(dispatch, server);\n    } catch (e) {\n        dispatch(addLog('Server setup failure', LOG.LEVEL.ERROR, 'SERVER'));\n        dispatch(addLog(compileMessage(e), LOG.LEVEL.ERROR, 'SSH'));\n        toastr.error('Server', 'Failure during server setup');\n        return dispatch(setupFailure(server));\n    }\n\n    ssh.setupServer()\n        .then(() => {\n            dispatch(addLog('Server setup success', LOG.LEVEL.INFO, 'SERVER'));\n            toastr.success('Server', 'Successful server setup');\n            return dispatch(setupSuccess(server));\n        })\n        .catch(() => {\n            dispatch(addLog('Server setup failure', LOG.LEVEL.ERROR, 'SERVER'));\n            toastr.error('Server', 'Failure during server setup');\n            return dispatch(setupFailure(server));\n        });\n};\n\nexport const updateStatus = ({ id }) => (dispatch) => {\n    const state = store.getState();\n    const server = getServer(state, { params: { id } });\n\n    dispatch(addLog(`Checking server (${server.name}) status`, LOG.LEVEL.INFO, 'SERVER'));\n    dispatch({\n        type: SERVER.STATUS_FETCH_START,\n        payload: {\n            serverId: server.id,\n        },\n    });\n\n    let ssh;\n    let payload = {\n        serverId: server.id,\n        server: {\n            level: SERVER.STATUS.UNKNOWN,\n            description: null,\n            details: null,\n        },\n        vpn: {\n            level: SERVER.STATUS.UNKNOWN,\n            description: null,\n            details: null,\n        },\n        users: {\n            level: SERVER.STATUS.UNKNOWN,\n            description: null,\n            details: null,\n        },\n        config: {\n            different: null,\n        },\n    };\n\n    try {\n        ssh = new SSH(dispatch, server);\n        payload.server.level = SERVER.STATUS.OK;\n    } catch (e) {\n        dispatch(addLog(`Error getting server status (${server.name})`, LOG.LEVEL.ERROR, 'SERVER'));\n        dispatch(addLog(compileMessage(e), LOG.LEVEL.ERROR, 'SERVER'));\n        return dispatch({\n            type: SERVER.STATUS_CHANGE,\n            payload,\n        });\n    }\n\n    ssh.statistics.getMachineStatus().then((details) => {\n        payload.server.details = details;\n    }).catch((e) => {\n        payload.server.details = compileMessage('Could not get details', e);\n    }).then(() => ssh.statistics.getVpnStatus().then((data) => {\n        payload = {\n            ...payload,\n            vpn: {\n                ...data,\n            },\n        };\n    }).catch((e) => {\n        payload = {\n            ...payload,\n            server: {\n                level: SERVER.STATUS.ERROR,\n                description: 'Error during VPN status check',\n                details: compileMessage(e),\n            },\n        };\n    }))\n        .then(() => ssh.statistics.getUsersStats().then(({ level, description, details }) => {\n            payload = {\n                ...payload,\n                users: {\n                    level, description, details,\n                },\n            };\n        }).catch((e) => {\n            payload = {\n                ...payload,\n                users: {\n                    level: SERVER.STATUS.ERROR,\n                    description: 'Error during getting VPN statistics',\n                    details: compileMessage(e),\n                },\n            };\n        }))\n        .then(() => ssh.getConfigFromServer().then((response) => {\n            const config = ConfigurationGenerator.generate(server.config);\n            payload = {\n                ...payload,\n                config: {\n                    different: config !== response.stdout,\n                },\n            };\n        }).catch(() => null))\n        .then(() => dispatch({ type: SERVER.STATUS_CHANGE, payload }))\n        .catch(() => dispatch({ type: SERVER.STATUS_CHANGE, payload }));\n};\n\nexport const preview = config => (dispatch) => {\n    dispatch(swal({\n        title: 'Preview configuration',\n        text: `<pre>${config}</pre>`,\n        html: true,\n    }));\n};\n\nexport const handleSSHTerminal = server => (dispatch) => {\n    if (os.platform() !== 'linux') {\n        return;\n    }\n\n    let sshCommand;\n    if (server.key) {\n        sshCommand = `ssh -i \"${server.key}\" ${server.username}@${server.host} -p ${server.port}`;\n    } else {\n        sshCommand = `ssh ${server.username}@${server.host} -p ${server.port}`;\n    }\n\n    try {\n        spawn('x-terminal-emulator', ['-e', 'bash', '-c', `${sshCommand};bash`]);\n    } catch (e) {\n        dispatch(addLog(compileMessage('Could not open ssh in terminal', e)));\n    }\n};\n\nconst confirmPreview = (server, config, callback = null) => (dispatch) => {\n    setTimeout(() => dispatch(swal({\n        title: 'Preview configuration',\n        text: `<pre>${ConfigurationGenerator.generate(config)}</pre>`,\n        html: true,\n        showCancelButton: true,\n        closeOnConfirm: true,\n        onCancel: () => dispatch(setupSuccess(server)),\n        allowOutsideClick: true,\n        onOutsideClick: () => dispatch(setupSuccess(server)),\n        onEscapeKey: () => dispatch(setupSuccess(server)),\n        onConfirm: () => {\n            dispatch({\n                type: SERVER.UPDATE_CONFIG,\n                payload: {\n                    server,\n                    config,\n                },\n            });\n            dispatch(setupSuccess(server));\n            if (callback) {\n                callback();\n            }\n            return dispatch(save());\n        },\n    })), 200);\n};\n\nexport const loadConfigFromServer = (server, callback = null) => (dispatch) => {\n    dispatch(swal({\n        title: 'Config path',\n        type: 'input',\n        inputValue: '/etc/openvpn/server.conf',\n        inputPlaceholder: 'Path...',\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        text: 'Type path of config file on server',\n        showCancelButton: true,\n        closeOnConfirm: true,\n        onConfirm: (path) => {\n            let ssh;\n            dispatch({ type: SERVER.SETUP, payload: { server } });\n\n            try {\n                ssh = new SSH(dispatch, server);\n            } catch (e) {\n                dispatch(addLog(e, LOG.LEVEL.ERROR, 'SSH'));\n                toastr.error('Server', 'Failure during getting file');\n                return dispatch(setupFailure(server));\n            }\n\n            ssh.catFile(path).then((response) => {\n                const configReader = new ConfigurationReader();\n                const config = configReader.read(response.stdout);\n\n                return dispatch(confirmPreview(server, config, callback));\n            }).catch((e) => {\n                dispatch(addLog(e, LOG.LEVEL.ERROR, 'SERVER'));\n                toastr.error('Server', 'Failure during getting file');\n                return dispatch(setupFailure(server));\n            });\n        },\n        onCancel: () => {},\n        allowOutsideClick: true,\n        onOutsideClick: () => {},\n        onEscapeKey: () => {},\n    }));\n};\n\nexport const loadConfigTextArea = server => (dispatch) => {\n    dispatch(swal({\n        title: 'Paste config',\n        text: '<textarea id=\\'config-text\\' class=\"sweet-alert-textarea\"></textarea>',\n        html: true,\n        inputPlaceholder: 'Paste file here...',\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        showCancelButton: true,\n        closeOnConfirm: true,\n        onConfirm: () => {\n            const val = document.getElementById('config-text').value;\n            if (val) {\n                const configReader = new ConfigurationReader();\n                const config = configReader.read(val);\n\n                return dispatch(confirmPreview(server, config));\n            }\n        },\n        onCancel: () => {},\n        allowOutsideClick: true,\n        onOutsideClick: () => {},\n        onEscapeKey: () => {},\n    }));\n};\n\n// Server actions\n\n\nconst actionDefaultError = (server, action, error) => (dispatch) => {\n    const message = `Failure during ${action} action`;\n    dispatch(addLog(message, LOG.LEVEL.ERROR, 'SERVER'));\n    if (error) {\n        dispatch(addLog(compileMessage(error), LOG.LEVEL.ERROR, 'SSH'));\n    }\n    toastr.error('Server', message);\n    return dispatch(setupFailure(server));\n};\n\nconst runAction = (action, server) => (dispatch) => {\n    let ssh;\n    dispatch({ type: SERVER.SETUP, payload: { server } });\n\n    try {\n        ssh = new SSH(dispatch, server);\n    } catch (e) {\n        dispatch(actionDefaultError(server, action, e));\n        return Promise.reject(null);\n    }\n\n    return ssh.runAction(action);\n};\n\nexport const rebootServer = server => (dispatch) => {\n    const action = 'reboot';\n\n    dispatch(runAction(action, server)).then(() => {\n        toastr.success('Server', 'Reboot command sent');\n        dispatch(setupSuccess(server));\n    }).catch((e) => {\n        if (e.stderr && e.stderr.indexOf('password for') !== -1) {\n            toastr.success('Server', 'Reboot command sent');\n            return dispatch(setupSuccess(server));\n        }\n        return dispatch(actionDefaultError(server, 'reboot', e));\n    });\n};\n\nexport const vpnAction = (server, action) => (dispatch) => {\n    const successMessage = `${capitalize(lowerCase(action))} command sent`;\n\n    dispatch(runAction(action, server)).then(() => {\n        toastr.success('Server', successMessage);\n        dispatch(setupSuccess(server));\n    }).catch(e => dispatch(actionDefaultError(server, action, e)));\n};\n\nexport const reuploadConfig = (server, callback = null) => (dispatch) => {\n    const successMessage = 'Config successfully uploaded and service restarted';\n    const action = 'uploadConfig';\n\n    dispatch(runAction(action, server)).then(() => {\n        toastr.success('Server', successMessage);\n        dispatch(setupSuccess(server));\n        if (callback) {\n            callback();\n        }\n    }).catch(e => dispatch(actionDefaultError(server, action, e)));\n};\n",
    "static": true,
    "longname": "src/actions/servers.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 14,
    "kind": "function",
    "name": "fetch",
    "memberof": "src/actions/servers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/servers.js~fetch",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/servers.js",
    "importStyle": "{fetch}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "servers",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 15,
    "kind": "function",
    "name": "addSuccess",
    "memberof": "src/actions/servers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/servers.js~addSuccess",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/actions/servers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 16,
    "kind": "function",
    "name": "add",
    "memberof": "src/actions/servers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/servers.js~add",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/servers.js",
    "importStyle": "{add}",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "inputServer",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 17,
    "kind": "function",
    "name": "editSuccess",
    "memberof": "src/actions/servers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/servers.js~editSuccess",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/actions/servers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 18,
    "kind": "function",
    "name": "edit",
    "memberof": "src/actions/servers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/servers.js~edit",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/servers.js",
    "importStyle": "{edit}",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 19,
    "kind": "function",
    "name": "setupSuccess",
    "memberof": "src/actions/servers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/servers.js~setupSuccess",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/servers.js",
    "importStyle": "{setupSuccess}",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 20,
    "kind": "function",
    "name": "setupFailure",
    "memberof": "src/actions/servers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/servers.js~setupFailure",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/servers.js",
    "importStyle": "{setupFailure}",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 21,
    "kind": "function",
    "name": "setup",
    "memberof": "src/actions/servers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/servers.js~setup",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/servers.js",
    "importStyle": "{setup}",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 22,
    "kind": "function",
    "name": "updateStatus",
    "memberof": "src/actions/servers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/servers.js~updateStatus",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/servers.js",
    "importStyle": "{updateStatus}",
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"id\": *}"
        ],
        "defaultRaw": {
          "id": null
        },
        "defaultValue": "{\"id\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 23,
    "kind": "function",
    "name": "preview",
    "memberof": "src/actions/servers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/servers.js~preview",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/servers.js",
    "importStyle": "{preview}",
    "description": null,
    "lineNumber": 193,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "config",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 24,
    "kind": "function",
    "name": "handleSSHTerminal",
    "memberof": "src/actions/servers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/servers.js~handleSSHTerminal",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/servers.js",
    "importStyle": "{handleSSHTerminal}",
    "description": null,
    "lineNumber": 201,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 25,
    "kind": "function",
    "name": "confirmPreview",
    "memberof": "src/actions/servers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/servers.js~confirmPreview",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/actions/servers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 220,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      },
      {
        "name": "config",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      }
    ]
  },
  {
    "__docId__": 26,
    "kind": "function",
    "name": "loadConfigFromServer",
    "memberof": "src/actions/servers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/servers.js~loadConfigFromServer",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/servers.js",
    "importStyle": "{loadConfigFromServer}",
    "description": null,
    "lineNumber": 248,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      }
    ]
  },
  {
    "__docId__": 27,
    "kind": "function",
    "name": "loadConfigTextArea",
    "memberof": "src/actions/servers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/servers.js~loadConfigTextArea",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/servers.js",
    "importStyle": "{loadConfigTextArea}",
    "description": null,
    "lineNumber": 289,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 28,
    "kind": "function",
    "name": "actionDefaultError",
    "memberof": "src/actions/servers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/servers.js~actionDefaultError",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/actions/servers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 318,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      },
      {
        "name": "error",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 29,
    "kind": "function",
    "name": "runAction",
    "memberof": "src/actions/servers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/servers.js~runAction",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/actions/servers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 328,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "action",
        "types": [
          "*"
        ]
      },
      {
        "name": "server",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 30,
    "kind": "function",
    "name": "rebootServer",
    "memberof": "src/actions/servers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/servers.js~rebootServer",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/servers.js",
    "importStyle": "{rebootServer}",
    "description": null,
    "lineNumber": 342,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 31,
    "kind": "function",
    "name": "vpnAction",
    "memberof": "src/actions/servers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/servers.js~vpnAction",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/servers.js",
    "importStyle": "{vpnAction}",
    "description": null,
    "lineNumber": 357,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 32,
    "kind": "function",
    "name": "reuploadConfig",
    "memberof": "src/actions/servers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/servers.js~reuploadConfig",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/servers.js",
    "importStyle": "{reuploadConfig}",
    "description": null,
    "lineNumber": 366,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      }
    ]
  },
  {
    "__docId__": 33,
    "kind": "file",
    "name": "src/actions/users.js",
    "content": "import { toastr } from 'react-redux-toastr';\nimport { swal } from 'react-redux-sweetalert';\nimport 'sweetalert/dist/sweetalert.css';\nimport * as USER from '../constants/users';\nimport SSH from '../core/SSH';\nimport { add as addLog } from './logs';\nimport { setupSuccess as setupSuccessServer, setupFailure as setupFailureServer } from './servers';\nimport { save } from './authorization';\nimport * as LOG from '../constants/logs';\nimport * as SERVER from '../constants/servers';\nimport { compileMessage } from '../utils/messages';\n\nexport const add = user => (dispatch) => {\n    dispatch({\n        type: USER.ADD,\n        payload: user,\n    });\n    dispatch(save());\n};\n\nexport const edit = user => (dispatch) => {\n    dispatch({\n        type: USER.EDIT,\n        payload: user,\n    });\n    dispatch(save());\n};\n\nconst confirmedRemove = (server, user) => ({\n    type: USER.REMOVE,\n    payload: {\n        serverId: server.id,\n        id: user.id,\n    },\n});\n\nconst removeUserFiles = (server, user) => (dispatch) => {\n    dispatch({ type: SERVER.SETUP, payload: { server } });\n    let ssh;\n\n    try {\n        ssh = new SSH(dispatch, server);\n    } catch (e) {\n        dispatch(addLog('Delete failure', LOG.LEVEL.ERROR, 'FILE'));\n        dispatch(addLog(compileMessage(e), LOG.LEVEL.ERROR, 'SSH'));\n        toastr.error('User', compileMessage(`There was a problem during deleting user (${user.name}) files`, e));\n        return dispatch(setupFailureServer(server));\n    }\n\n    ssh.deleteClientFiles(user).then(() => {\n        toastr.success('User', `Successfully deleted user (${user.name}) files`);\n        dispatch(confirmedRemove(server, user));\n        dispatch(setupSuccessServer(server));\n        dispatch(save());\n    }).catch((e) => {\n        toastr.error('User', compileMessage(`There was a problem during deleting user (${user.name}) files`, e));\n        dispatch(setupFailureServer(server));\n    });\n};\n\nexport const remove = (server, user) => (dispatch) => {\n    dispatch(swal({\n        title: 'Delete',\n        type: 'warning',\n        confirmButtonText: 'Yes',\n        cancelButtonText: 'No',\n        text: 'Do you want do delete all files from server for user?',\n        showCancelButton: true,\n        closeOnConfirm: true,\n        onConfirm: () => {\n            dispatch(removeUserFiles(server, user));\n        },\n        onCancel: () => {\n            dispatch(confirmedRemove(server, user));\n            dispatch(save());\n        },\n        allowOutsideClick: true,\n        onOutsideClick: () => {\n        },\n        onEscapeKey: () => {\n        },\n    }));\n};\n\nconst setupSuccess = (user, serverId) => ({\n    type: USER.SETUP_SUCCESS,\n    payload: {\n        user,\n        serverId,\n    },\n});\n\nconst setupFailure = user => ({\n    type: USER.SETUP_FAILURE,\n    payload: {\n        user,\n    },\n});\n\nconst setupClientPromise = (dispatch, server, user) => new Promise((resolve, reject) => {\n    let ssh;\n    try {\n        ssh = new SSH(dispatch, server);\n    } catch (e) {\n        dispatch(addLog(compileMessage(e), LOG.LEVEL.ERROR, 'SSH'));\n        return reject();\n    }\n\n    ssh.setupClient(user)\n            .then(resolve)\n            .catch(reject);\n});\n\nconst setupClientPromiseResolve = (dispatch, server, user, changeServerProgress) => {\n    dispatch({ type: USER.SETUP, payload: { server, user } });\n    return setupClientPromise(dispatch, server, user)\n        .then(() => {\n            dispatch(addLog(`Client (${user.name}) setup success`, LOG.LEVEL.INFO, 'USER'));\n            toastr.success('User', `Successful client setup (${user.name})`);\n            if (changeServerProgress) {\n                dispatch(setupSuccessServer(server));\n            }\n            dispatch(setupSuccess(user, server.id));\n            return dispatch(save());\n        })\n        .catch(() => {\n            dispatch(addLog(`Client (${user.name}) setup failure`, LOG.LEVEL.ERROR, 'USER'));\n            toastr.error('User', `Failure during client setup (${user.name})`);\n            if (changeServerProgress) {\n                dispatch(setupFailureServer(server));\n            }\n            return dispatch(setupFailure(user));\n        });\n};\n\nexport const setupClient = (server, user) => (dispatch) => {\n    dispatch({ type: SERVER.SETUP, payload: { server } });\n    setupClientPromiseResolve(dispatch, server, user, true);\n};\n\nconst setupAllClientsRecursive = (dispatch, server, users) => {\n    const user = users[0];\n    if (user) {\n        return setupClientPromiseResolve(dispatch, server, user, false)\n            .then(() => setupAllClientsRecursive(dispatch, server, users.splice(1)))\n            .catch(e => dispatch(addLog(compileMessage(`Failure during client (${user.name}) setup:`, e))));\n    }\n};\n\nexport const setupAllClients = (server, users) => (dispatch) => {\n    dispatch({ type: SERVER.SETUP, payload: { server } });\n    setupAllClientsRecursive(dispatch, server, users).then(() => {\n        dispatch(setupSuccessServer(server));\n    }).catch(() => {\n        dispatch(setupFailureServer(server));\n    });\n};\n\n\nexport const downloadConfiguration = (server, user) => (dispatch) => {\n    dispatch({ type: SERVER.SETUP, payload: { server } });\n    let ssh;\n\n    try {\n        ssh = new SSH(dispatch, server);\n    } catch (e) {\n        dispatch(addLog('Download failure', LOG.LEVEL.ERROR, 'FILE'));\n        dispatch(addLog(compileMessage(e), LOG.LEVEL.ERROR, 'SSH'));\n        toastr.error('User', 'Failure during file download');\n        return dispatch(setupFailureServer(server));\n    }\n\n    ssh.downloadConfiguration(user).then(() => {\n        toastr.success('Download', 'Successfully downloaded ovpn file');\n        dispatch(setupSuccessServer(server));\n    }).catch((e) => {\n        toastr.error('Download', compileMessage('There was a problem during file download', e));\n        dispatch(addLog(e, LOG.LEVEL.ERROR, 'FILE'));\n        dispatch(setupFailureServer(server));\n    });\n};\n\nexport const fetch = servers => ({\n    type: USER.FETCH,\n    payload: servers,\n});\n",
    "static": true,
    "longname": "src/actions/users.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 34,
    "kind": "function",
    "name": "add",
    "memberof": "src/actions/users.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/users.js~add",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/users.js",
    "importStyle": "{add}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "user",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 35,
    "kind": "function",
    "name": "edit",
    "memberof": "src/actions/users.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/users.js~edit",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/users.js",
    "importStyle": "{edit}",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "user",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 36,
    "kind": "function",
    "name": "confirmedRemove",
    "memberof": "src/actions/users.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/users.js~confirmedRemove",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/actions/users.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      },
      {
        "name": "user",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 37,
    "kind": "function",
    "name": "removeUserFiles",
    "memberof": "src/actions/users.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/users.js~removeUserFiles",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/actions/users.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      },
      {
        "name": "user",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 38,
    "kind": "function",
    "name": "remove",
    "memberof": "src/actions/users.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/users.js~remove",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/users.js",
    "importStyle": "{remove}",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      },
      {
        "name": "user",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 39,
    "kind": "function",
    "name": "setupSuccess",
    "memberof": "src/actions/users.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/users.js~setupSuccess",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/actions/users.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "user",
        "types": [
          "*"
        ]
      },
      {
        "name": "serverId",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 40,
    "kind": "function",
    "name": "setupFailure",
    "memberof": "src/actions/users.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/users.js~setupFailure",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/actions/users.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "user",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 41,
    "kind": "function",
    "name": "setupClientPromise",
    "memberof": "src/actions/users.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/users.js~setupClientPromise",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/actions/users.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "dispatch",
        "types": [
          "*"
        ]
      },
      {
        "name": "server",
        "types": [
          "*"
        ]
      },
      {
        "name": "user",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 42,
    "kind": "function",
    "name": "setupClientPromiseResolve",
    "memberof": "src/actions/users.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/users.js~setupClientPromiseResolve",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/actions/users.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 114,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "dispatch",
        "types": [
          "*"
        ]
      },
      {
        "name": "server",
        "types": [
          "*"
        ]
      },
      {
        "name": "user",
        "types": [
          "*"
        ]
      },
      {
        "name": "changeServerProgress",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 43,
    "kind": "function",
    "name": "setupClient",
    "memberof": "src/actions/users.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/users.js~setupClient",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/users.js",
    "importStyle": "{setupClient}",
    "description": null,
    "lineNumber": 136,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      },
      {
        "name": "user",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 44,
    "kind": "function",
    "name": "setupAllClientsRecursive",
    "memberof": "src/actions/users.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/users.js~setupAllClientsRecursive",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/actions/users.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 141,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "dispatch",
        "types": [
          "*"
        ]
      },
      {
        "name": "server",
        "types": [
          "*"
        ]
      },
      {
        "name": "users",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 45,
    "kind": "function",
    "name": "setupAllClients",
    "memberof": "src/actions/users.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/users.js~setupAllClients",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/users.js",
    "importStyle": "{setupAllClients}",
    "description": null,
    "lineNumber": 150,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      },
      {
        "name": "users",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 46,
    "kind": "function",
    "name": "downloadConfiguration",
    "memberof": "src/actions/users.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/users.js~downloadConfiguration",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/users.js",
    "importStyle": "{downloadConfiguration}",
    "description": null,
    "lineNumber": 160,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      },
      {
        "name": "user",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 47,
    "kind": "function",
    "name": "fetch",
    "memberof": "src/actions/users.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/actions/users.js~fetch",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/actions/users.js",
    "importStyle": "{fetch}",
    "description": null,
    "lineNumber": 183,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "servers",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/components/authorization/Authorization.jsx",
    "content": "import React from 'react';\nimport { Container } from 'semantic-ui-react';\n\n/**\n * Wrapper component for other authorization components\n * @param {node} children Children components\n */\nexport default ({ children }) => (\n  <Container>{children}</Container>\n);\n",
    "static": true,
    "longname": "src/components/authorization/Authorization.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "function",
    "name": "Authorization",
    "memberof": "src/components/authorization/Authorization.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/authorization/Authorization.jsx~Authorization",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/authorization/Authorization.jsx",
    "importStyle": "Authorization",
    "description": "Wrapper component for other authorization components",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "node"
        ],
        "spread": false,
        "optional": false,
        "name": "children",
        "description": "Children components"
      }
    ]
  },
  {
    "__docId__": 50,
    "kind": "file",
    "name": "src/components/authorization/LoginWrapper.jsx",
    "content": "import React from 'react';\nimport { Card, Grid } from 'semantic-ui-react';\nimport './Login.scss';\n\n/**\n * Wrapper for authorization containers\n * @param {string|custom} header Header component\n * @param {node} children Children components\n */\nexport default ({ header, children }) => (\n  <Grid verticalAlign=\"middle\" centered className=\"loginGrid\">\n    <Grid.Column>\n      <Card className=\"login\" raised>\n        <Card.Content>\n          <Card.Header>\n            {header}\n          </Card.Header>\n        </Card.Content>\n        <Card.Content>\n          {children}\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  </Grid>\n);\n",
    "static": true,
    "longname": "src/components/authorization/LoginWrapper.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 51,
    "kind": "function",
    "name": "LoginWrapper",
    "memberof": "src/components/authorization/LoginWrapper.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/authorization/LoginWrapper.jsx~LoginWrapper",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/authorization/LoginWrapper.jsx",
    "importStyle": "LoginWrapper",
    "description": "Wrapper for authorization containers",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "custom"
        ],
        "spread": false,
        "optional": false,
        "name": "header",
        "description": "Header component"
      },
      {
        "nullable": null,
        "types": [
          "node"
        ],
        "spread": false,
        "optional": false,
        "name": "children",
        "description": "Children components"
      }
    ]
  },
  {
    "__docId__": 52,
    "kind": "file",
    "name": "src/components/authorization/RecentFiles.jsx",
    "content": "import React from 'react';\nimport { Divider, List } from 'semantic-ui-react';\nimport { map } from 'lodash';\n\n/**\n * Displays list of recently opened configuration files\n * @param {string[]} recentFiles Recently opened configuration files\n * @param {function} handleClick Handles click event\n */\nexport default ({ recentFiles, handleClick }) => (\n  <div>\n    <Divider horizontal>Recent files</Divider>\n    <List link>\n      {map(recentFiles, (filename, key) => (\n        <List.Item as=\"a\" key={key} onClick={() => handleClick(filename)}>\n          {filename}\n        </List.Item>\n            ))}\n    </List>\n  </div>\n);\n",
    "static": true,
    "longname": "src/components/authorization/RecentFiles.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 53,
    "kind": "function",
    "name": "RecentFiles",
    "memberof": "src/components/authorization/RecentFiles.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/authorization/RecentFiles.jsx~RecentFiles",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/authorization/RecentFiles.jsx",
    "importStyle": "RecentFiles",
    "description": "Displays list of recently opened configuration files",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "recentFiles",
        "description": "Recently opened configuration files"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "handleClick",
        "description": "Handles click event"
      }
    ]
  },
  {
    "__docId__": 54,
    "kind": "file",
    "name": "src/components/form/Actions.jsx",
    "content": "import React from 'react';\nimport { Button } from 'semantic-ui-react';\n\n/**\n * Displays unified buttons for forms\n * @param {bool} submitting Form is currently submitting\n * @param {function} reset Handles reset action\n * @param {node} children Other components to display\n */\nexport default ({ submitting, reset, children }) => (\n  <div>\n    <Button primary type=\"submit\" disabled={submitting} loading={submitting}>\n        Submit\n    </Button>\n    <Button secondary disabled={submitting} onClick={reset}>Clear</Button>\n    {children}\n  </div>\n);\n",
    "static": true,
    "longname": "src/components/form/Actions.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 55,
    "kind": "function",
    "name": "Actions",
    "memberof": "src/components/form/Actions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/form/Actions.jsx~Actions",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/form/Actions.jsx",
    "importStyle": "Actions",
    "description": "Displays unified buttons for forms",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "bool"
        ],
        "spread": false,
        "optional": false,
        "name": "submitting",
        "description": "Form is currently submitting"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "reset",
        "description": "Handles reset action"
      },
      {
        "nullable": null,
        "types": [
          "node"
        ],
        "spread": false,
        "optional": false,
        "name": "children",
        "description": "Other components to display"
      }
    ]
  },
  {
    "__docId__": 56,
    "kind": "file",
    "name": "src/components/form/Checkbox.jsx",
    "content": "import React from 'react';\nimport { Form, Checkbox } from 'semantic-ui-react';\nimport Error from './Error';\n\n/**\n * Function that handles change event\n * @param {function} change Dispatches change action\n */\nconst handleChange = change => (event, { name, checked }) => change(name, checked);\n\n/**\n * Displays checkbox input\n * @param {object} input Input specific attributes\n * @param {string|custom} label Label for checkbox\n * @param {bool} required Set if input is required\n * @param {function} change Dispatches change action\n * @param {bool} touched Set if input was touched\n * @param {string} error Set if input is invalid\n */\nexport default ({ input, label, required, change, meta: { touched, error } }) => (\n  <Form.Field>\n    <Checkbox\n            {...input}\n            label={{ children: label }}\n            required={required}\n            onChange={handleChange(change)}\n    />\n    <Error touched={touched} error={error} />\n  </Form.Field>\n);\n",
    "static": true,
    "longname": "src/components/form/Checkbox.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 57,
    "kind": "function",
    "name": "handleChange",
    "memberof": "src/components/form/Checkbox.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/form/Checkbox.jsx~handleChange",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/components/form/Checkbox.jsx",
    "importStyle": null,
    "description": "Function that handles change event",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "change",
        "description": "Dispatches change action"
      }
    ]
  },
  {
    "__docId__": 58,
    "kind": "function",
    "name": "Checkbox",
    "memberof": "src/components/form/Checkbox.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/form/Checkbox.jsx~Checkbox",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/form/Checkbox.jsx",
    "importStyle": "Checkbox",
    "description": "Displays checkbox input",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "input",
        "description": "Input specific attributes"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "custom"
        ],
        "spread": false,
        "optional": false,
        "name": "label",
        "description": "Label for checkbox"
      },
      {
        "nullable": null,
        "types": [
          "bool"
        ],
        "spread": false,
        "optional": false,
        "name": "required",
        "description": "Set if input is required"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "change",
        "description": "Dispatches change action"
      },
      {
        "nullable": null,
        "types": [
          "bool"
        ],
        "spread": false,
        "optional": false,
        "name": "touched",
        "description": "Set if input was touched"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": "Set if input is invalid"
      }
    ]
  },
  {
    "__docId__": 59,
    "kind": "file",
    "name": "src/components/form/Error.jsx",
    "content": "import React from 'react';\nimport { Message } from 'semantic-ui-react';\n\n/**\n * Displays error in Message component\n * @param {bool} touched Set if corresponding input was touched\n * @param {string} error Message to display on error\n * @param {bool} disabled Set if corresponding input is disabled\n */\nexport default ({ touched, error, disabled }) => (\n    (touched && error && !disabled) ? (\n      <Message visible error>{error}</Message>\n    ) : null\n);\n",
    "static": true,
    "longname": "src/components/form/Error.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 60,
    "kind": "function",
    "name": "Error",
    "memberof": "src/components/form/Error.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/form/Error.jsx~Error",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/form/Error.jsx",
    "importStyle": "Error",
    "description": "Displays error in Message component",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "bool"
        ],
        "spread": false,
        "optional": false,
        "name": "touched",
        "description": "Set if corresponding input was touched"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": "Message to display on error"
      },
      {
        "nullable": null,
        "types": [
          "bool"
        ],
        "spread": false,
        "optional": false,
        "name": "disabled",
        "description": "Set if corresponding input is disabled"
      }
    ]
  },
  {
    "__docId__": 61,
    "kind": "file",
    "name": "src/components/form/File.jsx",
    "content": "import React from 'react';\nimport { Button, Dropdown } from 'semantic-ui-react';\nimport { remote } from 'electron';\nimport { isEmpty } from 'lodash';\nimport Input from './Input';\n\n/**\n * Clears file input\n * @param {function} change Dispatches change action\n * @param {string} name Input's name\n */\nconst clearFile = (change, name) => change(name, '');\n\n/**\n * Opens dialog for selecting existing file\n * @param {function} change Dispatches change action\n * @param {string} name Input's name\n */\nconst selectFile = (change, name) => {\n    remote.dialog.showOpenDialog(remote.getCurrentWindow(), {\n        properties: ['openFile'],\n    }, (filename) => {\n        if (!isEmpty(filename)) {\n            change(name, filename[0]);\n        } else {\n            clearFile(change, name);\n        }\n    });\n};\n\n/**\n * Opens dialog for selecting file's destination\n * @param {function} change Dispatches change action\n * @param {string} name Input's name\n */\nconst saveFile = (change, name) => {\n    remote.dialog.showSaveDialog(remote.getCurrentWindow(), (filename) => {\n        if (filename) {\n            change(name, filename);\n        } else {\n            clearFile(change, name);\n        }\n    });\n};\n\n/**\n * Opens dialog for picking file\n * @param {function} change Dispatches change action\n * @param {string} name Input's name\n * @param {bool} save Set if selected file needs to be created\n */\nconst filePicker = (change, name, save) => {\n    if (save) {\n        saveFile(change, name);\n    } else {\n        selectFile(change, name);\n    }\n};\n\n/**\n * Displays file input\n * @param {function} change Dispatches change action\n * @param {bool} save Set if selected file needs to be created\n * @param {object} props Other input's attributes\n */\nexport default ({ change, save, ...props }) => (\n  <Input\n        {...props}\n        type=\"text\"\n        readOnly\n        action={(\n          <Button.Group>\n            <Button onClick={() => filePicker(change, props.input.name, save)} type=\"button\">\n                    Select file\n                </Button>\n            <Dropdown\n                    button\n                    inline\n                    compact\n                    text=\" \"\n                    closeOnChange\n                    options={[\n                        { key: 'clear', icon: 'delete', text: 'Clear' },\n                    ]}\n                    onChange={() => clearFile(change, props.input.name)}\n            />\n          </Button.Group>\n        )}\n  />\n);\n",
    "static": true,
    "longname": "src/components/form/File.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 62,
    "kind": "function",
    "name": "clearFile",
    "memberof": "src/components/form/File.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/form/File.jsx~clearFile",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/components/form/File.jsx",
    "importStyle": null,
    "description": "Clears file input",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "change",
        "description": "Dispatches change action"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Input's name"
      }
    ]
  },
  {
    "__docId__": 63,
    "kind": "function",
    "name": "selectFile",
    "memberof": "src/components/form/File.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/form/File.jsx~selectFile",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/components/form/File.jsx",
    "importStyle": null,
    "description": "Opens dialog for selecting existing file",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "change",
        "description": "Dispatches change action"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Input's name"
      }
    ]
  },
  {
    "__docId__": 64,
    "kind": "function",
    "name": "saveFile",
    "memberof": "src/components/form/File.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/form/File.jsx~saveFile",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/components/form/File.jsx",
    "importStyle": null,
    "description": "Opens dialog for selecting file's destination",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "change",
        "description": "Dispatches change action"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Input's name"
      }
    ]
  },
  {
    "__docId__": 65,
    "kind": "function",
    "name": "filePicker",
    "memberof": "src/components/form/File.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/form/File.jsx~filePicker",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/components/form/File.jsx",
    "importStyle": null,
    "description": "Opens dialog for picking file",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "change",
        "description": "Dispatches change action"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Input's name"
      },
      {
        "nullable": null,
        "types": [
          "bool"
        ],
        "spread": false,
        "optional": false,
        "name": "save",
        "description": "Set if selected file needs to be created"
      }
    ]
  },
  {
    "__docId__": 66,
    "kind": "function",
    "name": "File",
    "memberof": "src/components/form/File.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/form/File.jsx~File",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/form/File.jsx",
    "importStyle": "File",
    "description": "Displays file input",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "change",
        "description": "Dispatches change action"
      },
      {
        "nullable": null,
        "types": [
          "bool"
        ],
        "spread": false,
        "optional": false,
        "name": "save",
        "description": "Set if selected file needs to be created"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "Other input's attributes"
      }
    ]
  },
  {
    "__docId__": 67,
    "kind": "file",
    "name": "src/components/form/Input.jsx",
    "content": "import React from 'react';\nimport { Form } from 'semantic-ui-react';\n\nimport Label from './Label';\nimport Error from './Error';\n\n/**\n * Displays basic input component\n * @param {object} input Input's attributes\n * @param {string|custom} label Input's label\n * @param {string} helpMessage Message with useful information for user\n * @param {string} type Input's type\n * @param {bool} required Set if input is required\n * @param {bool} readOnly Set if input is read only\n * @param {bool} disabled Set if input is disabled\n * @param {string|custom} action Button displayed beside input\n * @param {string} placeholder Placeholder text\n * @param {bool} touched Set if input is touched\n * @param {string} error Error message\n */\nexport default ({\n                    input,\n                    label,\n                    helpMessage,\n                    type,\n                    required,\n                    readOnly,\n                    disabled,\n                    action,\n                    placeholder,\n                    meta: {\n                        touched,\n                        error,\n                    },\n                }) => (\n                  <Form.Field>\n                    <Form.Input\n                        {...input}\n                        action={action}\n                        readOnly={readOnly}\n                        placeholder={placeholder || label}\n                        label={<Label helpMessage={helpMessage}>{label}</Label>}\n                        type={type}\n                        disabled={disabled}\n                        required={required}\n                    />\n                    <Error touched={touched} error={error} disabled={disabled} />\n                  </Form.Field>\n);\n",
    "static": true,
    "longname": "src/components/form/Input.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 68,
    "kind": "function",
    "name": "Input",
    "memberof": "src/components/form/Input.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/form/Input.jsx~Input",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/form/Input.jsx",
    "importStyle": "Input",
    "description": "Displays basic input component",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "input",
        "description": "Input's attributes"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "custom"
        ],
        "spread": false,
        "optional": false,
        "name": "label",
        "description": "Input's label"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "helpMessage",
        "description": "Message with useful information for user"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Input's type"
      },
      {
        "nullable": null,
        "types": [
          "bool"
        ],
        "spread": false,
        "optional": false,
        "name": "required",
        "description": "Set if input is required"
      },
      {
        "nullable": null,
        "types": [
          "bool"
        ],
        "spread": false,
        "optional": false,
        "name": "readOnly",
        "description": "Set if input is read only"
      },
      {
        "nullable": null,
        "types": [
          "bool"
        ],
        "spread": false,
        "optional": false,
        "name": "disabled",
        "description": "Set if input is disabled"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "custom"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "Button displayed beside input"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "placeholder",
        "description": "Placeholder text"
      },
      {
        "nullable": null,
        "types": [
          "bool"
        ],
        "spread": false,
        "optional": false,
        "name": "touched",
        "description": "Set if input is touched"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": "Error message"
      }
    ]
  },
  {
    "__docId__": 69,
    "kind": "file",
    "name": "src/components/form/Label.jsx",
    "content": "import React from 'react';\nimport { Popup } from 'semantic-ui-react';\n\n/**\n * Displays input's label\n * @param {node} children Label contents\n * @param {string|custom} helpMessage Message with useful information for user\n */\nexport default ({ children, helpMessage }) => {\n    const label = <label>{children}</label>;\n\n    if (helpMessage) {\n        return (\n          <Popup trigger={label}>\n            <Popup.Content>{helpMessage}</Popup.Content>\n          </Popup>\n        );\n    }\n\n    return label;\n};\n",
    "static": true,
    "longname": "src/components/form/Label.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 70,
    "kind": "function",
    "name": "Label",
    "memberof": "src/components/form/Label.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/form/Label.jsx~Label",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/form/Label.jsx",
    "importStyle": "Label",
    "description": "Displays input's label",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "node"
        ],
        "spread": false,
        "optional": false,
        "name": "children",
        "description": "Label contents"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "custom"
        ],
        "spread": false,
        "optional": false,
        "name": "helpMessage",
        "description": "Message with useful information for user"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "file",
    "name": "src/components/form/Radio.jsx",
    "content": "import React from 'react';\nimport { Form, Checkbox } from 'semantic-ui-react';\nimport Error from './Error';\n\n/**\n * Function that handles change event\n * @param {function} change Dispatches change action\n */\nconst handleChange = change => (event, { name, value }) => change(name, value);\n\n/**\n * Displays radio input\n * @param {object} input Input's attributes\n * @param {string|custom} label Input's label\n * @param {bool} required Set if input is required\n * @param {bool} disabled Set if input is disabled\n * @param {string|number|bool} defaultValue Default input value\n * @param {string|number|bool} currentValue Current input value\n * @param {function} change Dispatches change action\n * @param {bool} touched Set if input is touched\n * @param {string} error Error message\n */\nexport default ({\n                    input,\n                    label,\n                    required,\n                    disabled,\n                    defaultValue,\n                    currentValue,\n                    change,\n                    meta: {\n                        touched,\n                        error,\n                    },\n                }) => (\n                  <Form.Field>\n                    <Checkbox\n                {...input}\n                label={{ children: label }}\n                radio\n                onChange={handleChange(change)}\n                required={required}\n                checked={currentValue === defaultValue}\n                value={defaultValue}\n                disabled={disabled}\n                    />\n                    <Error touched={touched} error={error} disabled={disabled} />\n                  </Form.Field>\n);\n",
    "static": true,
    "longname": "src/components/form/Radio.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 72,
    "kind": "function",
    "name": "handleChange",
    "memberof": "src/components/form/Radio.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/form/Radio.jsx~handleChange",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/components/form/Radio.jsx",
    "importStyle": null,
    "description": "Function that handles change event",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "change",
        "description": "Dispatches change action"
      }
    ]
  },
  {
    "__docId__": 73,
    "kind": "function",
    "name": "Radio",
    "memberof": "src/components/form/Radio.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/form/Radio.jsx~Radio",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/form/Radio.jsx",
    "importStyle": "Radio",
    "description": "Displays radio input",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "input",
        "description": "Input's attributes"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "custom"
        ],
        "spread": false,
        "optional": false,
        "name": "label",
        "description": "Input's label"
      },
      {
        "nullable": null,
        "types": [
          "bool"
        ],
        "spread": false,
        "optional": false,
        "name": "required",
        "description": "Set if input is required"
      },
      {
        "nullable": null,
        "types": [
          "bool"
        ],
        "spread": false,
        "optional": false,
        "name": "disabled",
        "description": "Set if input is disabled"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number",
          "bool"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultValue",
        "description": "Default input value"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number",
          "bool"
        ],
        "spread": false,
        "optional": false,
        "name": "currentValue",
        "description": "Current input value"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "change",
        "description": "Dispatches change action"
      },
      {
        "nullable": null,
        "types": [
          "bool"
        ],
        "spread": false,
        "optional": false,
        "name": "touched",
        "description": "Set if input is touched"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": "Error message"
      }
    ]
  },
  {
    "__docId__": 74,
    "kind": "file",
    "name": "src/components/form/Select.jsx",
    "content": "import React from 'react';\nimport { Form } from 'semantic-ui-react';\nimport { map } from 'lodash';\nimport Label from './Label';\nimport Error from './Error';\n\n/**\n * Displays select input\n * @param {object} input Input's attributes\n * @param {string|custom} label Input's label\n * @param {{text: string, value: string|number|bool}[]}options Select optins\n * @param {string} helpMessage Message with useful information for user\n * @param {bool} required Set if input is required\n * @param {bool} disabled Set if input is disabled\n * @param {bool} touched Set if input is touched\n * @param {string} error Error message\n */\nexport default ({\n                     input,\n                     label,\n                     options,\n                     helpMessage,\n                     required,\n                     disabled,\n                     meta: {\n                         touched,\n                         error,\n                     },\n                 }) => (\n                   <Form.Field className={required ? 'required' : ''}>\n                     <Label helpMessage={helpMessage}>{label}</Label>\n                     <select {...input} placeholder={label} required={required} disabled={disabled}>\n                       {map(options, (option, key) => (\n                         <option key={key} value={option.value}>\n                           {option.text}\n                         </option>\n                        ))}\n                     </select>\n                     <Error touched={touched} error={error} disabled={disabled} />\n                   </Form.Field>\n);\n",
    "static": true,
    "longname": "src/components/form/Select.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 75,
    "kind": "function",
    "name": "Select",
    "memberof": "src/components/form/Select.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/form/Select.jsx~Select",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/form/Select.jsx",
    "importStyle": "Select",
    "description": "Displays select input",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "input",
        "description": "Input's attributes"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "custom"
        ],
        "spread": false,
        "optional": false,
        "name": "label",
        "description": "Input's label"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "{{text:",
        "description": "string, value: string|number|bool}[]}options Select optins"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "helpMessage",
        "description": "Message with useful information for user"
      },
      {
        "nullable": null,
        "types": [
          "bool"
        ],
        "spread": false,
        "optional": false,
        "name": "required",
        "description": "Set if input is required"
      },
      {
        "nullable": null,
        "types": [
          "bool"
        ],
        "spread": false,
        "optional": false,
        "name": "disabled",
        "description": "Set if input is disabled"
      },
      {
        "nullable": null,
        "types": [
          "bool"
        ],
        "spread": false,
        "optional": false,
        "name": "touched",
        "description": "Set if input is touched"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": "Error message"
      }
    ]
  },
  {
    "__docId__": 76,
    "kind": "file",
    "name": "src/components/logs/LogItem.jsx",
    "content": "import React from 'react';\nimport { ListItem } from 'semantic-ui-react';\n\n\nclass LogItem extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            collapsed: true,\n        };\n        this.clickStart = 0;\n    }\n\n    toggleCollapse() {\n        this.setState(prevState => ({ collapsed: !prevState.collapsed }));\n    }\n\n    mouseDown(event) {\n        if (event.button === 0) {\n            this.clickStart = event.timeStamp;\n        }\n    }\n\n    mouseUp(event) {\n        if (event.button === 0 && event.timeStamp - this.clickStart < 150) {\n            this.toggleCollapse();\n        }\n    }\n\n    render() {\n        return (\n          <ListItem\n                onMouseDown={e => this.mouseDown(e)}\n                onMouseUp={e => this.mouseUp(e)}\n                className={this.state.collapsed ? 'collapsed' : ''}\n          >\n            <span className={`level ${this.props.level}`}>{`[${this.props.level}]`}</span>\n            <span className=\"module\">{`[${this.props.module}]`}</span>\n            <span className=\"time\">{`[${this.props.time}]`}</span>\n            <span className=\"message\">{`: ${this.props.message}`}</span>\n          </ListItem>\n        );\n    }\n}\n\nexport default LogItem;\n",
    "static": true,
    "longname": "src/components/logs/LogItem.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 77,
    "kind": "class",
    "name": "LogItem",
    "memberof": "src/components/logs/LogItem.jsx",
    "static": true,
    "longname": "src/components/logs/LogItem.jsx~LogItem",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/logs/LogItem.jsx",
    "importStyle": "LogItem",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 78,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/components/logs/LogItem.jsx~LogItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/logs/LogItem.jsx~LogItem#constructor",
    "access": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 79,
    "kind": "member",
    "name": "state",
    "memberof": "src/components/logs/LogItem.jsx~LogItem",
    "static": false,
    "longname": "src/components/logs/LogItem.jsx~LogItem#state",
    "access": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"collapsed\": boolean}"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "member",
    "name": "clickStart",
    "memberof": "src/components/logs/LogItem.jsx~LogItem",
    "static": false,
    "longname": "src/components/logs/LogItem.jsx~LogItem#clickStart",
    "access": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "toggleCollapse",
    "memberof": "src/components/logs/LogItem.jsx~LogItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/logs/LogItem.jsx~LogItem#toggleCollapse",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "mouseDown",
    "memberof": "src/components/logs/LogItem.jsx~LogItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/logs/LogItem.jsx~LogItem#mouseDown",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 83,
    "kind": "member",
    "name": "clickStart",
    "memberof": "src/components/logs/LogItem.jsx~LogItem",
    "static": false,
    "longname": "src/components/logs/LogItem.jsx~LogItem#clickStart",
    "access": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "mouseUp",
    "memberof": "src/components/logs/LogItem.jsx~LogItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/logs/LogItem.jsx~LogItem#mouseUp",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "render",
    "memberof": "src/components/logs/LogItem.jsx~LogItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/components/logs/LogItem.jsx~LogItem#render",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "file",
    "name": "src/components/logs/Logs.jsx",
    "content": "import React from 'react';\nimport { map } from 'lodash';\nimport { Icon, List } from 'semantic-ui-react';\n\nimport './Logs.scss';\nimport LogItem from './LogItem';\n\n/**\n * Displays logs\n * @param {object[]} logs List of logs\n * @param {bool} collapsed Set if logs should be collapsed\n * @param {function} handleCollapse Handles collapse event\n * @param {function} handleClear Handles clear event\n */\nexport default ({ logs, collapsed, handleCollapse, handleClear }) => (\n  <div className=\"logs-container\">\n    <Icon\n            onClick={handleCollapse}\n            title={collapsed ? 'Expand' : 'Collapse'}\n            className=\"collapse pointer hover-enlarge-1_5\"\n            name={collapsed ? 'expand' : 'compress'}\n    />\n    <Icon\n            onClick={handleClear}\n            title=\"Clear logs\"\n            className=\"collapse pointer hover-enlarge-1_5\"\n            name=\"trash outline\"\n    />\n    <pre className={(collapsed ? 'collapsed' : '')}>\n      <List divided inverted>\n        {map(logs, data => (\n          <LogItem key={data.id} {...data} />\n        ))}\n      </List>\n    </pre>\n  </div>\n);\n",
    "static": true,
    "longname": "src/components/logs/Logs.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 87,
    "kind": "function",
    "name": "Logs",
    "memberof": "src/components/logs/Logs.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/logs/Logs.jsx~Logs",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/logs/Logs.jsx",
    "importStyle": "Logs",
    "description": "Displays logs",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "logs",
        "description": "List of logs"
      },
      {
        "nullable": null,
        "types": [
          "bool"
        ],
        "spread": false,
        "optional": false,
        "name": "collapsed",
        "description": "Set if logs should be collapsed"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "handleCollapse",
        "description": "Handles collapse event"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "handleClear",
        "description": "Handles clear event"
      }
    ]
  },
  {
    "__docId__": 88,
    "kind": "file",
    "name": "src/components/servers/AddServerButton.jsx",
    "content": "import React from 'react';\nimport { Menu, Icon } from 'semantic-ui-react';\nimport { Link } from 'react-router';\n\nexport default ({ active }) => (\n  <Menu.Item active={active} link as={Link} to=\"/server/add\">\n    <Icon name=\"add\" /> Add Server\n  </Menu.Item>\n);\n",
    "static": true,
    "longname": "src/components/servers/AddServerButton.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 89,
    "kind": "function",
    "name": "AddServerButton",
    "memberof": "src/components/servers/AddServerButton.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/servers/AddServerButton.jsx~AddServerButton",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/servers/AddServerButton.jsx",
    "importStyle": "AddServerButton",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"active\": *}"
        ],
        "defaultRaw": {
          "active": null
        },
        "defaultValue": "{\"active\":null}"
      }
    ]
  },
  {
    "__docId__": 90,
    "kind": "file",
    "name": "src/components/servers/ServerForm.jsx",
    "content": "import React from 'react';\nimport { Form, Header, Segment, Button } from 'semantic-ui-react';\nimport { reduxForm } from 'redux-form';\nimport Actions from '../form/Actions';\nimport ServerInformationFields from './fields/ServerInformationFields';\nimport CertificateInformationFields from './fields/CertificateInformationFields';\nimport VpnConfigurationFields from './fields/VpnConfigurationFields';\n\nconst ServerForm = (props) => {\n    const {\n        error,\n        handleSubmit,\n        onSubmit,\n        onPreview,\n        submitting,\n        pristine,\n        reset,\n        change,\n        ...rest\n    } = props;\n\n    return (\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Header as=\"h1\">Server Form</Header>\n        <ServerInformationFields change={change} />\n        <CertificateInformationFields />\n        <VpnConfigurationFields\n                change={change}\n                {...rest}\n        />\n        <Segment vertical>\n          <Actions submitting={submitting} pristine={pristine} reset={reset}>\n            <Button onClick={onPreview} type=\"button\">Preview</Button>\n          </Actions>\n        </Segment>\n        {error && <strong>{error}</strong>}\n      </Form>\n    );\n};\n\nexport default reduxForm({\n    form: 'server',\n})(ServerForm);\n",
    "static": true,
    "longname": "src/components/servers/ServerForm.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 91,
    "kind": "function",
    "name": "ServerForm",
    "memberof": "src/components/servers/ServerForm.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/servers/ServerForm.jsx~ServerForm",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/components/servers/ServerForm.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "file",
    "name": "src/components/servers/ServerList.jsx",
    "content": "import React from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport { map } from 'lodash';\nimport ServerListItem from './ServerListItem';\nimport AddServerButton from './AddServerButton';\n\n// noinspection HtmlDeprecatedTag\nexport default ({ servers, activeMenuItem }) => (\n  <Menu vertical inverted fluid>\n    {map(servers, (server, key) => <ServerListItem\nkey={key} server={server}\n                                                       active={server.id === activeMenuItem}\n    />)}\n    <AddServerButton active={activeMenuItem === 'add'} />\n  </Menu>\n);\n",
    "static": true,
    "longname": "src/components/servers/ServerList.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 93,
    "kind": "function",
    "name": "ServerList",
    "memberof": "src/components/servers/ServerList.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/servers/ServerList.jsx~ServerList",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/servers/ServerList.jsx",
    "importStyle": "ServerList",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"servers\": *, \"activeMenuItem\": *}"
        ],
        "defaultRaw": {
          "servers": null,
          "activeMenuItem": null
        },
        "defaultValue": "{\"servers\":null,\"activeMenuItem\":null}"
      }
    ]
  },
  {
    "__docId__": 94,
    "kind": "file",
    "name": "src/components/servers/ServerListItem.jsx",
    "content": "import React from 'react';\nimport { Link } from 'react-router';\nimport { Menu } from 'semantic-ui-react';\n\nexport default ({ server, active }) => (\n  <Menu.Item active={active} link as={Link} to={`/server/show/${server.id}`}>\n    {server.name}\n  </Menu.Item>\n);\n",
    "static": true,
    "longname": "src/components/servers/ServerListItem.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 95,
    "kind": "function",
    "name": "ServerListItem",
    "memberof": "src/components/servers/ServerListItem.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/servers/ServerListItem.jsx~ServerListItem",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/servers/ServerListItem.jsx",
    "importStyle": "ServerListItem",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"server\": *, \"active\": *}"
        ],
        "defaultRaw": {
          "server": null,
          "active": null
        },
        "defaultValue": "{\"server\":null,\"active\":null}"
      }
    ]
  },
  {
    "__docId__": 96,
    "kind": "file",
    "name": "src/components/servers/ServerShowContent.jsx",
    "content": "import React from 'react';\nimport { Button, Dropdown, Header, Table, TableBody } from 'semantic-ui-react';\nimport { Link } from 'react-router';\nimport UserList from '../users/UserList';\nimport UserWarning from '../users/UserWarning';\nimport ServerShowContentRow from './ServerShowContentRow';\nimport ServerStatus from '../../containers/servers/status/ServerStatus';\nimport LABELS from '../../constants/labels';\nimport ServerActions from '../../containers/servers/ServerActions';\n\nconst showBoolean = (value) => {\n    if (value === '1') {\n        return 'Yes';\n    }\n\n    return 'No';\n};\n\nexport default (props) => {\n    const {\n        server,\n        setupInProgress,\n        userSetupInProgress,\n        handleSetup,\n        handleSetupClient,\n        handleSSHTerminal,\n        handleSetupAllClients,\n        handleRemoveClient,\n        handleDownloadConfiguration,\n        handleLoadConfigFromServer,\n        handleLoadConfigTextArea,\n        users,\n        canOpenTerminal,\n    } = props;\n\n    return (\n      <div>\n        <Header as=\"h1\">Server information</Header>\n        <ServerStatus server={server} />\n\n        <br />\n        {canOpenTerminal ? <Button primary onClick={() => handleSSHTerminal(server)}>\n              Open SSH terminal\n          </Button> : null}\n        <Dropdown floating button text=\"Load configuration\" loading={setupInProgress}>\n          <Dropdown.Menu>\n            <Dropdown.Item\n                disabled={setupInProgress}\n                onClick={() => handleLoadConfigFromServer(server)}\n            >\n                From server file\n            </Dropdown.Item>\n            <Dropdown.Item\n                disabled={setupInProgress}\n                onClick={() => handleLoadConfigTextArea(server)}\n            >\n                Paste configuration\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        <ServerActions server={server} setupInProgress={setupInProgress} />\n\n        <Table definition>\n          <TableBody>\n            <ServerShowContentRow label={LABELS.NAME} value={server.name} />\n            <ServerShowContentRow label={LABELS.HOST} value={server.host} />\n            <ServerShowContentRow label={LABELS.PORT} value={server.port} />\n            <ServerShowContentRow label={LABELS.USERNAME} value={server.username} />\n            <ServerShowContentRow label={LABELS.KEY} value={server.key} />\n          </TableBody>\n        </Table>\n        <Header as=\"h1\">Certificate information</Header>\n        <Table definition>\n          <TableBody>\n            <ServerShowContentRow label={LABELS.COUNTRY} value={server.country} />\n            <ServerShowContentRow label={LABELS.PROVINCE} value={server.province} />\n            <ServerShowContentRow label={LABELS.CITY} value={server.city} />\n            <ServerShowContentRow label={LABELS.ORG} value={server.org} />\n            <ServerShowContentRow label={LABELS.EMAIL} value={server.email} />\n            <ServerShowContentRow label={LABELS.OU} value={server.ou} />\n          </TableBody>\n        </Table>\n        <Header as=\"h1\">VPN Configuration</Header>\n        <Table definition>\n          <TableBody>\n            <ServerShowContentRow\n                        label={LABELS.LOCAL_IP_ADDRESS} value={server.config.local_ip_address}\n            />\n            <ServerShowContentRow label={LABELS.LISTEN_PORT} value={server.config.port} />\n            <ServerShowContentRow label={LABELS.PROTOCOL} value={server.config.protocol} />\n            <ServerShowContentRow label={LABELS.DEV} value={server.config.dev} />\n            <ServerShowContentRow label={LABELS.TOPOLOGY} value={server.config.topology} />\n            <ServerShowContentRow label={LABELS.SERVER_MODE} value={server.config.server_mode} />\n            <ServerShowContentRow\n                        label={LABELS.ALLOW_SUBNET} value={showBoolean(server.config.allow_subnet)}\n            />\n            <ServerShowContentRow\n                        label={LABELS.ASSIGN_IP} value={showBoolean(server.config.assign_ip)}\n            />\n            <ServerShowContentRow\n                        label={LABELS.IFCONFIG_POOL_PERSIST}\n                        value={showBoolean(server.config.ifconfig_pool_persist)}\n            />\n            <ServerShowContentRow\n                label={LABELS.LEARN_ADDRESS} value={server.config.learn_address}\n            />\n            <ServerShowContentRow\n                        label={LABELS.CLIENT_TO_CLIENT}\n                        value={showBoolean(server.config.client_to_client)}\n            />\n            <ServerShowContentRow\n                        label={LABELS.DUPLICATE_CN} value={showBoolean(server.config.duplicate_cn)}\n            />\n            <ServerShowContentRow\n                label={LABELS.TLS_AUTH} value={showBoolean(server.config.tls_auth)}\n            />\n            <ServerShowContentRow\n                label={LABELS.AUTH_ALGORITHM} value={server.config.auth_algorithm}\n            />\n            <ServerShowContentRow\n                        label={LABELS.CIPHER_ALGORITHM} value={server.config.cipher_algorithm}\n            />\n            <ServerShowContentRow\n                label={LABELS.COMPRESS} value={showBoolean(server.config.compress)}\n            />\n            <ServerShowContentRow\n                label={LABELS.MAX_CLIENTS} value={server.config.max_clients}\n            />\n            <ServerShowContentRow\n                label={LABELS.USER_PRIVILEGE} value={server.config.user_privilege}\n            />\n            <ServerShowContentRow\n                        label={LABELS.GROUP_PRIVILEGE} value={server.config.group_privilege}\n            />\n            <ServerShowContentRow\n                        label={LABELS.PERSIST_KEY} value={showBoolean(server.config.persist_key)}\n            />\n            <ServerShowContentRow\n                        label={LABELS.PERSIST_TUN} value={showBoolean(server.config.persist_tun)}\n            />\n            <ServerShowContentRow label={LABELS.VERB} value={server.config.verb} />\n            <ServerShowContentRow label={LABELS.MUTE} value={server.config.mute} />\n            <ServerShowContentRow\n                        label={LABELS.EXPLICIT_EXIT_NOTIFY}\n                        value={showBoolean(server.config.explicit_exit_notify)}\n            />\n          </TableBody>\n        </Table>\n        <div>\n          <Link to={`/server/edit/${server.id}`}><Button>Edit</Button></Link>\n          <Button\n              primary\n              disabled={setupInProgress}\n              onClick={() => handleSetup(server)}\n              loading={setupInProgress}\n          >\n            Setup\n          </Button>\n        </div>\n        <Header as=\"h1\">Users</Header>\n        <UserWarning show={server.config.dev !== 'tun'} />\n        <UserList\n                users={users}\n                server={server}\n                handleSetupClient={handleSetupClient}\n                handleRemoveClient={handleRemoveClient}\n                handleDownloadConfiguration={handleDownloadConfiguration}\n                setupInProgress={setupInProgress}\n                userSetupInProgress={userSetupInProgress}\n                handleSetupAllClients={handleSetupAllClients}\n        />\n        <br />\n        <Link to={`/server/${server.id}/user/add`}><Button>Add User</Button></Link>\n      </div>\n    );\n};\n",
    "static": true,
    "longname": "src/components/servers/ServerShowContent.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 97,
    "kind": "function",
    "name": "showBoolean",
    "memberof": "src/components/servers/ServerShowContent.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/servers/ServerShowContent.jsx~showBoolean",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/components/servers/ServerShowContent.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 98,
    "kind": "function",
    "name": "ServerShowContent",
    "memberof": "src/components/servers/ServerShowContent.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/servers/ServerShowContent.jsx~ServerShowContent",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/servers/ServerShowContent.jsx",
    "importStyle": "ServerShowContent",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 99,
    "kind": "file",
    "name": "src/components/servers/ServerShowContentRow.jsx",
    "content": "import React from 'react';\nimport { isUndefined } from 'lodash';\nimport { TableRow, TableCell } from 'semantic-ui-react';\n\nexport default ({ label, value }) => (\n    (!isUndefined(value) && value !== '') ? (\n      <TableRow>\n        <TableCell>{label}</TableCell>\n        <TableCell positive={value === 'Yes'} negative={value === 'No'}>{value}</TableCell>\n      </TableRow>\n    ) : null\n);\n",
    "static": true,
    "longname": "src/components/servers/ServerShowContentRow.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 100,
    "kind": "function",
    "name": "ServerShowContentRow",
    "memberof": "src/components/servers/ServerShowContentRow.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/servers/ServerShowContentRow.jsx~ServerShowContentRow",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/servers/ServerShowContentRow.jsx",
    "importStyle": "ServerShowContentRow",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"label\": *, \"value\": *}"
        ],
        "defaultRaw": {
          "label": null,
          "value": null
        },
        "defaultValue": "{\"label\":null,\"value\":null}"
      }
    ]
  },
  {
    "__docId__": 101,
    "kind": "file",
    "name": "src/components/servers/fields/AllowSubnetFields.jsx",
    "content": "import React from 'react';\nimport { Header, Segment } from 'semantic-ui-react';\nimport { Field } from 'redux-form';\nimport Checkbox from '../../form/Checkbox';\nimport IpAddressFields from './IpAddressFields';\nimport LABELS from '../../../constants/labels';\nimport { MODE } from '../../../constants/servers';\n\nexport default ({ serverMode, devMode, assignIp, allowSubnet, change }) => (\n    (!assignIp && serverMode === MODE.SERVER && devMode === 'tun') ? (\n      <Segment padded>\n        <Header as=\"h5\">{LABELS.ALLOW_SUBNET}</Header>\n        <Field\n                component={Checkbox}\n                name=\"config.allow_subnet\"\n                label={LABELS.ENABLED}\n                change={change}\n        />\n        <IpAddressFields name=\"config.allow_subnet_route\" disabled={!allowSubnet} />\n      </Segment>\n    ) : <span />\n);\n",
    "static": true,
    "longname": "src/components/servers/fields/AllowSubnetFields.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 102,
    "kind": "function",
    "name": "AllowSubnetFields",
    "memberof": "src/components/servers/fields/AllowSubnetFields.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/servers/fields/AllowSubnetFields.jsx~AllowSubnetFields",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/servers/fields/AllowSubnetFields.jsx",
    "importStyle": "AllowSubnetFields",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"serverMode\": *, \"devMode\": *, \"assignIp\": *, \"allowSubnet\": *, \"change\": *}"
        ],
        "defaultRaw": {
          "serverMode": null,
          "devMode": null,
          "assignIp": null,
          "allowSubnet": null,
          "change": null
        },
        "defaultValue": "{\"serverMode\":null,\"devMode\":null,\"assignIp\":null,\"allowSubnet\":null,\"change\":null}"
      }
    ]
  },
  {
    "__docId__": 103,
    "kind": "file",
    "name": "src/components/servers/fields/AssignSpecificIpFields.jsx",
    "content": "import React from 'react';\nimport { Header, Segment } from 'semantic-ui-react';\nimport { Field } from 'redux-form';\nimport Checkbox from '../../form/Checkbox';\nimport IpAddressFields from './IpAddressFields';\nimport LABELS from '../../../constants/labels';\n\nexport default ({ allowSubnet, assignIp, change }) => (\n    !allowSubnet ? (\n      <Segment padded>\n        <Header as=\"h5\">{LABELS.ASSIGN_IP}</Header>\n        <Field\n                component={Checkbox}\n                name=\"config.assign_ip\"\n                label={LABELS.ENABLED}\n                change={change}\n        />\n        <IpAddressFields name=\"config.assign_ip_route\" disabled={!assignIp} />\n      </Segment>\n    ) : <span />\n);\n",
    "static": true,
    "longname": "src/components/servers/fields/AssignSpecificIpFields.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 104,
    "kind": "function",
    "name": "AssignSpecificIpFields",
    "memberof": "src/components/servers/fields/AssignSpecificIpFields.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/servers/fields/AssignSpecificIpFields.jsx~AssignSpecificIpFields",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/servers/fields/AssignSpecificIpFields.jsx",
    "importStyle": "AssignSpecificIpFields",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"allowSubnet\": *, \"assignIp\": *, \"change\": *}"
        ],
        "defaultRaw": {
          "allowSubnet": null,
          "assignIp": null,
          "change": null
        },
        "defaultValue": "{\"allowSubnet\":null,\"assignIp\":null,\"change\":null}"
      }
    ]
  },
  {
    "__docId__": 105,
    "kind": "file",
    "name": "src/components/servers/fields/BridgingModeFields.jsx",
    "content": "import React from 'react';\nimport { Header, Segment } from 'semantic-ui-react';\nimport { Field } from 'redux-form';\nimport IpAddressFields from './IpAddressFields';\nimport Input from '../../form/Input';\nimport { required } from '../../../utils/validators';\nimport Radio from '../../form/Radio';\nimport LABELS from '../../../constants/labels';\nimport { MODE } from '../../../constants/servers';\n\nconst isOn = serverMode => serverMode === MODE.BRIDGE;\n\nexport default ({ change, serverMode }) => (\n  <Segment padded>\n    <Header as=\"h5\">{LABELS.ETHERNET_SERVER_MODE}</Header>\n    <Field\n            component={Radio}\n            name=\"config.server_mode\"\n            label={LABELS.SERVER_MODE}\n            radio\n            defaultValue={MODE.BRIDGE}\n            currentValue={serverMode}\n            change={change}\n    />\n    <IpAddressFields name=\"config.server_bridge\" disabled={!isOn(serverMode)} />\n    <Field\n            name=\"config.server_bridge.start\"\n            component={Input}\n            label={LABELS.START}\n            placeholder=\"10.8.0.50\"\n            disabled={!isOn(serverMode)}\n            required={isOn(serverMode)}\n            validate={isOn(serverMode) && [required]}\n    />\n    <Field\n            name=\"config.server_bridge.end\"\n            component={Input}\n            label={LABELS.END}\n            placeholder=\"10.8.0.100\"\n            disabled={!isOn(serverMode)}\n            required={isOn(serverMode)}\n            validate={isOn(serverMode) && [required]}\n    />\n  </Segment>\n);\n",
    "static": true,
    "longname": "src/components/servers/fields/BridgingModeFields.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 106,
    "kind": "function",
    "name": "isOn",
    "memberof": "src/components/servers/fields/BridgingModeFields.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/servers/fields/BridgingModeFields.jsx~isOn",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/components/servers/fields/BridgingModeFields.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "serverMode",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 107,
    "kind": "function",
    "name": "BridgingModeFields",
    "memberof": "src/components/servers/fields/BridgingModeFields.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/servers/fields/BridgingModeFields.jsx~BridgingModeFields",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/servers/fields/BridgingModeFields.jsx",
    "importStyle": "BridgingModeFields",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"change\": *, \"serverMode\": *}"
        ],
        "defaultRaw": {
          "change": null,
          "serverMode": null
        },
        "defaultValue": "{\"change\":null,\"serverMode\":null}"
      }
    ]
  },
  {
    "__docId__": 108,
    "kind": "file",
    "name": "src/components/servers/fields/CertificateInformationFields.jsx",
    "content": "import React from 'react';\nimport { Header, Segment } from 'semantic-ui-react';\nimport { Field } from 'redux-form';\nimport Input from '../../form/Input';\nimport { email } from '../../../utils/validators';\nimport * as HELPER_MESSAGE from '../../../constants/help_messages';\nimport LABELS from '../../../constants/labels';\n\nexport default () => (\n  <Segment vertical>\n    <Header as=\"h2\">Certificate information</Header>\n    <Field\n            component={Input}\n            name=\"country\"\n            label={LABELS.COUNTRY}\n            helpMessage={HELPER_MESSAGE.COUNTRY}\n    />\n    <Field\n            component={Input}\n            name=\"province\"\n            label={LABELS.PROVINCE}\n    />\n    <Field\n            component={Input}\n            name=\"city\"\n            label={LABELS.CITY}\n    />\n    <Field\n            component={Input}\n            name=\"org\"\n            label={LABELS.ORG}\n    />\n    <Field\n            component={Input}\n            name=\"email\"\n            label={LABELS.EMAIL}\n            validate={[email]}\n    />\n    <Field\n            component={Input}\n            name=\"ou\"\n            label={LABELS.OU}\n    />\n  </Segment>\n);\n",
    "static": true,
    "longname": "src/components/servers/fields/CertificateInformationFields.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 109,
    "kind": "function",
    "name": "CertificateInformationFields",
    "memberof": "src/components/servers/fields/CertificateInformationFields.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/servers/fields/CertificateInformationFields.jsx~CertificateInformationFields",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/servers/fields/CertificateInformationFields.jsx",
    "importStyle": "CertificateInformationFields",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 110,
    "kind": "file",
    "name": "src/components/servers/fields/IpAddressFields.jsx",
    "content": "import React from 'react';\nimport { Field } from 'redux-form';\nimport { Button } from 'semantic-ui-react';\nimport { isFunction, chain } from 'lodash';\nimport Input from '../../form/Input';\nimport { ipAddress, required } from '../../../utils/validators';\nimport LABELS from '../../../constants/labels';\n\nexport const normalizeIpAddress = (value) => {\n    if (!value) {\n        return value;\n    }\n\n    const sanitize = value.replace(/[^\\d.]/g, '');\n    return chain(sanitize)\n        .split('.')\n        .map((o) => {\n            if (o > 255) {\n                if (o > 1000) {\n                    return o.slice(0, 3);\n                }\n\n                return o.slice(0, 2);\n            }\n\n            return o;\n        })\n        .take(4)\n        .join('.')\n        .value();\n};\n\nexport default ({ name, handleRemove, helpMessage, disabled }) => (\n  <div className=\"field\">\n    <Field\n        name={`${name}.network`}\n        component={Input}\n        label={LABELS.NETWORK}\n        action={\n            isFunction(handleRemove) && (\n            <Button icon=\"remove\" content=\"Remove\" onClick={handleRemove} />\n            )\n        }\n        placeholder=\"192.168.10.0\"\n        required={!disabled}\n        disabled={disabled}\n        validate={!disabled ? [required, ipAddress] : []}\n        helpMessage={helpMessage}\n        normalize={normalizeIpAddress}\n    />\n    <Field\n        name={`${name}.mask`}\n        component={Input}\n        label={LABELS.MASK}\n        placeholder=\"255.255.255.0\"\n        required={!disabled}\n        disabled={disabled}\n        validate={!disabled ? [required, ipAddress] : []}\n        normalize={normalizeIpAddress}\n    />\n  </div>\n);\n",
    "static": true,
    "longname": "src/components/servers/fields/IpAddressFields.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 111,
    "kind": "function",
    "name": "normalizeIpAddress",
    "memberof": "src/components/servers/fields/IpAddressFields.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/servers/fields/IpAddressFields.jsx~normalizeIpAddress",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/servers/fields/IpAddressFields.jsx",
    "importStyle": "{normalizeIpAddress}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 112,
    "kind": "function",
    "name": "IpAddressFields",
    "memberof": "src/components/servers/fields/IpAddressFields.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/servers/fields/IpAddressFields.jsx~IpAddressFields",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/servers/fields/IpAddressFields.jsx",
    "importStyle": "IpAddressFields",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"name\": *, \"handleRemove\": *, \"helpMessage\": *, \"disabled\": *}"
        ],
        "defaultRaw": {
          "name": null,
          "handleRemove": null,
          "helpMessage": null,
          "disabled": null
        },
        "defaultValue": "{\"name\":null,\"handleRemove\":null,\"helpMessage\":null,\"disabled\":null}"
      }
    ]
  },
  {
    "__docId__": 113,
    "kind": "file",
    "name": "src/components/servers/fields/KeepAliveFields.jsx",
    "content": "import React from 'react';\nimport { Header, Segment } from 'semantic-ui-react';\nimport { Field } from 'redux-form';\nimport Input from '../../form/Input';\nimport { minValue, required } from '../../../utils/validators';\n\nexport default () => (\n  <Segment padded>\n    <Header as=\"h5\">Keep alive</Header>\n    <Field\n            component={Input}\n            name=\"config.keep_alive.ping\"\n            type=\"number\"\n            label=\"Ping\"\n            min=\"1\"\n            required\n            validate={[required, minValue(1)]}\n    />\n    <Field\n            component={Input}\n            name=\"config.keep_alive.duration\"\n            type=\"number\"\n            label=\"Ping\"\n            min=\"1\"\n            required\n            validate={[required, minValue(1)]}\n    />\n  </Segment>\n);\n",
    "static": true,
    "longname": "src/components/servers/fields/KeepAliveFields.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 114,
    "kind": "function",
    "name": "KeepAliveFields",
    "memberof": "src/components/servers/fields/KeepAliveFields.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/servers/fields/KeepAliveFields.jsx~KeepAliveFields",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/servers/fields/KeepAliveFields.jsx",
    "importStyle": "KeepAliveFields",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 115,
    "kind": "file",
    "name": "src/components/servers/fields/RedirectGatewayFields.jsx",
    "content": "import React from 'react';\nimport { Header, Segment } from 'semantic-ui-react';\nimport { Field } from 'redux-form';\nimport { isUndefined } from 'lodash';\nimport Select from '../../form/Select';\nimport { YES_NO_OPTIONS } from '../../../constants/servers';\nimport LABELS from '../../../constants/labels';\n\nconst isOn = (obj, key) => isUndefined(obj) || obj[key] === 'true';\n\nexport default ({ redirectGateway }) => (\n  <Segment padded>\n    <Header as=\"h5\">{LABELS.REDIRECT_GATEWAY}</Header>\n    <Field\n            component={Select}\n            options={YES_NO_OPTIONS}\n            name=\"config.redirect_gateway.local\"\n            label={LABELS.LOCAL}\n            disabled={isOn(redirectGateway, 'auto_local')}\n    />\n    <Field\n            component={Select}\n            options={YES_NO_OPTIONS}\n            name=\"config.redirect_gateway.auto_local\"\n            label={LABELS.AUTO_LOCAL}\n            disabled={isOn(redirectGateway, 'local')}\n    />\n    <Field\n            component={Select}\n            options={YES_NO_OPTIONS}\n            name=\"config.redirect_gateway.def1\"\n            label={LABELS.DEF1}\n    />\n    <Field\n            component={Select}\n            options={YES_NO_OPTIONS}\n            name=\"config.redirect_gateway.bypass_dhcp\"\n            label={LABELS.BYPASS_DHCP}\n    />\n    <Field\n            component={Select}\n            options={YES_NO_OPTIONS}\n            name=\"config.redirect_gateway.bypass_dns\"\n            label={LABELS.BYPASS_DNS}\n    />\n    <Field\n            component={Select}\n            options={YES_NO_OPTIONS}\n            name=\"config.redirect_gateway.block_local\"\n            label={LABELS.BLOCK_LOCAL}\n    />\n  </Segment>\n);\n",
    "static": true,
    "longname": "src/components/servers/fields/RedirectGatewayFields.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 116,
    "kind": "function",
    "name": "isOn",
    "memberof": "src/components/servers/fields/RedirectGatewayFields.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/servers/fields/RedirectGatewayFields.jsx~isOn",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/components/servers/fields/RedirectGatewayFields.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 117,
    "kind": "function",
    "name": "RedirectGatewayFields",
    "memberof": "src/components/servers/fields/RedirectGatewayFields.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/servers/fields/RedirectGatewayFields.jsx~RedirectGatewayFields",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/servers/fields/RedirectGatewayFields.jsx",
    "importStyle": "RedirectGatewayFields",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"redirectGateway\": *}"
        ],
        "defaultRaw": {
          "redirectGateway": null
        },
        "defaultValue": "{\"redirectGateway\":null}"
      }
    ]
  },
  {
    "__docId__": 118,
    "kind": "file",
    "name": "src/components/servers/fields/RoutesFields.jsx",
    "content": "import React from 'react';\nimport { Button, Divider, Header, Segment } from 'semantic-ui-react';\nimport { FieldArray } from 'redux-form';\nimport IpAddressFields from './IpAddressFields';\nimport LABELS from '../../../constants/labels';\n\nconst render = ({ fields }) => (\n  <Segment padded>\n    <Header as=\"h5\">{LABELS.ROUTES}</Header>\n    <Button\n            icon=\"add\"\n            content=\"Add\"\n            labelPosition=\"left\"\n            type=\"button\"\n            onClick={() => fields.push({})}\n    />\n    {fields.map((field, index) => (\n      <div key={field}>\n        <Divider />\n        <IpAddressFields name={field} handleRemove={() => fields.remove(index)} />\n      </div>\n        ))}\n  </Segment>\n);\n\nexport default () => (\n  <FieldArray\n        name=\"config.routes\"\n        component={render}\n  />\n);\n",
    "static": true,
    "longname": "src/components/servers/fields/RoutesFields.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 119,
    "kind": "function",
    "name": "render",
    "memberof": "src/components/servers/fields/RoutesFields.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/servers/fields/RoutesFields.jsx~render",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/components/servers/fields/RoutesFields.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"fields\": *}"
        ],
        "defaultRaw": {
          "fields": null
        },
        "defaultValue": "{\"fields\":null}"
      }
    ]
  },
  {
    "__docId__": 120,
    "kind": "function",
    "name": "RoutesFields",
    "memberof": "src/components/servers/fields/RoutesFields.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/servers/fields/RoutesFields.jsx~RoutesFields",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/servers/fields/RoutesFields.jsx",
    "importStyle": "RoutesFields",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 121,
    "kind": "file",
    "name": "src/components/servers/fields/ServerInformationFields.jsx",
    "content": "import React from 'react';\nimport { Header, Segment } from 'semantic-ui-react';\nimport { Field } from 'redux-form';\nimport LABELS from '../../../constants/labels';\nimport Input from '../../form/Input';\nimport File from '../../form/File';\nimport { required, minValue, maxValue } from '../../../utils/validators';\n\n\nexport default ({ change }) => (\n  <Segment vertical>\n    <Header as=\"h2\">Server information</Header>\n    <Field\n            component={Input}\n            name=\"name\"\n            label={LABELS.NAME}\n            required\n            validate={[required]}\n    />\n    <Field\n            component={Input}\n            name=\"host\"\n            label={LABELS.HOST}\n            required\n            validate={[required]}\n    />\n    <Field\n            component={Input}\n            name=\"port\"\n            label={LABELS.PORT}\n            type=\"number\"\n            min=\"1\"\n            max=\"65535\"\n            step=\"1\"\n            required\n            validate={[required, minValue(1), maxValue(65535)]}\n    />\n    <Field\n            component={Input}\n            name=\"username\"\n            label={LABELS.USERNAME}\n            required\n            validate={[required]}\n    />\n    <Field\n      component={Input}\n      name=\"password\"\n      label={LABELS.PASSWORD}\n      type=\"password\"\n    />\n    <Field\n            component={File}\n            change={change}\n            type=\"text\"\n            name=\"key\"\n            label={LABELS.KEY}\n    />\n  </Segment>\n);\n",
    "static": true,
    "longname": "src/components/servers/fields/ServerInformationFields.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 122,
    "kind": "function",
    "name": "ServerInformationFields",
    "memberof": "src/components/servers/fields/ServerInformationFields.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/servers/fields/ServerInformationFields.jsx~ServerInformationFields",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/servers/fields/ServerInformationFields.jsx",
    "importStyle": "ServerInformationFields",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"change\": *}"
        ],
        "defaultRaw": {
          "change": null
        },
        "defaultValue": "{\"change\":null}"
      }
    ]
  },
  {
    "__docId__": 123,
    "kind": "file",
    "name": "src/components/servers/fields/ServerModeFields.jsx",
    "content": "import React from 'react';\nimport { Header, Segment } from 'semantic-ui-react';\nimport { Field } from 'redux-form';\nimport Radio from '../../form/Radio';\nimport IpAddressFields from './IpAddressFields';\nimport LABELS from '../../../constants/labels';\nimport { MODE } from '../../../constants/servers';\n\nconst isOn = serverMode => serverMode === MODE.SERVER;\n\nexport default ({ change, serverMode }) => (\n  <Segment padded>\n    <Header as=\"h5\">{LABELS.SERVER_MODE}</Header>\n    <Field\n            component={Radio}\n            name=\"config.server_mode\"\n            label={LABELS.ENABLED}\n            radio\n            change={change}\n            defaultValue={MODE.SERVER}\n            currentValue={serverMode}\n    />\n    <IpAddressFields name=\"config.server\" disabled={!isOn(serverMode)} />\n  </Segment>\n);\n",
    "static": true,
    "longname": "src/components/servers/fields/ServerModeFields.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 124,
    "kind": "function",
    "name": "isOn",
    "memberof": "src/components/servers/fields/ServerModeFields.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/servers/fields/ServerModeFields.jsx~isOn",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/components/servers/fields/ServerModeFields.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "serverMode",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 125,
    "kind": "function",
    "name": "ServerModeFields",
    "memberof": "src/components/servers/fields/ServerModeFields.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/servers/fields/ServerModeFields.jsx~ServerModeFields",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/servers/fields/ServerModeFields.jsx",
    "importStyle": "ServerModeFields",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"change\": *, \"serverMode\": *}"
        ],
        "defaultRaw": {
          "change": null,
          "serverMode": null
        },
        "defaultValue": "{\"change\":null,\"serverMode\":null}"
      }
    ]
  },
  {
    "__docId__": 126,
    "kind": "file",
    "name": "src/components/servers/fields/VpnConfigurationFields.jsx",
    "content": "import React from 'react';\nimport { Header, Segment } from 'semantic-ui-react';\nimport { Field } from 'redux-form';\nimport File from '../../form/File';\nimport Input from '../../form/Input';\nimport Select from '../../form/Select';\nimport RoutesFields from './RoutesFields';\nimport ServerModeFields from './ServerModeFields';\nimport BridgingModeFields from './BridgingModeFields';\nimport AssignSpecificIpFields from './AssignSpecificIpFields';\nimport AllowSubnetFields from './AllowSubnetFields';\nimport RedirectGatewayFields from './RedirectGatewayFields';\nimport KeepAliveFields from './KeepAliveFields';\nimport { maxValue, minValue, required } from '../../../utils/validators';\nimport {\n    AUTH_OPTIONS,\n    CIPHER_OPTIONS,\n    DEV_OPTIONS,\n    PROTOCOL_OPTIONS,\n    YES_NO_OPTIONS,\n    LOG_LEVEL_OPIONS,\n    TOPOLOGY_OPTIONS,\n} from '../../../constants/servers';\nimport * as HELP_MESSAGE from '../../../constants/help_messages';\nimport LABELS from '../../../constants/labels';\n\nexport default ({ change, serverMode, devMode, allowSubnet, assignIp, redirectGateway }) => (\n  <Segment vertical>\n    <Header as=\"h2\">VPN Configuration</Header>\n    <Field\n            component={Input}\n            name=\"config.local_ip_address\"\n            label={LABELS.LOCAL_IP_ADDRESS}\n            helpMessage={HELP_MESSAGE.LOCAL_IP_ADDRESS}\n    />\n    <Field\n            component={Input}\n            name=\"config.port\"\n            type=\"number\"\n            label={LABELS.LISTEN_PORT}\n            helpMessage={HELP_MESSAGE.PORT}\n            min=\"1\"\n            max=\"65535\"\n            required\n            validate={[required, minValue(1), maxValue(65535)]}\n    />\n    <Field\n            component={Select}\n            name=\"config.protocol\"\n            options={PROTOCOL_OPTIONS}\n            label={LABELS.PROTOCOL}\n            helpMessage={HELP_MESSAGE.PROTOCOL}\n            required\n            validate={[required]}\n    />\n    <Field\n            component={Select}\n            name=\"config.dev\"\n            options={DEV_OPTIONS}\n            label={LABELS.DEV}\n            helpMessage={HELP_MESSAGE.DEV}\n            required\n            validate={[required]}\n    />\n    <Field\n            component={Select}\n            name=\"config.topology\"\n            label={LABELS.TOPOLOGY}\n            helpMessage={HELP_MESSAGE.TOPOLOGY}\n            options={TOPOLOGY_OPTIONS}\n    />\n    <ServerModeFields\n            change={change}\n            serverMode={serverMode}\n    />\n    <BridgingModeFields\n            change={change}\n            serverMode={serverMode}\n    />\n    <AllowSubnetFields\n            change={change}\n            serverMode={serverMode}\n            devMode={devMode}\n            assignIp={assignIp}\n            allowSubnet={allowSubnet}\n    />\n    <AssignSpecificIpFields\n            change={change}\n            assignIp={assignIp}\n            allowSubnet={allowSubnet}\n    />\n    <Field\n            component={Select}\n            options={YES_NO_OPTIONS}\n            name=\"ifconfig_pool_persist\"\n            label={LABELS.IFCONFIG_POOL_PERSIST}\n    />\n    <RoutesFields />\n    <Field\n            component={Input}\n            change={change}\n            name=\"config.learn_address\"\n            label={LABELS.LEARN_ADDRESS}\n            helpMessage={HELP_MESSAGE.LEARN_ADDRESS}\n    />\n    <RedirectGatewayFields\n            redirectGateway={redirectGateway}\n    />\n    <Field\n            component={Select}\n            options={YES_NO_OPTIONS}\n            name=\"config.client_to_client\"\n            label={LABELS.CLIENT_TO_CLIENT}\n            required\n            validate={[required]}\n    />\n    <Field\n            component={Select}\n            options={YES_NO_OPTIONS}\n            name=\"config.duplicate_cn\"\n            label={LABELS.DUPLICATE_CN}\n            required\n            validate={[required]}\n    />\n    <KeepAliveFields />\n    <Field\n            component={Select}\n            options={YES_NO_OPTIONS}\n            name=\"config.tls_auth\"\n            label={LABELS.TLS_AUTH}\n            helpMessage={HELP_MESSAGE.TLS_AUTH}\n            required\n            validate={[required]}\n    />\n    <Field\n            component={Select}\n            name=\"config.auth_algorithm\"\n            options={AUTH_OPTIONS}\n            label={LABELS.AUTH_ALGORITHM}\n            required\n            validate={[required]}\n    />\n    <Field\n            component={Select}\n            name=\"config.cipher_algorithm\"\n            options={CIPHER_OPTIONS}\n            label={LABELS.CIPHER_ALGORITHM}\n            helpMessage={HELP_MESSAGE.CIPHER_ALGORITHM}\n            required\n            validate={[required]}\n    />\n    <Field\n            component={Select}\n            options={YES_NO_OPTIONS}\n            name=\"config.compress\"\n            label={LABELS.COMPRESS}\n            required\n            validate={[required]}\n    />\n    <Field\n            component={Input}\n            name=\"config.max_clients\"\n            label={LABELS.MAX_CLIENTS}\n            type=\"number\"\n            helpMessage={HELP_MESSAGE.MAX_CLIENTS}\n    />\n    <Field\n            component={Input}\n            name=\"config.user_privilege\"\n            label={LABELS.USER_PRIVILEGE}\n            helpMessage={HELP_MESSAGE.USER_PRIVILEGE}\n    />\n    <Field\n            component={Input}\n            name=\"config.group_privilege\"\n            label={LABELS.GROUP_PRIVILEGE}\n            helpMessage={HELP_MESSAGE.GROUP_PRIVILEGE}\n    />\n    <Field\n            component={Select}\n            options={YES_NO_OPTIONS}\n            name=\"config.persist_key\"\n            label={LABELS.PERSIST_KEY}\n            required\n            validate={[required]}\n    />\n    <Field\n            component={Select}\n            options={YES_NO_OPTIONS}\n            name=\"config.persist_tun\"\n            label={LABELS.PERSIST_TUN}\n            required\n            validate={[required]}\n    />\n    <Field\n            component={Select}\n            options={LOG_LEVEL_OPIONS}\n            name=\"config.verb\"\n            label={LABELS.VERB}\n            required\n            validate={[required]}\n    />\n    <Field\n            component={Input}\n            name=\"config.mute\"\n            type=\"number\"\n            label={LABELS.MUTE}\n            helpMessage={HELP_MESSAGE.MUTE}\n            validate={[minValue(0)]}\n    />\n    <Field\n            component={Select}\n            options={YES_NO_OPTIONS}\n            name=\"config.explicit_exit_notify\"\n            label={LABELS.EXPLICIT_EXIT_NOTIFY}\n            required\n            validate={[required]}\n    />\n  </Segment>\n);\n",
    "static": true,
    "longname": "src/components/servers/fields/VpnConfigurationFields.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 127,
    "kind": "function",
    "name": "VpnConfigurationFields",
    "memberof": "src/components/servers/fields/VpnConfigurationFields.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/servers/fields/VpnConfigurationFields.jsx~VpnConfigurationFields",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/servers/fields/VpnConfigurationFields.jsx",
    "importStyle": "VpnConfigurationFields",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"change\": *, \"serverMode\": *, \"devMode\": *, \"allowSubnet\": *, \"assignIp\": *, \"redirectGateway\": *}"
        ],
        "defaultRaw": {
          "change": null,
          "serverMode": null,
          "devMode": null,
          "allowSubnet": null,
          "assignIp": null,
          "redirectGateway": null
        },
        "defaultValue": "{\"change\":null,\"serverMode\":null,\"devMode\":null,\"allowSubnet\":null,\"assignIp\":null,\"redirectGateway\":null}"
      }
    ]
  },
  {
    "__docId__": 128,
    "kind": "file",
    "name": "src/components/users/UserForm.jsx",
    "content": "import React from 'react';\nimport { Form, Header, Segment } from 'semantic-ui-react';\nimport { Field, reduxForm } from 'redux-form';\nimport Input from '../form/Input';\nimport Select from '../form/Select';\nimport Actions from '../form/Actions';\nimport { YES_NO_OPTIONS } from '../../constants/servers';\nimport LABELS from '../../constants/labels';\nimport { ipAddress, maxValue, minValue } from '../../utils/validators';\nimport { normalizeIpAddress } from '../servers/fields/IpAddressFields';\n\nconst UserForm = ({ handleSubmit, onSubmit, submitting, pristine, reset }) => (\n  <Form onSubmit={handleSubmit(onSubmit)}>\n    <Header as=\"h1\">User Form</Header>\n    <Segment vertical>\n      <Header as=\"h2\">User information</Header>\n      <Field component={Input} name=\"name\" label=\"Name\" required />\n      <Field component={Input} name=\"ipAddress\" label=\"IP Address\" required />\n    </Segment>\n    <Segment vertical>\n      <Header as=\"h2\">VPN configuration</Header>\n      <Field\n          component={Select}\n          name=\"config.muteReplayWarnings\"\n          label={LABELS.MUTE_REPLAY_WARNINGS}\n          options={YES_NO_OPTIONS}\n      />\n      <Field\n          component={Input}\n          name=\"config.httpProxyServer\"\n          label={LABELS.HTTP_PROXY_SERVER}\n          validate={[ipAddress]}\n          normalize={normalizeIpAddress}\n      />\n      <Field\n          component={Input}\n          name=\"config.httpProxyPort\"\n          label={LABELS.HTTP_PROXY_PORT}\n          type=\"number\"\n          min=\"1\"\n          max=\"65535\"\n          step=\"1\"\n          validate={[minValue(1), maxValue(65535)]}\n      />\n      <Field\n          component={Select}\n          name=\"config.httpProxyRetry\"\n          label={LABELS.HTTP_PROXY_RETRY}\n          options={YES_NO_OPTIONS}\n      />\n    </Segment>\n    <Actions submitting={submitting} pristine={pristine} reset={reset} />\n  </Form>\n);\n\nexport default reduxForm({\n    form: 'user',\n})(UserForm);\n",
    "static": true,
    "longname": "src/components/users/UserForm.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 129,
    "kind": "function",
    "name": "UserForm",
    "memberof": "src/components/users/UserForm.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/users/UserForm.jsx~UserForm",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/components/users/UserForm.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"handleSubmit\": *, \"onSubmit\": *, \"submitting\": *, \"pristine\": *, \"reset\": *}"
        ],
        "defaultRaw": {
          "handleSubmit": null,
          "onSubmit": null,
          "submitting": null,
          "pristine": null,
          "reset": null
        },
        "defaultValue": "{\"handleSubmit\":null,\"onSubmit\":null,\"submitting\":null,\"pristine\":null,\"reset\":null}"
      }
    ]
  },
  {
    "__docId__": 130,
    "kind": "file",
    "name": "src/components/users/UserList.jsx",
    "content": "import React from 'react';\nimport { Table, TableBody, TableHeader, TableRow, TableHeaderCell, Button } from 'semantic-ui-react';\nimport { map } from 'lodash';\nimport UserListItem from './UserListItem';\nimport './UserList.scss';\n\nexport default (props) => {\n    const {\n        users,\n        server,\n        handleSetupClient,\n        handleSetupAllClients,\n        handleRemoveClient,\n        handleDownloadConfiguration,\n        setupInProgress,\n        userSetupInProgress,\n    } = props;\n\n    return (\n      <div>\n        <Button\n            primary\n            disabled={setupInProgress}\n            onClick={() => handleSetupAllClients(server, users)}\n            loading={setupInProgress}\n        >\n              Setup all users\n        </Button>\n        <Table singleLine columns={3}>\n          <TableHeader>\n            <TableRow>\n              <TableHeaderCell>No.</TableHeaderCell>\n              <TableHeaderCell>Name</TableHeaderCell>\n              <TableHeaderCell>IP address</TableHeaderCell>\n              <TableHeaderCell>User setup</TableHeaderCell>\n              <TableHeaderCell>Actions</TableHeaderCell>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {map(users, (user, index) => (\n              <UserListItem\n                          user={user}\n                          server={server}\n                          index={index}\n                          key={index}\n                          handleSetupClient={handleSetupClient}\n                          handleRemoveClient={handleRemoveClient}\n                          handleDownloadConfiguration={handleDownloadConfiguration}\n                          setupInProgress={setupInProgress}\n                          userSetupInProgress={userSetupInProgress.get(user.id)}\n              />\n                  ))}\n          </TableBody>\n        </Table>\n      </div>\n    );\n};\n",
    "static": true,
    "longname": "src/components/users/UserList.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 131,
    "kind": "function",
    "name": "UserList",
    "memberof": "src/components/users/UserList.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/users/UserList.jsx~UserList",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/users/UserList.jsx",
    "importStyle": "UserList",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 132,
    "kind": "file",
    "name": "src/components/users/UserListItem.jsx",
    "content": "import React from 'react';\nimport { Link } from 'react-router';\nimport { TableRow, TableCell, Button, Popup, Icon, Loader } from 'semantic-ui-react';\n\nexport default (props) => {\n    const {\n        user,\n        server,\n        index,\n        handleSetupClient,\n        handleRemoveClient,\n        handleDownloadConfiguration,\n        setupInProgress,\n        userSetupInProgress,\n    } = props;\n\n    return (\n      <TableRow>\n        <TableCell>\n          <Popup hoverable trigger={<span>{index + 1}</span>}>\n            <Popup.Content>{`User id: ${user.id}`}</Popup.Content>\n          </Popup>\n        </TableCell>\n        <TableCell>{user.name}</TableCell>\n        <TableCell>{user.ipAddress}</TableCell>\n        <TableCell className=\"loaderContainer\">\n          {userSetupInProgress ? <span><Loader active size=\"small\" /></span> : user.ranSetup ?\n            <Icon name=\"checkmark\" title=\"User was already setup\" /> :\n            <Icon name=\"remove\" title=\"User was not setup yet\" />}\n        </TableCell>\n        <TableCell>\n          <Button.Group>\n            <Popup\n                        trigger={(\n                          <Button\n                                primary\n                                disabled={setupInProgress}\n                                loading={setupInProgress}\n                                onClick={() => handleSetupClient(server, user)}\n                                icon=\"configure\"\n                          />\n                        )}\n                        content={`Setup ${user.name}`}\n            />\n            <Popup\n                        trigger={(\n                          <Button\n                                as={Link}\n                                icon=\"write\"\n                                disabled={setupInProgress}\n                                loading={setupInProgress}\n                                to={`/server/${server.id}/user/edit/${user.id}`}\n                          />\n                        )}\n                        content={`Edit ${user.name}`}\n            />\n            <Popup\n                        trigger={(\n                          <Button\n                                icon=\"delete\"\n                                onClick={() => handleRemoveClient(server, user)}\n                                disabled={setupInProgress}\n                                loading={setupInProgress}\n                          />\n                        )}\n                        content={`Remove ${user.name}`}\n            />\n            {user.ranSetup ? <Popup\n                        trigger={(\n                          <Button\n                                icon=\"download\"\n                                onClick={() => handleDownloadConfiguration(server, user)}\n                                disabled={setupInProgress}\n                                loading={setupInProgress}\n                          />\n                        )}\n                        content={`Download configuration for ${user.name}`}\n            /> : null}\n          </Button.Group>\n        </TableCell>\n      </TableRow>\n    );\n};\n",
    "static": true,
    "longname": "src/components/users/UserListItem.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 133,
    "kind": "function",
    "name": "UserListItem",
    "memberof": "src/components/users/UserListItem.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/users/UserListItem.jsx~UserListItem",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/users/UserListItem.jsx",
    "importStyle": "UserListItem",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 134,
    "kind": "file",
    "name": "src/components/users/UserWarning.jsx",
    "content": "import React from 'react';\nimport { Message } from 'semantic-ui-react';\n\nexport default ({ show }) => (\n    show ? (\n      <Message warning>\n        <Message.Header>Users IP addresses read-only</Message.Header>\n        <p>\n            If you want to setup users IP addresses on server, you need to use routed VPN (dev tun).\n        </p>\n      </Message>\n    ) : null\n);\n",
    "static": true,
    "longname": "src/components/users/UserWarning.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 135,
    "kind": "function",
    "name": "UserWarning",
    "memberof": "src/components/users/UserWarning.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/users/UserWarning.jsx~UserWarning",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/components/users/UserWarning.jsx",
    "importStyle": "UserWarning",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"show\": *}"
        ],
        "defaultRaw": {
          "show": null
        },
        "defaultValue": "{\"show\":null}"
      }
    ]
  },
  {
    "__docId__": 136,
    "kind": "file",
    "name": "src/constants/authorization.js",
    "content": "export const SAVE_SUCCESS = 'AUTH_SAVE_SUCCESS';\nexport const SAVE_FAILURE = 'AUTH_SAVE_FAILURE';\nexport const LOAD_SUCCESS = 'AUTH_LOAD_SUCCESS';\nexport const LOAD_FAILURE = 'AUTH_LOAD_FAILURE';\nexport const NEW = 'AUTH_NEW';\nexport const OPEN = 'AUTH_OPEN';\nexport const CLOSE = 'AUTH_CLOSE';\nexport const FETCH_RECENT = 'AUTH_FETCH_RECENT';\nexport const CLEAR_STATE = 'AUTH_CLEAR_STATE';\n",
    "static": true,
    "longname": "src/constants/authorization.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 137,
    "kind": "variable",
    "name": "SAVE_SUCCESS",
    "memberof": "src/constants/authorization.js",
    "static": true,
    "longname": "src/constants/authorization.js~SAVE_SUCCESS",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/authorization.js",
    "importStyle": "{SAVE_SUCCESS}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 138,
    "kind": "variable",
    "name": "SAVE_FAILURE",
    "memberof": "src/constants/authorization.js",
    "static": true,
    "longname": "src/constants/authorization.js~SAVE_FAILURE",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/authorization.js",
    "importStyle": "{SAVE_FAILURE}",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 139,
    "kind": "variable",
    "name": "LOAD_SUCCESS",
    "memberof": "src/constants/authorization.js",
    "static": true,
    "longname": "src/constants/authorization.js~LOAD_SUCCESS",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/authorization.js",
    "importStyle": "{LOAD_SUCCESS}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 140,
    "kind": "variable",
    "name": "LOAD_FAILURE",
    "memberof": "src/constants/authorization.js",
    "static": true,
    "longname": "src/constants/authorization.js~LOAD_FAILURE",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/authorization.js",
    "importStyle": "{LOAD_FAILURE}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 141,
    "kind": "variable",
    "name": "NEW",
    "memberof": "src/constants/authorization.js",
    "static": true,
    "longname": "src/constants/authorization.js~NEW",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/authorization.js",
    "importStyle": "{NEW}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 142,
    "kind": "variable",
    "name": "OPEN",
    "memberof": "src/constants/authorization.js",
    "static": true,
    "longname": "src/constants/authorization.js~OPEN",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/authorization.js",
    "importStyle": "{OPEN}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 143,
    "kind": "variable",
    "name": "CLOSE",
    "memberof": "src/constants/authorization.js",
    "static": true,
    "longname": "src/constants/authorization.js~CLOSE",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/authorization.js",
    "importStyle": "{CLOSE}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 144,
    "kind": "variable",
    "name": "FETCH_RECENT",
    "memberof": "src/constants/authorization.js",
    "static": true,
    "longname": "src/constants/authorization.js~FETCH_RECENT",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/authorization.js",
    "importStyle": "{FETCH_RECENT}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 145,
    "kind": "variable",
    "name": "CLEAR_STATE",
    "memberof": "src/constants/authorization.js",
    "static": true,
    "longname": "src/constants/authorization.js~CLEAR_STATE",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/authorization.js",
    "importStyle": "{CLEAR_STATE}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 146,
    "kind": "file",
    "name": "src/constants/help_messages.js",
    "content": "export const LOCAL_IP_ADDRESS = 'Which local IP address should OpenVPN listen on? (optional) Enter valid ip address or leave empty';\nexport const PORT = 'Which TCP/UDP port should OpenVPN listen on?';\nexport const PROTOCOL = 'TCP or UDP server?';\nexport const DEV = '\"dev tun\" will create a routed IP tunnel, \"dev tap\" will create an ethernet tunnel. Use \"dev tap0\" if you are ethernet bridging and have precreated a tap0 virtual interface and bridged it with your ethernet interface. If you want to control access policies over the VPN, you must create firewall rules for the the TUN/TAP interface. On non-Windows systems, you can give an explicit unit number, such as tun0. On Windows, use \"dev-node\" for this. On most systems, the VPN will not function unless you partially or fully disable the firewall for the TUN/TAP interface.';\nexport const TOPOLOGY = 'Network topology should be subnet (addressing via IP) unless Windows clients v2.0.9 and lower have to be supported (then net30, i.e. a /30 per client) defaults to net30 (not recommended)';\nexport const TLS_AUTH = 'For extra security beyond that provided by SSL/TLS, create an \"HMAC firewall\" to help block DoS attacks and UDP port flooding.';\nexport const USER_PRIVILEGE = 'It\\'s a good idea to reduce the OpenVPN daemon\\'s privileges after initialization. You can set this on non-Windows systems.';\nexport const GROUP_PRIVILEGE = 'It\\'s a good idea to reduce the OpenVPN daemon\\'s privileges after initialization. You can set this on non-Windows systems.';\nexport const MAX_CLIENTS = 'The maximum number of concurrently connected clients we want to allow.';\nexport const CIPHER_ALGORITHM = 'Select a cryptographic cipher. This config item must be copied to the client config file as well.';\nexport const COUNTRY = 'Country code, for example: PL, US';\nexport const LEARN_ADDRESS = 'Set script that dynamically modify the firewall in response to access from different clients.';\nexport const MUTE = 'Silence repeating messages. Set how many sequential messages of the same category will output to the log. If left empty, this option won\\'t be enabled.';\n",
    "static": true,
    "longname": "src/constants/help_messages.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 147,
    "kind": "variable",
    "name": "LOCAL_IP_ADDRESS",
    "memberof": "src/constants/help_messages.js",
    "static": true,
    "longname": "src/constants/help_messages.js~LOCAL_IP_ADDRESS",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/help_messages.js",
    "importStyle": "{LOCAL_IP_ADDRESS}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 148,
    "kind": "variable",
    "name": "PORT",
    "memberof": "src/constants/help_messages.js",
    "static": true,
    "longname": "src/constants/help_messages.js~PORT",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/help_messages.js",
    "importStyle": "{PORT}",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 149,
    "kind": "variable",
    "name": "PROTOCOL",
    "memberof": "src/constants/help_messages.js",
    "static": true,
    "longname": "src/constants/help_messages.js~PROTOCOL",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/help_messages.js",
    "importStyle": "{PROTOCOL}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 150,
    "kind": "variable",
    "name": "DEV",
    "memberof": "src/constants/help_messages.js",
    "static": true,
    "longname": "src/constants/help_messages.js~DEV",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/help_messages.js",
    "importStyle": "{DEV}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 151,
    "kind": "variable",
    "name": "TOPOLOGY",
    "memberof": "src/constants/help_messages.js",
    "static": true,
    "longname": "src/constants/help_messages.js~TOPOLOGY",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/help_messages.js",
    "importStyle": "{TOPOLOGY}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 152,
    "kind": "variable",
    "name": "TLS_AUTH",
    "memberof": "src/constants/help_messages.js",
    "static": true,
    "longname": "src/constants/help_messages.js~TLS_AUTH",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/help_messages.js",
    "importStyle": "{TLS_AUTH}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 153,
    "kind": "variable",
    "name": "USER_PRIVILEGE",
    "memberof": "src/constants/help_messages.js",
    "static": true,
    "longname": "src/constants/help_messages.js~USER_PRIVILEGE",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/help_messages.js",
    "importStyle": "{USER_PRIVILEGE}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "variable",
    "name": "GROUP_PRIVILEGE",
    "memberof": "src/constants/help_messages.js",
    "static": true,
    "longname": "src/constants/help_messages.js~GROUP_PRIVILEGE",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/help_messages.js",
    "importStyle": "{GROUP_PRIVILEGE}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 155,
    "kind": "variable",
    "name": "MAX_CLIENTS",
    "memberof": "src/constants/help_messages.js",
    "static": true,
    "longname": "src/constants/help_messages.js~MAX_CLIENTS",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/help_messages.js",
    "importStyle": "{MAX_CLIENTS}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 156,
    "kind": "variable",
    "name": "CIPHER_ALGORITHM",
    "memberof": "src/constants/help_messages.js",
    "static": true,
    "longname": "src/constants/help_messages.js~CIPHER_ALGORITHM",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/help_messages.js",
    "importStyle": "{CIPHER_ALGORITHM}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 157,
    "kind": "variable",
    "name": "COUNTRY",
    "memberof": "src/constants/help_messages.js",
    "static": true,
    "longname": "src/constants/help_messages.js~COUNTRY",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/help_messages.js",
    "importStyle": "{COUNTRY}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 158,
    "kind": "variable",
    "name": "LEARN_ADDRESS",
    "memberof": "src/constants/help_messages.js",
    "static": true,
    "longname": "src/constants/help_messages.js~LEARN_ADDRESS",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/help_messages.js",
    "importStyle": "{LEARN_ADDRESS}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 159,
    "kind": "variable",
    "name": "MUTE",
    "memberof": "src/constants/help_messages.js",
    "static": true,
    "longname": "src/constants/help_messages.js~MUTE",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/help_messages.js",
    "importStyle": "{MUTE}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 160,
    "kind": "file",
    "name": "src/constants/labels.js",
    "content": "export default {\n    NAME: 'Name',\n    HOST: 'Host address',\n    PASSWORD: 'Password',\n    PORT: 'Port',\n    USERNAME: 'Username',\n    KEY: 'SSH private key path',\n    COUNTRY: 'Country',\n    PROVINCE: 'Province',\n    CITY: 'City',\n    ORG: 'Organization',\n    EMAIL: 'E-mail',\n    OU: 'Organizational unit',\n    LOCAL_IP_ADDRESS: 'Local IP address',\n    LISTEN_PORT: 'Listen port',\n    PROTOCOL: 'Protocol',\n    DEV: 'Tunnel type - dev',\n    TOPOLOGY: 'Topology',\n    SERVER_MODE: 'Server mode',\n    ENABLED: 'Enabled',\n    NETWORK: 'Network',\n    MASK: 'Mask',\n    ETHERNET_SERVER_MODE: 'Server mode for ethernet bridging',\n    START: 'Start range',\n    END: 'End range',\n    ALLOW_SUBNET: 'Allow client\\'s private subnet to access the VPN',\n    ASSIGN_IP: 'Assign specific IP addresses to specific clients',\n    IFCONFIG_POOL_PERSIST: 'Maintain a record of client <-> virtual IP address',\n    ROUTES: 'Routes that allow the client access other private subnets',\n    LEARN_ADDRESS: 'Learn address script',\n    REDIRECT_GATEWAY: 'Redirect gateway',\n    LOCAL: 'Local',\n    AUTO_LOCAL: 'Autolocal',\n    DEF1: 'Override default gateway',\n    BYPASS_DHCP: 'Bypass DHCP',\n    BYPASS_DNS: 'Bypass DNS',\n    BLOCK_LOCAL: 'Block local LAN',\n    CLIENT_TO_CLIENT: 'Allow different clients to \\'see\\' each other',\n    DUPLICATE_CN: 'Allow multiple clients to connect with the same certificate/key',\n    TLS_AUTH: 'TLS-Auth',\n    AUTH_ALGORITHM: 'Auth algorithm',\n    CIPHER_ALGORITHM: 'Cipher algorithm',\n    COMPRESS: 'Enable compress',\n    MAX_CLIENTS: 'Max clients',\n    USER_PRIVILEGE: 'User privilege',\n    GROUP_PRIVILEGE: 'Group privilege',\n    PERSIST_KEY: 'Persist key',\n    PERSIST_TUN: 'Persist tunnel',\n    VERB: 'Log level',\n    MUTE: 'Mute',\n    EXPLICIT_EXIT_NOTIFY: 'Notify the client when the server restarts',\n    MUTE_REPLAY_WARNINGS: 'Mute replay warnings',\n    HTTP_PROXY_SERVER: 'HTTP proxy\\'s server',\n    HTTP_PROXY_PORT: 'HTTP proxy\\'s port',\n    HTTP_PROXY_RETRY: 'Retry HTTP proxy',\n};\n",
    "static": true,
    "longname": "src/constants/labels.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 161,
    "kind": "file",
    "name": "src/constants/logs.js",
    "content": "export const ADD = 'LOG_ADD';\nexport const TOGGLE_COLLAPSE = 'LOG_TOGGLE_COLLAPSE';\nexport const CLEAR = 'LOG_CLEAR';\n\nexport const LEVEL = {\n    INFO: 'INFO',\n    WARNING: 'WARNING',\n    ERROR: 'ERROR',\n};\n",
    "static": true,
    "longname": "src/constants/logs.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 162,
    "kind": "variable",
    "name": "ADD",
    "memberof": "src/constants/logs.js",
    "static": true,
    "longname": "src/constants/logs.js~ADD",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/logs.js",
    "importStyle": "{ADD}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 163,
    "kind": "variable",
    "name": "TOGGLE_COLLAPSE",
    "memberof": "src/constants/logs.js",
    "static": true,
    "longname": "src/constants/logs.js~TOGGLE_COLLAPSE",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/logs.js",
    "importStyle": "{TOGGLE_COLLAPSE}",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 164,
    "kind": "variable",
    "name": "CLEAR",
    "memberof": "src/constants/logs.js",
    "static": true,
    "longname": "src/constants/logs.js~CLEAR",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/logs.js",
    "importStyle": "{CLEAR}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 165,
    "kind": "variable",
    "name": "LEVEL",
    "memberof": "src/constants/logs.js",
    "static": true,
    "longname": "src/constants/logs.js~LEVEL",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/logs.js",
    "importStyle": "{LEVEL}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"INFO\": string, \"WARNING\": string, \"ERROR\": string}"
      ]
    }
  },
  {
    "__docId__": 166,
    "kind": "file",
    "name": "src/constants/servers.js",
    "content": "export const FETCH = 'SERVER_FETCH';\n\nexport const ADD_SUCCESS = 'SERVER_ADD_SUCCESS';\n\nexport const EDIT_SUCCESS = 'SERVER_EDIT_SUCCESS';\nexport const UPDATE_CONFIG = 'SERVER_UPDATE_CONFIG';\n\nexport const SETUP = 'SERVER_SETUP';\nexport const SETUP_SUCCESS = 'SERVER_SETUP_SUCCESS';\nexport const SETUP_FAILURE = 'SERVER_SETUP_FAILURE';\n\nexport const STATUS_CHANGE = 'SERVER_STATUS_CHANGE';\nexport const STATUS_FETCH_START = 'SERVER_STATUS_FETCH_START';\n\nexport const AUTH_OPTIONS = [\n    { value: 'SHA256', text: 'SHA256' },\n    { value: 'SHA512', text: 'SHA512' },\n    { value: 'SHA1', text: 'SHA1' },\n];\n\nexport const CIPHER_OPTIONS = [\n    { value: 'BF-CBC', text: 'BF-CBC' },\n    { value: 'AES-128-CBC', text: 'AES-128-CBC' },\n    { value: 'DES-EDE3-CBC', text: 'DES-EDE3-CBC' },\n];\n\nexport const PROTOCOL_OPTIONS = [\n    { value: 'tcp', text: 'tcp' },\n    { value: 'udp', text: 'udp' },\n];\n\nexport const DEV_OPTIONS = [\n    { value: 'tun', text: 'tun - routed IP tunnel' },\n    { value: 'tap', text: 'tap - ethernet tunnel' },\n];\n\nexport const YES_NO_OPTIONS = [\n    { value: '1', text: 'Yes' },\n    { value: '0', text: 'No' },\n];\n\nexport const LOG_LEVEL_OPIONS = [\n    { value: '0', text: '0' },\n    { value: '1', text: '1' },\n    { value: '2', text: '2' },\n    { value: '3', text: '3' },\n    { value: '4', text: '4' },\n    { value: '5', text: '5' },\n    { value: '6', text: '6' },\n    { value: '7', text: '7' },\n    { value: '8', text: '8' },\n    { value: '9', text: '9' },\n];\n\nexport const TOPOLOGY_OPTIONS = [\n    { value: 'none', text: 'none' },\n    { value: 'subnet', text: 'subnet (recommended)' },\n    { value: 'net30', text: 'net30 (not recommended)' },\n    { value: 'p2p', text: 'p2p' },\n];\n\nexport const STATUS = {\n    OK: 'SERVER_STATUS_OK',\n    WARNING: 'SERVER_STATUS_WARNING',\n    ERROR: 'SERVER_STATUS_ERROR',\n    UNKNOWN: 'SERVER_STATUS_UNKNOWN',\n};\n\nexport const DEFAULT_SERVER_STATUS = {\n    server: {\n        level: STATUS.UNKNOWN,\n    },\n    vpn: {\n        level: STATUS.UNKNOWN,\n    },\n    users: {\n        level: STATUS.UNKNOWN,\n    },\n};\n\nexport const UPDATE_SERVER_STATUS_CACHE_TIME = 5 * 60 * 1000; // Every 5 minutes\n\nexport const MODE = {\n    SERVER: 'server',\n    BRIDGE: 'bridge',\n};\n\nexport const DEFAULT_SERVER_CONFIG = {\n    local_ip_address: '',\n    port: 1194,\n    protocol: 'udp',\n    dev: 'tun',\n    topology: 'net30',\n    server_mode: MODE.SERVER,\n    server: {\n        network: '10.8.0.0',\n        mask: '255.255.255.0',\n    },\n    server_bridge: {\n        network: '10.8.0.4',\n        mask: '255.255.255.0',\n        start: '10.8.0.50',\n        end: '10.8.0.100',\n    },\n    allow_subnet: '0',\n    allow_subnet_route: {\n        network: '',\n        mask: '',\n    },\n    assign_ip: '0',\n    assign_ip_route: {\n        network: '',\n        mask: '',\n    },\n    ifconfig_pool_persist: '1',\n    routes: [],\n    learn_address: './script',\n    redirect_gateway: {\n        local: '0',\n        auto_local: '0',\n        def1: '0',\n        bypass_dhcp: '0',\n        bypass_dns: '0',\n        bypass_local: '0',\n        block_local: '0',\n    },\n    client_to_client: '1',\n    duplicate_cn: '0',\n    keep_alive: {\n        ping: 10,\n        duration: 120,\n    },\n    tls_auth: '1',\n    auth_algorithm: 'SHA256',\n    cipher_algorithm: 'BF-CBC',\n    compress: '0',\n    max_clients: '',\n    user_privilege: 'nobody',\n    group_privilege: 'nogroup',\n    persist_key: '1',\n    persist_tun: '1',\n    verb: '3',\n    mute: '',\n    explicit_exit_notify: '1',\n};\n",
    "static": true,
    "longname": "src/constants/servers.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 167,
    "kind": "variable",
    "name": "FETCH",
    "memberof": "src/constants/servers.js",
    "static": true,
    "longname": "src/constants/servers.js~FETCH",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/servers.js",
    "importStyle": "{FETCH}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 168,
    "kind": "variable",
    "name": "ADD_SUCCESS",
    "memberof": "src/constants/servers.js",
    "static": true,
    "longname": "src/constants/servers.js~ADD_SUCCESS",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/servers.js",
    "importStyle": "{ADD_SUCCESS}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 169,
    "kind": "variable",
    "name": "EDIT_SUCCESS",
    "memberof": "src/constants/servers.js",
    "static": true,
    "longname": "src/constants/servers.js~EDIT_SUCCESS",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/servers.js",
    "importStyle": "{EDIT_SUCCESS}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 170,
    "kind": "variable",
    "name": "UPDATE_CONFIG",
    "memberof": "src/constants/servers.js",
    "static": true,
    "longname": "src/constants/servers.js~UPDATE_CONFIG",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/servers.js",
    "importStyle": "{UPDATE_CONFIG}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 171,
    "kind": "variable",
    "name": "SETUP",
    "memberof": "src/constants/servers.js",
    "static": true,
    "longname": "src/constants/servers.js~SETUP",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/servers.js",
    "importStyle": "{SETUP}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 172,
    "kind": "variable",
    "name": "SETUP_SUCCESS",
    "memberof": "src/constants/servers.js",
    "static": true,
    "longname": "src/constants/servers.js~SETUP_SUCCESS",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/servers.js",
    "importStyle": "{SETUP_SUCCESS}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 173,
    "kind": "variable",
    "name": "SETUP_FAILURE",
    "memberof": "src/constants/servers.js",
    "static": true,
    "longname": "src/constants/servers.js~SETUP_FAILURE",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/servers.js",
    "importStyle": "{SETUP_FAILURE}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 174,
    "kind": "variable",
    "name": "STATUS_CHANGE",
    "memberof": "src/constants/servers.js",
    "static": true,
    "longname": "src/constants/servers.js~STATUS_CHANGE",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/servers.js",
    "importStyle": "{STATUS_CHANGE}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 175,
    "kind": "variable",
    "name": "STATUS_FETCH_START",
    "memberof": "src/constants/servers.js",
    "static": true,
    "longname": "src/constants/servers.js~STATUS_FETCH_START",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/servers.js",
    "importStyle": "{STATUS_FETCH_START}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 176,
    "kind": "variable",
    "name": "AUTH_OPTIONS",
    "memberof": "src/constants/servers.js",
    "static": true,
    "longname": "src/constants/servers.js~AUTH_OPTIONS",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/servers.js",
    "importStyle": "{AUTH_OPTIONS}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 177,
    "kind": "variable",
    "name": "CIPHER_OPTIONS",
    "memberof": "src/constants/servers.js",
    "static": true,
    "longname": "src/constants/servers.js~CIPHER_OPTIONS",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/servers.js",
    "importStyle": "{CIPHER_OPTIONS}",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 178,
    "kind": "variable",
    "name": "PROTOCOL_OPTIONS",
    "memberof": "src/constants/servers.js",
    "static": true,
    "longname": "src/constants/servers.js~PROTOCOL_OPTIONS",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/servers.js",
    "importStyle": "{PROTOCOL_OPTIONS}",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 179,
    "kind": "variable",
    "name": "DEV_OPTIONS",
    "memberof": "src/constants/servers.js",
    "static": true,
    "longname": "src/constants/servers.js~DEV_OPTIONS",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/servers.js",
    "importStyle": "{DEV_OPTIONS}",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 180,
    "kind": "variable",
    "name": "YES_NO_OPTIONS",
    "memberof": "src/constants/servers.js",
    "static": true,
    "longname": "src/constants/servers.js~YES_NO_OPTIONS",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/servers.js",
    "importStyle": "{YES_NO_OPTIONS}",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 181,
    "kind": "variable",
    "name": "LOG_LEVEL_OPIONS",
    "memberof": "src/constants/servers.js",
    "static": true,
    "longname": "src/constants/servers.js~LOG_LEVEL_OPIONS",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/servers.js",
    "importStyle": "{LOG_LEVEL_OPIONS}",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 182,
    "kind": "variable",
    "name": "TOPOLOGY_OPTIONS",
    "memberof": "src/constants/servers.js",
    "static": true,
    "longname": "src/constants/servers.js~TOPOLOGY_OPTIONS",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/servers.js",
    "importStyle": "{TOPOLOGY_OPTIONS}",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 183,
    "kind": "variable",
    "name": "STATUS",
    "memberof": "src/constants/servers.js",
    "static": true,
    "longname": "src/constants/servers.js~STATUS",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/servers.js",
    "importStyle": "{STATUS}",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"OK\": string, \"WARNING\": string, \"ERROR\": string, \"UNKNOWN\": string}"
      ]
    }
  },
  {
    "__docId__": 184,
    "kind": "variable",
    "name": "DEFAULT_SERVER_STATUS",
    "memberof": "src/constants/servers.js",
    "static": true,
    "longname": "src/constants/servers.js~DEFAULT_SERVER_STATUS",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/servers.js",
    "importStyle": "{DEFAULT_SERVER_STATUS}",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"server\": *, \"vpn\": *, \"users\": *}"
      ]
    }
  },
  {
    "__docId__": 185,
    "kind": "variable",
    "name": "UPDATE_SERVER_STATUS_CACHE_TIME",
    "memberof": "src/constants/servers.js",
    "static": true,
    "longname": "src/constants/servers.js~UPDATE_SERVER_STATUS_CACHE_TIME",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/servers.js",
    "importStyle": "{UPDATE_SERVER_STATUS_CACHE_TIME}",
    "description": null,
    "lineNumber": 81,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 186,
    "kind": "variable",
    "name": "MODE",
    "memberof": "src/constants/servers.js",
    "static": true,
    "longname": "src/constants/servers.js~MODE",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/servers.js",
    "importStyle": "{MODE}",
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"SERVER\": string, \"BRIDGE\": string}"
      ]
    }
  },
  {
    "__docId__": 187,
    "kind": "variable",
    "name": "DEFAULT_SERVER_CONFIG",
    "memberof": "src/constants/servers.js",
    "static": true,
    "longname": "src/constants/servers.js~DEFAULT_SERVER_CONFIG",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/servers.js",
    "importStyle": "{DEFAULT_SERVER_CONFIG}",
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"local_ip_address\": *, \"port\": number, \"protocol\": string, \"dev\": string, \"topology\": string, \"server_mode\": *, \"server\": *, \"server_bridge\": *, \"allow_subnet\": string, \"allow_subnet_route\": *, \"assign_ip\": string, \"assign_ip_route\": *, \"ifconfig_pool_persist\": string, \"routes\": *, \"learn_address\": string, \"redirect_gateway\": *, \"client_to_client\": string, \"duplicate_cn\": string, \"keep_alive\": *, \"tls_auth\": string, \"auth_algorithm\": string, \"cipher_algorithm\": string, \"compress\": string, \"max_clients\": *, \"user_privilege\": string, \"group_privilege\": string, \"persist_key\": string, \"persist_tun\": string, \"verb\": string, \"mute\": *, \"explicit_exit_notify\": string}"
      ]
    }
  },
  {
    "__docId__": 188,
    "kind": "file",
    "name": "src/constants/users.js",
    "content": "export const ADD = 'USER_ADD';\nexport const EDIT = 'USER_EDIT';\nexport const DOWNLOAD = 'USER_DOWNLOAD';\nexport const REMOVE = 'USER_REMOVE';\nexport const SETUP = 'USER_SETUP';\nexport const SETUP_FAILURE = 'USER_SETUP_FAILURE';\nexport const SETUP_SUCCESS = 'USER_SETUP_SUCCESS';\nexport const FETCH = 'USER_FETCH';\n",
    "static": true,
    "longname": "src/constants/users.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 189,
    "kind": "variable",
    "name": "ADD",
    "memberof": "src/constants/users.js",
    "static": true,
    "longname": "src/constants/users.js~ADD",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/users.js",
    "importStyle": "{ADD}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 190,
    "kind": "variable",
    "name": "EDIT",
    "memberof": "src/constants/users.js",
    "static": true,
    "longname": "src/constants/users.js~EDIT",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/users.js",
    "importStyle": "{EDIT}",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 191,
    "kind": "variable",
    "name": "DOWNLOAD",
    "memberof": "src/constants/users.js",
    "static": true,
    "longname": "src/constants/users.js~DOWNLOAD",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/users.js",
    "importStyle": "{DOWNLOAD}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 192,
    "kind": "variable",
    "name": "REMOVE",
    "memberof": "src/constants/users.js",
    "static": true,
    "longname": "src/constants/users.js~REMOVE",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/users.js",
    "importStyle": "{REMOVE}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 193,
    "kind": "variable",
    "name": "SETUP",
    "memberof": "src/constants/users.js",
    "static": true,
    "longname": "src/constants/users.js~SETUP",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/users.js",
    "importStyle": "{SETUP}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 194,
    "kind": "variable",
    "name": "SETUP_FAILURE",
    "memberof": "src/constants/users.js",
    "static": true,
    "longname": "src/constants/users.js~SETUP_FAILURE",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/users.js",
    "importStyle": "{SETUP_FAILURE}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 195,
    "kind": "variable",
    "name": "SETUP_SUCCESS",
    "memberof": "src/constants/users.js",
    "static": true,
    "longname": "src/constants/users.js~SETUP_SUCCESS",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/users.js",
    "importStyle": "{SETUP_SUCCESS}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 196,
    "kind": "variable",
    "name": "FETCH",
    "memberof": "src/constants/users.js",
    "static": true,
    "longname": "src/constants/users.js~FETCH",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/constants/users.js",
    "importStyle": "{FETCH}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 197,
    "kind": "file",
    "name": "src/containers/App.jsx",
    "content": "import React from 'react';\nimport { Provider } from 'react-redux';\nimport { Router, Route, IndexRoute } from 'react-router';\nimport ReduxToastr from 'react-redux-toastr';\nimport ReduxSweetAlert from 'react-redux-sweetalert';\nimport store, { history } from './../store';\nimport Dashboard from './../containers/dashboard/Dashboard';\nimport SelectSource from './authorization/Login';\nimport Authorization from './../components/authorization/Authorization';\nimport NewFile from './../containers/authorization/NewFile';\nimport ServerAdd from './../containers/servers/ServerAdd';\nimport ServerShow from './../containers/servers/ServerShow';\nimport ServerEdit from './../containers/servers/ServerEdit';\nimport UserAdd from './../containers/users/UserAdd';\nimport UserEdit from './../containers/users/UserEdit';\nimport Home from './../containers/home/Home';\nimport { isFileOpen } from './../selectors/authorization';\n\nconst requireFile = (next, replace) => {\n    if (!isFileOpen(store.getState())) {\n        replace('/login');\n    }\n};\n\nexport default () => (\n  <Provider store={store}>\n    <div>\n      <Router history={history}>\n        <Route path=\"/\" component={Dashboard} onEnter={requireFile}>\n          <Route path=\"server\">\n            <Route path=\"add\" component={ServerAdd} />\n            <Route path=\"show/:id\" component={ServerShow} />\n            <Route path=\"edit/:id\" component={ServerEdit} />\n            <Route path=\":id\">\n              <Route path=\"user\">\n                <Route path=\"add\" component={UserAdd} />\n                <Route path=\"edit/:user_id\" component={UserEdit} />\n              </Route>\n            </Route>\n          </Route>\n          <IndexRoute component={Home} />\n        </Route>\n        <Route path=\"/login\" component={Authorization}>\n          <IndexRoute component={SelectSource} />\n          <Route path=\"new\" component={NewFile} />\n        </Route>\n        <Route path=\"*\" component={Dashboard} />\n      </Router>\n      <ReduxToastr\n          timeOut={4000}\n          newestOnTop={false}\n          preventDuplicates\n          position=\"top-right\"\n          transitionIn=\"fadeIn\"\n          transitionOut=\"fadeOut\"\n          progressBar\n      />\n      <ReduxSweetAlert />\n    </div>\n  </Provider>\n);\n",
    "static": true,
    "longname": "src/containers/App.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 198,
    "kind": "function",
    "name": "requireFile",
    "memberof": "src/containers/App.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/App.jsx~requireFile",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/App.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "next",
        "types": [
          "*"
        ]
      },
      {
        "name": "replace",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 199,
    "kind": "function",
    "name": "App",
    "memberof": "src/containers/App.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/App.jsx~App",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/containers/App.jsx",
    "importStyle": "App",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 200,
    "kind": "file",
    "name": "src/containers/authorization/Login.jsx",
    "content": "import React from 'react';\nimport { Link } from 'react-router';\nimport { Button, Divider, Segment } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport '../../components/authorization/Login.scss';\nimport { fetchRecent, openFile, openFilePassword } from '../../actions/authorization';\nimport LoginWrapper from '../../components/authorization/LoginWrapper';\nimport { getRecentFiles } from '../../selectors/authorization';\nimport RecentFiles from '../../components/authorization/RecentFiles';\n\nclass Login extends React.Component {\n    componentDidMount() {\n        this.props.fetchRecent();\n    }\n\n    render() {\n        return (\n          <LoginWrapper header=\"Choose configuration file\">\n            <Segment className=\"action-buttons\">\n              <Link to=\"/login/new\" className=\"link-block\">\n                <Button size=\"medium\" fluid>New file</Button>\n              </Link>\n              <Divider horizontal>Or</Divider>\n              <Button\n                  onClick={() => this.props.onFileOpen()}\n                  size=\"medium\"\n                  primary\n                  fluid\n                  className=\"link-block\"\n              >\n                  Open file\n              </Button>\n            </Segment>\n            {this.props.recentFiles.length ? (\n              <RecentFiles\n                  recentFiles={this.props.recentFiles}\n                  handleClick={this.props.openRecent}\n              />\n                ) : null}\n          </LoginWrapper>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onFileOpen: file => dispatch(openFile(file)),\n    fetchRecent: () => dispatch(fetchRecent()),\n    openRecent: filename => dispatch(openFilePassword(filename)),\n});\n\nconst mapStateToProps = state => ({\n    recentFiles: getRecentFiles(state),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n",
    "static": true,
    "longname": "src/containers/authorization/Login.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 201,
    "kind": "class",
    "name": "Login",
    "memberof": "src/containers/authorization/Login.jsx",
    "static": true,
    "longname": "src/containers/authorization/Login.jsx~Login",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/authorization/Login.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 202,
    "kind": "method",
    "name": "componentDidMount",
    "memberof": "src/containers/authorization/Login.jsx~Login",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/containers/authorization/Login.jsx~Login#componentDidMount",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 203,
    "kind": "method",
    "name": "render",
    "memberof": "src/containers/authorization/Login.jsx~Login",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/containers/authorization/Login.jsx~Login#render",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 204,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "src/containers/authorization/Login.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/authorization/Login.jsx~mapDispatchToProps",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/authorization/Login.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "dispatch",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 205,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/containers/authorization/Login.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/authorization/Login.jsx~mapStateToProps",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/authorization/Login.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 206,
    "kind": "file",
    "name": "src/containers/authorization/NewFile.jsx",
    "content": "import React from 'react';\nimport { reduxForm, Field, SubmissionError } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { Form, Button, Header } from 'semantic-ui-react';\nimport { Link } from 'react-router';\nimport Actions from '../../components/form/Actions';\nimport Input from '../../components/form/Input';\nimport { newFile } from '../../actions/authorization';\nimport { required, minLength } from '../../utils/validators';\nimport File from '../../components/form/File';\nimport LoginWrapper from '../../components/authorization/LoginWrapper';\n\nconst NewFile = ({ onSubmit, submitting, pristine, reset, handleSubmit, change }) => (\n  <LoginWrapper header=\"Create new configuration file\">\n    <Header as=\"h1\">New file</Header>\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Field\n          component={File}\n          change={change}\n          save\n          type=\"text\"\n          name=\"filename\"\n          label=\"Config file path\"\n          validate={[required]}\n      />\n      <Field\n        component={Input}\n        name=\"password\"\n        label=\"Password\"\n        type=\"password\"\n        required\n        validate={[required, minLength(3)]}\n      />\n      <Field\n        component={Input}\n        name=\"duplicatedPassword\"\n        label=\"Duplicate password\"\n        type=\"password\"\n        required\n        validate={[required, minLength(3)]}\n      />\n\n      <Actions submitting={submitting} pristine={pristine} reset={reset}>\n        <Link to=\"/login\"><Button>Back</Button></Link>\n      </Actions>\n    </Form>\n  </LoginWrapper>\n);\n\nconst mapDispatchToProps = dispatch => ({\n    onSubmit: (data) => {\n        if (data.password !== data.duplicatedPassword) {\n            throw new SubmissionError({ duplicatedPassword: 'Passwords does not match' });\n        }\n        dispatch(newFile(data));\n    },\n});\n\nexport default connect(null, mapDispatchToProps)(reduxForm({\n    form: 'file',\n})(NewFile));\n",
    "static": true,
    "longname": "src/containers/authorization/NewFile.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 207,
    "kind": "function",
    "name": "NewFile",
    "memberof": "src/containers/authorization/NewFile.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/authorization/NewFile.jsx~NewFile",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/authorization/NewFile.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"onSubmit\": *, \"submitting\": *, \"pristine\": *, \"reset\": *, \"handleSubmit\": *, \"change\": *}"
        ],
        "defaultRaw": {
          "onSubmit": null,
          "submitting": null,
          "pristine": null,
          "reset": null,
          "handleSubmit": null,
          "change": null
        },
        "defaultValue": "{\"onSubmit\":null,\"submitting\":null,\"pristine\":null,\"reset\":null,\"handleSubmit\":null,\"change\":null}"
      }
    ]
  },
  {
    "__docId__": 208,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "src/containers/authorization/NewFile.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/authorization/NewFile.jsx~mapDispatchToProps",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/authorization/NewFile.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "dispatch",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 209,
    "kind": "file",
    "name": "src/containers/dashboard/Dashboard.jsx",
    "content": "import React from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Grid, Menu } from 'semantic-ui-react';\nimport { Link } from 'react-router';\nimport ServerMenu from '../servers/ServerMenu';\nimport Logs from '../../components/logs/Logs';\nimport { getLogsArray, getLogsCollapsed } from '../../selectors/logs';\n\nimport './Dashboard.scss';\nimport { clear, collapse } from '../../actions/logs';\nimport { closeFile } from '../../actions/authorization';\n\n// noinspection HtmlDeprecatedTag\nconst Dashboard = props => (\n  <Container fluid className=\"main\">\n    <Menu attached=\"top\" inverted className=\"top-menu fixed\">\n      <Menu.Item header as={Link} to=\"/\">OwnVPN</Menu.Item>\n      <Menu.Menu position=\"right\">\n        <Menu.Item onClick={() => props.handleLogout()}>Log out</Menu.Item>\n      </Menu.Menu>\n    </Menu>\n    <Grid padded divided>\n      <Grid.Column width=\"3\" className=\"sidebar-menu\">\n        <ServerMenu />\n      </Grid.Column>\n      <Grid.Column width=\"13\" className={`main-content ${props.logsCollapsed ? '' : 'logs-expanded'}`}>\n        <div>\n          {props.children}\n        </div>\n      </Grid.Column>\n    </Grid>\n\n    <div className=\"logs\">\n      <Logs\n          logs={props.logs}\n          collapsed={props.logsCollapsed}\n          handleCollapse={props.handleCollapse}\n          handleClear={props.handleClear}\n      />\n    </div>\n  </Container>\n);\n\nconst mapStateToProps = state => ({\n    logs: getLogsArray(state),\n    logsCollapsed: getLogsCollapsed(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    handleCollapse: () => dispatch(collapse()),\n    handleClear: () => dispatch(clear()),\n    handleLogout: () => dispatch(closeFile()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n",
    "static": true,
    "longname": "src/containers/dashboard/Dashboard.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 210,
    "kind": "function",
    "name": "Dashboard",
    "memberof": "src/containers/dashboard/Dashboard.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/dashboard/Dashboard.jsx~Dashboard",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/dashboard/Dashboard.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 211,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/containers/dashboard/Dashboard.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/dashboard/Dashboard.jsx~mapStateToProps",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/dashboard/Dashboard.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 212,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "src/containers/dashboard/Dashboard.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/dashboard/Dashboard.jsx~mapDispatchToProps",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/dashboard/Dashboard.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "dispatch",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 213,
    "kind": "file",
    "name": "src/containers/home/Home.jsx",
    "content": "import React from 'react';\nimport './Home.scss';\n\nexport default () => (\n  <div className=\"homepage\"><span className=\"logo\">OwnVPN</span></div>\n);\n",
    "static": true,
    "longname": "src/containers/home/Home.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 214,
    "kind": "function",
    "name": "Home",
    "memberof": "src/containers/home/Home.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/home/Home.jsx~Home",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/containers/home/Home.jsx",
    "importStyle": "Home",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 215,
    "kind": "file",
    "name": "src/containers/servers/ServerActions.jsx",
    "content": "import React from 'react';\nimport { connect } from 'react-redux';\nimport { Dropdown } from 'semantic-ui-react';\nimport { map } from 'lodash';\nimport { rebootServer, reuploadConfig, vpnAction } from '../../actions/servers';\n\n\nconst ServerActions = ({ server, setupInProgress, ...props }) => {\n    const items = [\n        { title: 'Reboot server', onClick: () => props.handleRebootServer(server) },\n        { title: 'Start VPN', onClick: () => props.handleVpnAction(server, 'startVpn') },\n        { title: 'Stop VPN', onClick: () => props.handleVpnAction(server, 'stopVpn') },\n        { title: 'Restart VPN', onClick: () => props.handleVpnAction(server, 'restartVpn') },\n        { title: 'Reupload config', onClick: () => props.handleReuploadConfig(server) },\n    ];\n\n    return (\n      <Dropdown floating button text=\"Actions\" loading={setupInProgress}>\n        <Dropdown.Menu>\n          {map(items, item => (\n            <Dropdown.Item\n                disabled={setupInProgress}\n                onClick={item.onClick}\n            >\n              {item.title}\n            </Dropdown.Item>\n          ))}\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n});\n\nconst mapDispatchToProps = dispatch => ({\n    handleRebootServer: server => dispatch(rebootServer(server)),\n    handleVpnAction: (server, action) => dispatch(vpnAction(server, action)),\n    handleReuploadConfig: server => dispatch(reuploadConfig(server)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ServerActions);\n",
    "static": true,
    "longname": "src/containers/servers/ServerActions.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 216,
    "kind": "function",
    "name": "ServerActions",
    "memberof": "src/containers/servers/ServerActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/servers/ServerActions.jsx~ServerActions",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/servers/ServerActions.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"server\": *, \"setupInProgress\": *, ...props: Object}"
        ],
        "defaultRaw": {
          "server": null,
          "setupInProgress": null,
          "props": {}
        },
        "defaultValue": "{\"server\":null,\"setupInProgress\":null,\"props\":{}}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 217,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/containers/servers/ServerActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/servers/ServerActions.jsx~mapStateToProps",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/servers/ServerActions.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "ownProps",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 218,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "src/containers/servers/ServerActions.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/servers/ServerActions.jsx~mapDispatchToProps",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/servers/ServerActions.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "dispatch",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 219,
    "kind": "file",
    "name": "src/containers/servers/ServerAdd.jsx",
    "content": "import React from 'react';\nimport { connect } from 'react-redux';\nimport ServerForm from '../../components/servers/ServerForm';\nimport { add, preview } from '../../actions/servers';\nimport { getFormSelector, getPreview } from '../../selectors/servers';\nimport { DEFAULT_SERVER_CONFIG } from '../../constants/servers';\nimport { validateServer } from '../../utils/validators';\n\nclass ServerAdd extends React.Component {\n    onPreview() {\n        this.props.handlePreview(this.props.config);\n    }\n\n    render() {\n        return <ServerForm {...this.props} onPreview={() => this.onPreview()} />;\n    }\n}\n\nconst mapStateToProps = state => ({\n    initialValues: {\n        port: 22,\n        config: {\n            ...DEFAULT_SERVER_CONFIG,\n        },\n    },\n    serverMode: getFormSelector(state, 'config.server_mode'),\n    devMode: getFormSelector(state, 'config.dev'),\n    allowSubnet: getFormSelector(state, 'config.allow_subnet'),\n    assignIp: getFormSelector(state, 'config.assign_ip'),\n    redirectGateway: getFormSelector(state, 'config.redirect_gateway'),\n    config: getPreview(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSubmit: (server) => {\n        validateServer(server);\n        dispatch(add(server));\n    },\n    handlePreview: config => dispatch(preview(config)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ServerAdd);\n",
    "static": true,
    "longname": "src/containers/servers/ServerAdd.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 220,
    "kind": "class",
    "name": "ServerAdd",
    "memberof": "src/containers/servers/ServerAdd.jsx",
    "static": true,
    "longname": "src/containers/servers/ServerAdd.jsx~ServerAdd",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/servers/ServerAdd.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 221,
    "kind": "method",
    "name": "onPreview",
    "memberof": "src/containers/servers/ServerAdd.jsx~ServerAdd",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/containers/servers/ServerAdd.jsx~ServerAdd#onPreview",
    "access": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 222,
    "kind": "method",
    "name": "render",
    "memberof": "src/containers/servers/ServerAdd.jsx~ServerAdd",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/containers/servers/ServerAdd.jsx~ServerAdd#render",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 223,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/containers/servers/ServerAdd.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/servers/ServerAdd.jsx~mapStateToProps",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/servers/ServerAdd.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 224,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "src/containers/servers/ServerAdd.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/servers/ServerAdd.jsx~mapDispatchToProps",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/servers/ServerAdd.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "dispatch",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 225,
    "kind": "file",
    "name": "src/containers/servers/ServerEdit.jsx",
    "content": "import React from 'react';\nimport { connect } from 'react-redux';\nimport { edit, preview } from '../../actions/servers';\nimport { getServer, getFormSelector, getPreview } from '../../selectors/servers';\nimport ServerForm from '../../components/servers/ServerForm';\nimport { validateServer } from '../../utils/validators';\n\nclass ServerEdit extends React.Component {\n    onPreview() {\n        this.props.handlePreview(this.props.config);\n    }\n\n    render() {\n        return <ServerForm {...this.props} onPreview={() => this.onPreview()} />;\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    initialValues: getServer(state, ownProps),\n    serverMode: getFormSelector(state, 'config.server_mode'),\n    devMode: getFormSelector(state, 'config.dev'),\n    allowSubnet: getFormSelector(state, 'config.allow_subnet'),\n    assignIp: getFormSelector(state, 'config.assign_ip'),\n    redirectGateway: getFormSelector(state, 'config.redirect_gateway'),\n    config: getPreview(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSubmit: (server) => {\n        validateServer(server);\n        dispatch(edit(server));\n    },\n    handlePreview: (config) => {\n        dispatch(preview(config));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ServerEdit);\n",
    "static": true,
    "longname": "src/containers/servers/ServerEdit.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 226,
    "kind": "class",
    "name": "ServerEdit",
    "memberof": "src/containers/servers/ServerEdit.jsx",
    "static": true,
    "longname": "src/containers/servers/ServerEdit.jsx~ServerEdit",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/servers/ServerEdit.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 227,
    "kind": "method",
    "name": "onPreview",
    "memberof": "src/containers/servers/ServerEdit.jsx~ServerEdit",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/containers/servers/ServerEdit.jsx~ServerEdit#onPreview",
    "access": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 228,
    "kind": "method",
    "name": "render",
    "memberof": "src/containers/servers/ServerEdit.jsx~ServerEdit",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/containers/servers/ServerEdit.jsx~ServerEdit#render",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 229,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/containers/servers/ServerEdit.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/servers/ServerEdit.jsx~mapStateToProps",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/servers/ServerEdit.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "ownProps",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 230,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "src/containers/servers/ServerEdit.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/servers/ServerEdit.jsx~mapDispatchToProps",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/servers/ServerEdit.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "dispatch",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 231,
    "kind": "file",
    "name": "src/containers/servers/ServerMenu.jsx",
    "content": "import React from 'react';\nimport { connect } from 'react-redux';\nimport ServerList from '../../components/servers/ServerList';\nimport { getServerArray } from '../../selectors/servers';\n\nconst ServerMenu = props => (\n  <ServerList servers={props.servers} activeMenuItem={props.activeMenuItem} />\n);\n\nconst mapStateToProps = state => ({\n    servers: getServerArray(state),\n    activeMenuItem: state.menu.sidebar_active,\n});\n\nexport default connect(mapStateToProps)(ServerMenu);\n",
    "static": true,
    "longname": "src/containers/servers/ServerMenu.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 232,
    "kind": "function",
    "name": "ServerMenu",
    "memberof": "src/containers/servers/ServerMenu.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/servers/ServerMenu.jsx~ServerMenu",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/servers/ServerMenu.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 233,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/containers/servers/ServerMenu.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/servers/ServerMenu.jsx~mapStateToProps",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/servers/ServerMenu.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 234,
    "kind": "file",
    "name": "src/containers/servers/ServerShow.jsx",
    "content": "import React from 'react';\nimport { connect } from 'react-redux';\nimport { canOpenTerminal, getServer, getSetupInProgress } from '../../selectors/servers';\nimport { getSetupInProgressMap, getUsersArray } from '../../selectors/users';\nimport { handleSSHTerminal, loadConfigFromServer, loadConfigTextArea, setup } from '../../actions/servers';\nimport ServerShowContent from '../../components/servers/ServerShowContent';\nimport { setupClient, remove, downloadConfiguration, setupAllClients } from '../../actions/users';\n\nconst ServerShow = props => (\n  <ServerShowContent {...props} />\n);\n\nconst mapStateToProps = (state, ownProp) => ({\n    server: getServer(state, ownProp),\n    users: getUsersArray(state, ownProp),\n    setupInProgress: getSetupInProgress(state, ownProp),\n    userSetupInProgress: getSetupInProgressMap(state),\n    canOpenTerminal: canOpenTerminal(),\n});\n\n// noinspection JSUnusedGlobalSymbols\nconst mapDispatchToProps = dispatch => ({\n    handleSetup: server => dispatch(setup(server)),\n    handleSetupClient: (server, user) => dispatch(setupClient(server, user)),\n    handleSetupAllClients: (server, users) => dispatch(setupAllClients(server, users)),\n    handleRemoveClient: (server, user) => dispatch(remove(server, user)),\n    handleDownloadConfiguration: (server, user) => dispatch(downloadConfiguration(server, user)),\n    handleLoadConfigFromServer: server => dispatch(loadConfigFromServer(server)),\n    handleLoadConfigTextArea: server => dispatch(loadConfigTextArea(server)),\n    handleSSHTerminal: server => dispatch(handleSSHTerminal(server)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ServerShow);\n",
    "static": true,
    "longname": "src/containers/servers/ServerShow.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 235,
    "kind": "function",
    "name": "ServerShow",
    "memberof": "src/containers/servers/ServerShow.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/servers/ServerShow.jsx~ServerShow",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/servers/ServerShow.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 236,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/containers/servers/ServerShow.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/servers/ServerShow.jsx~mapStateToProps",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/servers/ServerShow.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "ownProp",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 237,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "src/containers/servers/ServerShow.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/servers/ServerShow.jsx~mapDispatchToProps",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/servers/ServerShow.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "dispatch",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 238,
    "kind": "file",
    "name": "src/containers/servers/status/ServerStatus.jsx",
    "content": "import React from 'react';\nimport { Card, Message, Button } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { loadConfigFromServer, reuploadConfig, updateStatus } from '../../../actions/servers';\nimport { getServerStatus, getServerFetchStatus, getSetupInProgress } from '../../../selectors/servers';\nimport ServerStatusItem from './ServerStatusItem';\nimport { UPDATE_SERVER_STATUS_CACHE_TIME } from '../../../constants/servers';\n\nclass ServerStatus extends React.Component {\n    // Update server status only if there is no data fetched,\n    // or last fetch is older than declared time\n    static shouldUpdateStatus(props) {\n        return (\n            !props.serverStatus.updated ||\n            (+new Date()) - props.serverStatus.updated > UPDATE_SERVER_STATUS_CACHE_TIME\n        );\n    }\n\n    constructor() {\n        super();\n        this.intervalId = null;\n    }\n\n    componentWillMount() {\n        this.updateTimer(this.props, true);\n    }\n\n    componentWillUpdate(newParams) {\n        this.updateTimer(newParams);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.intervalId);\n    }\n\n    updateServerStatus() {\n        return this.props.updateStatus(this.props.server);\n    }\n\n\n    updateTimer(props, force = false) {\n        if (force || props.server !== this.props.server) {\n            if (ServerStatus.shouldUpdateStatus(props)) {\n                if (this.intervalId) {\n                    clearInterval(this.intervalId);\n                }\n                this.props.updateStatus(props.server);\n                this.intervalId = setInterval(\n                    () => this.updateServerStatus(),\n                    UPDATE_SERVER_STATUS_CACHE_TIME,\n                );\n            }\n        }\n    }\n\n    render() {\n        const configDifferent = this.props.serverStatus.config && this.props.serverStatus.config.different;\n        return (\n          <div className=\"server-status\">\n            <Card.Group itemsPerRow=\"3\">\n              <ServerStatusItem\n                    name=\"Server status\"\n                    statusFetchInProgress={this.props.serverStatusFetchInProgress}\n                    handleRefresh={() => this.updateServerStatus()}\n                    updated={this.props.serverStatus.updated}\n                    {...this.props.serverStatus.server}\n              />\n              <ServerStatusItem\n                    name=\"VPN status\"\n                    statusFetchInProgress={this.props.serverStatusFetchInProgress}\n                    handleRefresh={() => this.updateServerStatus()}\n                    updated={this.props.serverStatus.updated}\n                    {...this.props.serverStatus.vpn}\n              />\n              <ServerStatusItem\n                    name=\"VPN statistics\"\n                    statusFetchInProgress={this.props.serverStatusFetchInProgress}\n                    handleRefresh={() => this.updateServerStatus()}\n                    updated={this.props.serverStatus.updated}\n                    {...this.props.serverStatus.users}\n              />\n            </Card.Group>\n            {configDifferent === true ? <Message warning>\n              <Message.Header>Config difference</Message.Header>\n              <Message.Content>\n                <div>\n                    There is config difference between saved config and config file on server.\n                </div>\n                <div className=\"action-buttons\">\n                  <Button\n                      disabled={this.props.setupInProgress}\n                      onClick={() => this.props.handleLoadConfigFromServer(this.props.server)}\n                  >\n                      Load config from server\n                  </Button>\n                  <Button\n                      disabled={this.props.setupInProgress}\n                      onClick={() => this.props.handleReuploadConfig(this.props.server)}\n                  >\n                      Upload config to server\n                  </Button>\n                </div>\n              </Message.Content>\n            </Message> : null}\n          </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    serverStatus: getServerStatus(state, ownProps),\n    serverStatusFetchInProgress: getServerFetchStatus(state, ownProps),\n    setupInProgress: getSetupInProgress(state, ownProps.server),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    updateStatus: server => dispatch(updateStatus(server)),\n    handleLoadConfigFromServer: server => dispatch(loadConfigFromServer(server, () => dispatch(updateStatus(server)))),\n    handleReuploadConfig: server => dispatch(reuploadConfig(server, () => dispatch(updateStatus(server)))),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ServerStatus);\n",
    "static": true,
    "longname": "src/containers/servers/status/ServerStatus.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 239,
    "kind": "class",
    "name": "ServerStatus",
    "memberof": "src/containers/servers/status/ServerStatus.jsx",
    "static": true,
    "longname": "src/containers/servers/status/ServerStatus.jsx~ServerStatus",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/servers/status/ServerStatus.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 240,
    "kind": "method",
    "name": "shouldUpdateStatus",
    "memberof": "src/containers/servers/status/ServerStatus.jsx~ServerStatus",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/servers/status/ServerStatus.jsx~ServerStatus.shouldUpdateStatus",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 241,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/containers/servers/status/ServerStatus.jsx~ServerStatus",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/containers/servers/status/ServerStatus.jsx~ServerStatus#constructor",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 242,
    "kind": "member",
    "name": "intervalId",
    "memberof": "src/containers/servers/status/ServerStatus.jsx~ServerStatus",
    "static": false,
    "longname": "src/containers/servers/status/ServerStatus.jsx~ServerStatus#intervalId",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 243,
    "kind": "method",
    "name": "componentWillMount",
    "memberof": "src/containers/servers/status/ServerStatus.jsx~ServerStatus",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/containers/servers/status/ServerStatus.jsx~ServerStatus#componentWillMount",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 244,
    "kind": "method",
    "name": "componentWillUpdate",
    "memberof": "src/containers/servers/status/ServerStatus.jsx~ServerStatus",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/containers/servers/status/ServerStatus.jsx~ServerStatus#componentWillUpdate",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "newParams",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 245,
    "kind": "method",
    "name": "componentWillUnmount",
    "memberof": "src/containers/servers/status/ServerStatus.jsx~ServerStatus",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/containers/servers/status/ServerStatus.jsx~ServerStatus#componentWillUnmount",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 246,
    "kind": "method",
    "name": "updateServerStatus",
    "memberof": "src/containers/servers/status/ServerStatus.jsx~ServerStatus",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/containers/servers/status/ServerStatus.jsx~ServerStatus#updateServerStatus",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 247,
    "kind": "method",
    "name": "updateTimer",
    "memberof": "src/containers/servers/status/ServerStatus.jsx~ServerStatus",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/containers/servers/status/ServerStatus.jsx~ServerStatus#updateTimer",
    "access": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      },
      {
        "name": "force",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      }
    ]
  },
  {
    "__docId__": 248,
    "kind": "member",
    "name": "intervalId",
    "memberof": "src/containers/servers/status/ServerStatus.jsx~ServerStatus",
    "static": false,
    "longname": "src/containers/servers/status/ServerStatus.jsx~ServerStatus#intervalId",
    "access": null,
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 249,
    "kind": "method",
    "name": "render",
    "memberof": "src/containers/servers/status/ServerStatus.jsx~ServerStatus",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/containers/servers/status/ServerStatus.jsx~ServerStatus#render",
    "access": null,
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 250,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/containers/servers/status/ServerStatus.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/servers/status/ServerStatus.jsx~mapStateToProps",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/servers/status/ServerStatus.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 110,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "ownProps",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 251,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "src/containers/servers/status/ServerStatus.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/servers/status/ServerStatus.jsx~mapDispatchToProps",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/servers/status/ServerStatus.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 116,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "dispatch",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 252,
    "kind": "file",
    "name": "src/containers/servers/status/ServerStatusItem.jsx",
    "content": "/* eslint-disable react/no-danger */\nimport React from 'react';\nimport { Card, Icon, Popup } from 'semantic-ui-react';\nimport moment from 'moment';\nimport './ServerStatusItem.scss';\nimport { STATUS } from '../../../constants/servers';\n\nexport default ({ statusFetchInProgress, handleRefresh, ...props }) => {\n    let icon;\n    let color;\n    let detailsElement;\n\n    switch (props.level) {\n        case STATUS.OK:\n            icon = 'check circle';\n            color = 'green';\n            break;\n        case STATUS.WARNING:\n            icon = 'exclamation triangle';\n            color = 'yellow';\n            break;\n        case STATUS.ERROR:\n            icon = 'exclamation circle';\n            color = 'red';\n            break;\n        case STATUS.UNKNOWN:\n            icon = 'question circle';\n            color = 'grey';\n            break;\n        default:\n            break;\n    }\n\n    let iconElement = <Icon name={icon} size=\"big\" color={color} />;\n\n    if (props.description) {\n        iconElement = (\n          <Popup\n                className=\"whitespace-pre\"\n                trigger={iconElement}\n                content={props.description}\n                hoverable\n          />\n        );\n    }\n\n    if (props.details) {\n        detailsElement = (\n          <Popup\n                className=\"whitespace-pre\"\n                trigger={<Icon name=\"question circle\" color=\"grey\" />}\n                hoverable\n                wide=\"very\"\n          >\n            <span className=\"details-content\" dangerouslySetInnerHTML={{ __html: props.details }} />\n          </Popup>\n        );\n    }\n\n    return (\n      <Card>\n        <Card.Content>\n          {detailsElement}\n          {iconElement}\n          <Icon\n                loading={statusFetchInProgress}\n                disabled={statusFetchInProgress}\n                onClick={handleRefresh}\n                title=\"Refresh\"\n                className=\"spinner-icon pointer\"\n                name=\"refresh\"\n                size=\"small\"\n                color=\"grey\"\n          />\n          <Card.Header>{props.name}</Card.Header>\n          {props.updated ? <Card.Meta>Update: {moment(props.updated).format('YYYY-MM-DD H:mm:ss.SS')}</Card.Meta> : null}\n        </Card.Content>\n      </Card>\n    );\n};\n",
    "static": true,
    "longname": "src/containers/servers/status/ServerStatusItem.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 253,
    "kind": "function",
    "name": "ServerStatusItem",
    "memberof": "src/containers/servers/status/ServerStatusItem.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/servers/status/ServerStatusItem.jsx~ServerStatusItem",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/containers/servers/status/ServerStatusItem.jsx",
    "importStyle": "ServerStatusItem",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"statusFetchInProgress\": *, \"handleRefresh\": *, ...props: Object}"
        ],
        "defaultRaw": {
          "statusFetchInProgress": null,
          "handleRefresh": null,
          "props": {}
        },
        "defaultValue": "{\"statusFetchInProgress\":null,\"handleRefresh\":null,\"props\":{}}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 254,
    "kind": "file",
    "name": "src/containers/users/UserAdd.jsx",
    "content": "import React from 'react';\nimport { connect } from 'react-redux';\nimport { push } from 'react-router-redux';\nimport { add } from '../../actions/users';\nimport UserForm from '../../components/users/UserForm';\nimport { validateUser } from '../../utils/validators';\n\nconst UserAdd = props => <UserForm {...props} />;\n\nconst mapStateToProps = (state, ownProps) => ({\n    initialValues: {\n        serverId: ownProps.params.id,\n        config: {\n            muteReplayWarnings: '0',\n            httpProxyRetry: '0',\n        }\n    },\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSubmit: (user) => {\n        validateUser(user);\n        dispatch(add(user));\n        dispatch(push(`/server/show/${user.serverId}`));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAdd);\n",
    "static": true,
    "longname": "src/containers/users/UserAdd.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 255,
    "kind": "function",
    "name": "UserAdd",
    "memberof": "src/containers/users/UserAdd.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/users/UserAdd.jsx~UserAdd",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/users/UserAdd.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 256,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/containers/users/UserAdd.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/users/UserAdd.jsx~mapStateToProps",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/users/UserAdd.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "ownProps",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 257,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "src/containers/users/UserAdd.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/users/UserAdd.jsx~mapDispatchToProps",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/users/UserAdd.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "dispatch",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 258,
    "kind": "file",
    "name": "src/containers/users/UserEdit.jsx",
    "content": "import React from 'react';\nimport { connect } from 'react-redux';\nimport { push } from 'react-router-redux';\nimport UserForm from '../../components/users/UserForm';\nimport { edit } from '../../actions/users';\nimport { getUser } from '../../selectors/users';\nimport { validateUser } from '../../utils/validators';\n\nconst UserEdit = props => <UserForm {...props} />;\n\nconst mapStateToProps = (state, ownProps) => {\n    const user = getUser(state, ownProps);\n    user.serverId = ownProps.params.id;\n\n    return {\n        initialValues: user,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSubmit: (user) => {\n        validateUser(user);\n        dispatch(edit(user));\n        dispatch(push(`/server/show/${user.serverId}`));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserEdit);\n",
    "static": true,
    "longname": "src/containers/users/UserEdit.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 259,
    "kind": "function",
    "name": "UserEdit",
    "memberof": "src/containers/users/UserEdit.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/users/UserEdit.jsx~UserEdit",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/users/UserEdit.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 260,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/containers/users/UserEdit.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/users/UserEdit.jsx~mapStateToProps",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/users/UserEdit.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "ownProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"initialValues\": *}"
      ]
    }
  },
  {
    "__docId__": 261,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "src/containers/users/UserEdit.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/containers/users/UserEdit.jsx~mapDispatchToProps",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/containers/users/UserEdit.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "dispatch",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 262,
    "kind": "file",
    "name": "src/core/ConfigurationGenerator.js",
    "content": "import { isArray, isEmpty, isUndefined, forIn } from 'lodash';\nimport { MODE } from '../constants/servers';\n\nexport default class ConfigurationGenerator {\n    static isOn(field) {\n        return field === '1';\n    }\n\n    static isSet(field) {\n        return !isUndefined(field) && field;\n    }\n\n    static addCcdRoute(lines, route) {\n        lines.push('client-config-dir ccd');\n        lines.push(`route ${route.network} ${route.mask}`);\n    }\n\n    static generate(config) {\n        const lines = [];\n\n        if (!ConfigurationGenerator.isSet(config)) {\n            return '';\n        }\n\n        if (ConfigurationGenerator.isSet(config.local_ip_address)) {\n            lines.push(`local ${config.local_ip_address}`);\n        }\n\n        if (ConfigurationGenerator.isSet(config.port)) {\n            lines.push(`port ${config.port}`);\n        }\n\n        this.addProto(config, lines);\n        this.addDev(config, lines);\n\n        lines.push('ca ca.crt');\n        lines.push('cert server.crt');\n        lines.push('key server.key');\n        lines.push('dh dh2048.pem');\n\n        if (ConfigurationGenerator.isSet(config.topology)) {\n            lines.push(`topology ${config.topology}`);\n        }\n\n        switch (config.server_mode) {\n            case MODE.SERVER:\n                if (ConfigurationGenerator.isSet(config.server)) {\n                    lines.push(`server ${config.server.network} ${config.server.mask}`);\n                }\n                break;\n            case MODE.BRIDGE:\n                if (ConfigurationGenerator.isSet(config.server_bridge)) {\n                    lines.push(`server-bridge ${config.server_bridge.network} ${config.server_bridge.mask} ${config.server_bridge.start} ${config.server_bridge.end}`);\n                }\n                break;\n            default:\n                break;\n        }\n\n        if (ConfigurationGenerator.isOn(config.ifconfig_pool_persist)) {\n            lines.push('ifconfig-pool-persist ipp.txt');\n        }\n\n        if (!isEmpty(config.routes) && isArray(config.routes)) {\n            forIn(config.routes, (route) => {\n                lines.push(`push \"route ${route.network} ${route.mask}\"`);\n            });\n        }\n\n        if (\n            ConfigurationGenerator.isOn(config.allow_subnet) &&\n            ConfigurationGenerator.isSet(config.allow_subnet_route)\n        ) {\n            ConfigurationGenerator.addCcdRoute(lines, config.allow_subnet_route);\n        }\n\n        if (\n            ConfigurationGenerator.isOn(config.assign_ip) &&\n            ConfigurationGenerator.isSet(config.assign_ip_route)\n        ) {\n            ConfigurationGenerator.addCcdRoute(lines, config.assign_ip_route);\n        }\n\n        if (ConfigurationGenerator.isSet(config.learn_address)) {\n            lines.push(`learn-address ${config.learn_address}`);\n        }\n\n        ConfigurationGenerator.addRedirectGateway(lines, config.redirect_gateway);\n\n        if (ConfigurationGenerator.isOn(config.client_to_client)) {\n            lines.push('client-to-client');\n        }\n\n        if (ConfigurationGenerator.isOn(config.duplicate_cn)) {\n            lines.push('duplicate-cn');\n        }\n\n        if (ConfigurationGenerator.isSet(config.keep_alive)) {\n            lines.push(`keepalive ${config.keep_alive.ping} ${config.keep_alive.duration}`);\n        }\n\n        if (ConfigurationGenerator.isOn(config.tls_auth)) {\n            lines.push('tls-auth ta.key 0');\n        }\n\n        this.addAuth(config, lines);\n        this.addCipher(config, lines);\n\n        if (ConfigurationGenerator.isOn(config.compress)) {\n            lines.push('compress lz4-v2');\n            lines.push('push \"compress lz4-v2\"');\n        }\n\n        if (ConfigurationGenerator.isSet(config.max_clients)) {\n            lines.push(`max-clients ${config.max_clients}`);\n        }\n\n        this.addPrivilege(config, lines);\n        this.addPersist(config, lines);\n        this.addVerb(config, lines);\n        this.addMute(config, lines);\n\n        if (ConfigurationGenerator.isOn(config.explicit_exit_notify)) {\n            lines.push('explicit-exit-notify 1');\n        }\n\n        lines.push('status openvpn-status.log');\n\n        return lines.join('\\n');\n    }\n\n    static generateUser(config, server, userConfig) {\n        const lines = ['client'];\n\n        if (!ConfigurationGenerator.isSet(config) || !ConfigurationGenerator.isSet(server)) {\n            return '';\n        }\n\n        this.addDev(config, lines);\n        this.addProto(config, lines);\n\n        if (this.isRemoteServerSet(server, config)) {\n            lines.push(`remote ${server.host} ${config.port}`);\n        }\n\n        lines.push('resolv-retry infinite');\n        lines.push('nobind');\n\n        this.addPrivilege(config, lines);\n        this.addPersist(config, lines);\n\n        if (ConfigurationGenerator.isOn(userConfig.httpProxyRetry)) {\n            lines.push('http-proxy-retry');\n        }\n\n        if (ConfigurationGenerator.isSet(userConfig.httpProxyServer) &&\n            ConfigurationGenerator.isSet(userConfig.httpProxyPort)) {\n            lines.push(`http-proxy ${userConfig.httpProxyServer} ${userConfig.httpProxyPort}`);\n        }\n\n        if (ConfigurationGenerator.isOn(userConfig.muteReplayWarnings)) {\n            lines.push('mute-replay-warnings');\n        }\n\n        if (ConfigurationGenerator.isOn(config.tls_auth)) {\n            lines.push('remote-cert-tls server');\n            lines.push('tls-auth ta.key 1');\n        }\n\n        this.addCipher(config, lines);\n\n        this.addVerb(config, lines);\n        this.addMute(config, lines);\n\n        lines.push('key-direction 1');\n\n        this.addAuth(config, lines);\n\n        return lines.join('\\n');\n    }\n\n    static isRemoteServerSet(server, config) {\n        return (\n            ConfigurationGenerator.isSet(server.host) &&\n            ConfigurationGenerator.isSet(config.port)\n        );\n    }\n\n    static addAuth(config, lines) {\n        if (ConfigurationGenerator.isSet(config.auth_algorithm)) {\n            lines.push(`auth ${config.auth_algorithm}`);\n        }\n    }\n\n    static addMute(config, lines) {\n        if (ConfigurationGenerator.isSet(config.mute)) {\n            lines.push(`mute ${config.mute}`);\n        }\n    }\n\n    static addVerb(config, lines) {\n        if (ConfigurationGenerator.isSet(config.verb)) {\n            lines.push(`verb ${config.verb}`);\n        }\n    }\n\n    static addCipher(config, lines) {\n        if (ConfigurationGenerator.isSet(config.cipher_algorithm)) {\n            lines.push(`cipher ${config.cipher_algorithm}`);\n        }\n    }\n\n    static addPersist(config, lines) {\n        if (ConfigurationGenerator.isOn(config.persist_key)) {\n            lines.push('persist-key');\n        }\n\n        if (ConfigurationGenerator.isOn(config.persist_tun)) {\n            lines.push('persist-tun');\n        }\n    }\n\n    static addPrivilege(config, lines) {\n        if (ConfigurationGenerator.isSet(config.user_privilege)) {\n            lines.push(`user ${config.user_privilege}`);\n        }\n\n        if (ConfigurationGenerator.isSet(config.group_privilege)) {\n            lines.push(`group ${config.group_privilege}`);\n        }\n    }\n\n    static addProto(config, lines) {\n        if (ConfigurationGenerator.isSet(config.protocol)) {\n            lines.push(`proto ${config.protocol}`);\n        }\n    }\n\n    static addDev(config, lines) {\n        if (ConfigurationGenerator.isSet(config.dev)) {\n            lines.push(`dev ${config.dev}`);\n        }\n    }\n\n    static addRedirectGateway(lines, redirectGateway) {\n        const options = [];\n\n        if (!ConfigurationGenerator.isSet(redirectGateway)) {\n            return;\n        }\n\n        if (ConfigurationGenerator.isOn(redirectGateway.local)) {\n            options.push('local');\n        }\n\n        if (ConfigurationGenerator.isOn(redirectGateway.auto_local)) {\n            options.push('autolocal');\n        }\n\n        if (ConfigurationGenerator.isOn(redirectGateway.def1)) {\n            options.push('def1');\n        }\n\n        if (ConfigurationGenerator.isOn(redirectGateway.bypass_dhcp)) {\n            options.push('bypass-dhcp');\n        }\n\n        if (ConfigurationGenerator.isOn(redirectGateway.bypass_dns)) {\n            options.push('bypass-dns');\n        }\n\n        if (ConfigurationGenerator.isOn(redirectGateway.block_local)) {\n            options.push('block-local');\n        }\n\n        if (options.length > 0) {\n            lines.push(`push \"redirect-gateway ${options.join(' ')}\"`);\n        }\n    }\n}\n",
    "static": true,
    "longname": "src/core/ConfigurationGenerator.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 263,
    "kind": "class",
    "name": "ConfigurationGenerator",
    "memberof": "src/core/ConfigurationGenerator.js",
    "static": true,
    "longname": "src/core/ConfigurationGenerator.js~ConfigurationGenerator",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/core/ConfigurationGenerator.js",
    "importStyle": "ConfigurationGenerator",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false
  },
  {
    "__docId__": 264,
    "kind": "method",
    "name": "isOn",
    "memberof": "src/core/ConfigurationGenerator.js~ConfigurationGenerator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/ConfigurationGenerator.js~ConfigurationGenerator.isOn",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "field",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 265,
    "kind": "method",
    "name": "isSet",
    "memberof": "src/core/ConfigurationGenerator.js~ConfigurationGenerator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/ConfigurationGenerator.js~ConfigurationGenerator.isSet",
    "access": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "field",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 266,
    "kind": "method",
    "name": "addCcdRoute",
    "memberof": "src/core/ConfigurationGenerator.js~ConfigurationGenerator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/ConfigurationGenerator.js~ConfigurationGenerator.addCcdRoute",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "lines",
        "types": [
          "*"
        ]
      },
      {
        "name": "route",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 267,
    "kind": "method",
    "name": "generate",
    "memberof": "src/core/ConfigurationGenerator.js~ConfigurationGenerator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/ConfigurationGenerator.js~ConfigurationGenerator.generate",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "config",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 268,
    "kind": "method",
    "name": "generateUser",
    "memberof": "src/core/ConfigurationGenerator.js~ConfigurationGenerator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/ConfigurationGenerator.js~ConfigurationGenerator.generateUser",
    "access": null,
    "description": null,
    "lineNumber": 132,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "config",
        "types": [
          "*"
        ]
      },
      {
        "name": "server",
        "types": [
          "*"
        ]
      },
      {
        "name": "userConfig",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 269,
    "kind": "method",
    "name": "isRemoteServerSet",
    "memberof": "src/core/ConfigurationGenerator.js~ConfigurationGenerator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/ConfigurationGenerator.js~ConfigurationGenerator.isRemoteServerSet",
    "access": null,
    "description": null,
    "lineNumber": 182,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      },
      {
        "name": "config",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 270,
    "kind": "method",
    "name": "addAuth",
    "memberof": "src/core/ConfigurationGenerator.js~ConfigurationGenerator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/ConfigurationGenerator.js~ConfigurationGenerator.addAuth",
    "access": null,
    "description": null,
    "lineNumber": 189,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "config",
        "types": [
          "*"
        ]
      },
      {
        "name": "lines",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 271,
    "kind": "method",
    "name": "addMute",
    "memberof": "src/core/ConfigurationGenerator.js~ConfigurationGenerator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/ConfigurationGenerator.js~ConfigurationGenerator.addMute",
    "access": null,
    "description": null,
    "lineNumber": 195,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "config",
        "types": [
          "*"
        ]
      },
      {
        "name": "lines",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 272,
    "kind": "method",
    "name": "addVerb",
    "memberof": "src/core/ConfigurationGenerator.js~ConfigurationGenerator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/ConfigurationGenerator.js~ConfigurationGenerator.addVerb",
    "access": null,
    "description": null,
    "lineNumber": 201,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "config",
        "types": [
          "*"
        ]
      },
      {
        "name": "lines",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 273,
    "kind": "method",
    "name": "addCipher",
    "memberof": "src/core/ConfigurationGenerator.js~ConfigurationGenerator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/ConfigurationGenerator.js~ConfigurationGenerator.addCipher",
    "access": null,
    "description": null,
    "lineNumber": 207,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "config",
        "types": [
          "*"
        ]
      },
      {
        "name": "lines",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 274,
    "kind": "method",
    "name": "addPersist",
    "memberof": "src/core/ConfigurationGenerator.js~ConfigurationGenerator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/ConfigurationGenerator.js~ConfigurationGenerator.addPersist",
    "access": null,
    "description": null,
    "lineNumber": 213,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "config",
        "types": [
          "*"
        ]
      },
      {
        "name": "lines",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 275,
    "kind": "method",
    "name": "addPrivilege",
    "memberof": "src/core/ConfigurationGenerator.js~ConfigurationGenerator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/ConfigurationGenerator.js~ConfigurationGenerator.addPrivilege",
    "access": null,
    "description": null,
    "lineNumber": 223,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "config",
        "types": [
          "*"
        ]
      },
      {
        "name": "lines",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 276,
    "kind": "method",
    "name": "addProto",
    "memberof": "src/core/ConfigurationGenerator.js~ConfigurationGenerator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/ConfigurationGenerator.js~ConfigurationGenerator.addProto",
    "access": null,
    "description": null,
    "lineNumber": 233,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "config",
        "types": [
          "*"
        ]
      },
      {
        "name": "lines",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 277,
    "kind": "method",
    "name": "addDev",
    "memberof": "src/core/ConfigurationGenerator.js~ConfigurationGenerator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/ConfigurationGenerator.js~ConfigurationGenerator.addDev",
    "access": null,
    "description": null,
    "lineNumber": 239,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "config",
        "types": [
          "*"
        ]
      },
      {
        "name": "lines",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 278,
    "kind": "method",
    "name": "addRedirectGateway",
    "memberof": "src/core/ConfigurationGenerator.js~ConfigurationGenerator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/ConfigurationGenerator.js~ConfigurationGenerator.addRedirectGateway",
    "access": null,
    "description": null,
    "lineNumber": 245,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "lines",
        "types": [
          "*"
        ]
      },
      {
        "name": "redirectGateway",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 279,
    "kind": "file",
    "name": "src/core/ConfigurationReader.js",
    "content": "import { MODE } from '../constants/servers';\n\nexport default class ConfigurationReader {\n    readProperty(key) {\n        const regex = new RegExp(`^${key} (.*)$`, 'm');\n        const matches = regex.exec(this.content);\n\n        if (matches !== null) {\n            return matches[1];\n        }\n\n        return '';\n    }\n\n    isPropertySet(key) {\n        const regex = new RegExp(`^${key}$`, 'm');\n        return regex.test(this.content);\n    }\n\n    readBoolProperty(key) {\n        if (this.readProperty(key).length > 0 || this.isPropertySet(key)) {\n            return '1';\n        }\n        return '0';\n    }\n\n    readIpAndMask(key) {\n        const server = this.readProperty(key).split(' ');\n\n        return {\n            network: server[0],\n            mask: server[1],\n        };\n    }\n\n    readRoutes() {\n        const regex = /^push \"route (.*) (.*)\"$/mg;\n        const routes = [];\n        let matches;\n\n        // eslint-disable-next-line no-cond-assign\n        while ((matches = regex.exec(this.content) !== null)) {\n            if (matches.index === regex.lastIndex) {\n                regex.lastIndex += 1;\n            }\n\n            if (matches.length > 0) {\n                routes.push({\n                    network: matches[1],\n                    mask: matches[2],\n                });\n            }\n        }\n\n        return matches;\n    }\n\n    read(content) {\n        this.content = content;\n        const config = {};\n\n        config.local_ip_address = this.readProperty('local');\n        config.port = this.readProperty('port');\n        config.protocol = this.readProperty('proto');\n        config.dev = this.readProperty('dev');\n        config.topology = this.readProperty('topology');\n\n        if (this.readBoolProperty('server')) {\n            config.server_mode = MODE.SERVER;\n            config.server = this.readIpAndMask('server');\n        } else if (this.readBoolProperty('server-bridge')) {\n            config.server_mode = MODE.BRIDGE;\n            config.server_bridge = this.readIpAndMask('server-bridge');\n        }\n\n        config.ifconfig_pool_persist = this.readBoolProperty('ifconfig-pool-persist');\n        config.learn_address = this.readProperty('learn-address');\n        config.routes = this.readRoutes();\n\n        if (this.readBoolProperty('client-config-dir')) {\n            if (config.server_mode === MODE.SERVER && config.dev === 'tun') {\n                config.allow_subnet_route = this.readProperty('route');\n                config.allow_subnet = '1';\n                config.assign_ip = '0';\n            } else {\n                config.assign_ip_route = this.readProperty('route');\n                config.assign_ip = '1';\n                config.allow_subnet = '0';\n            }\n        }\n\n        config.client_to_client = this.readBoolProperty('client-to-client');\n        config.duplicate_cn = this.readBoolProperty('duplicate-cn');\n\n        const keepAlive = this.readProperty('keepalive').split(' ');\n\n        if (keepAlive.length > 0) {\n            config.keep_alive = {\n                ping: keepAlive[0],\n                duration: keepAlive[1],\n            };\n        }\n\n        config.tls_auth = this.readBoolProperty('tls-auth');\n        config.auth_algorithm = this.readProperty('auth');\n        config.cipher_algorithm = this.readProperty('cipher');\n        config.compress = this.readBoolProperty('compress');\n        config.max_clients = this.readProperty('max-clients');\n        config.user_privilege = this.readProperty('user');\n        config.group_privilege = this.readProperty('group');\n        config.persist_key = this.readBoolProperty('persist-key');\n        config.persist_tun = this.readBoolProperty('persist-tun');\n        config.verb = this.readProperty('verb');\n        config.mute = this.readProperty('mute');\n        config.explicit_exit_notify = this.readBoolProperty('explicit-exit-notify');\n\n        return config;\n    }\n}\n",
    "static": true,
    "longname": "src/core/ConfigurationReader.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 280,
    "kind": "class",
    "name": "ConfigurationReader",
    "memberof": "src/core/ConfigurationReader.js",
    "static": true,
    "longname": "src/core/ConfigurationReader.js~ConfigurationReader",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/core/ConfigurationReader.js",
    "importStyle": "ConfigurationReader",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false
  },
  {
    "__docId__": 281,
    "kind": "method",
    "name": "readProperty",
    "memberof": "src/core/ConfigurationReader.js~ConfigurationReader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/ConfigurationReader.js~ConfigurationReader#readProperty",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 282,
    "kind": "method",
    "name": "isPropertySet",
    "memberof": "src/core/ConfigurationReader.js~ConfigurationReader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/ConfigurationReader.js~ConfigurationReader#isPropertySet",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 283,
    "kind": "method",
    "name": "readBoolProperty",
    "memberof": "src/core/ConfigurationReader.js~ConfigurationReader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/ConfigurationReader.js~ConfigurationReader#readBoolProperty",
    "access": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 284,
    "kind": "method",
    "name": "readIpAndMask",
    "memberof": "src/core/ConfigurationReader.js~ConfigurationReader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/ConfigurationReader.js~ConfigurationReader#readIpAndMask",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"network\": *, \"mask\": *}"
      ]
    }
  },
  {
    "__docId__": 285,
    "kind": "method",
    "name": "readRoutes",
    "memberof": "src/core/ConfigurationReader.js~ConfigurationReader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/ConfigurationReader.js~ConfigurationReader#readRoutes",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 286,
    "kind": "method",
    "name": "read",
    "memberof": "src/core/ConfigurationReader.js~ConfigurationReader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/ConfigurationReader.js~ConfigurationReader#read",
    "access": null,
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "content",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 287,
    "kind": "member",
    "name": "content",
    "memberof": "src/core/ConfigurationReader.js~ConfigurationReader",
    "static": false,
    "longname": "src/core/ConfigurationReader.js~ConfigurationReader#content",
    "access": null,
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 288,
    "kind": "file",
    "name": "src/core/Encryption.js",
    "content": "import fs from 'fs';\nimport CryptoJS from 'crypto-js';\nimport $q from 'q';\n\nlet instance = null;\n\nexport const deleteInstance = () => {\n    instance = null;\n};\n\nexport default class Encryption {\n    constructor(filepath = null, encryptionKey = null, runChecks = true) {\n        if (instance) {\n            return instance;\n        }\n\n        this.filepath = filepath;\n        this.encryptionKey = encryptionKey;\n\n        if (runChecks) {\n            if (!this.fileExists()) {\n                instance = null;\n                throw new Error('File not exists');\n            }\n\n            if (!this.isKeyValid()) {\n                instance = null;\n                throw new Error('Password is invalid');\n            }\n        }\n\n        instance = this;\n        return instance;\n    }\n\n    fileExists() {\n        try {\n            fs.accessSync(this.filepath);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    }\n\n    isKeyValid() {\n        try {\n            this.readSync();\n        } catch (e) {\n            return false;\n        }\n        return true;\n    }\n\n    encrypt(data) {\n        return CryptoJS.AES.encrypt(JSON.stringify(data), this.encryptionKey);\n    }\n\n    decrypt(data) {\n        const bytes = CryptoJS.AES.decrypt(data.toString(), this.encryptionKey);\n        return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n    }\n\n    readSync() {\n        return this.decrypt(fs.readFileSync(this.filepath, 'utf-8', 'r'));\n    }\n\n    read() {\n        const deferred = $q.defer();\n        fs.readFile(this.filepath, 'utf-8', (error, data) => {\n            if (error) {\n                deferred.reject(error);\n            }\n            deferred.resolve(this.decrypt(data));\n        });\n        return deferred.promise;\n    }\n\n    save(data, flag = 'w') {\n        const deferred = $q.defer();\n        fs.writeFile(this.filepath, this.encrypt(data), { encoding: 'utf8', flag }, (error) => {\n            if (error) {\n                deferred.reject(error);\n                return;\n            }\n            deferred.resolve();\n        });\n        return deferred.promise;\n    }\n}\n",
    "static": true,
    "longname": "src/core/Encryption.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 289,
    "kind": "variable",
    "name": "instance",
    "memberof": "src/core/Encryption.js",
    "static": true,
    "longname": "src/core/Encryption.js~instance",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/core/Encryption.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 290,
    "kind": "function",
    "name": "deleteInstance",
    "memberof": "src/core/Encryption.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/Encryption.js~deleteInstance",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/core/Encryption.js",
    "importStyle": "{deleteInstance}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 291,
    "kind": "class",
    "name": "Encryption",
    "memberof": "src/core/Encryption.js",
    "static": true,
    "longname": "src/core/Encryption.js~Encryption",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/core/Encryption.js",
    "importStyle": "Encryption",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false
  },
  {
    "__docId__": 292,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/Encryption.js~Encryption",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Encryption.js~Encryption#constructor",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "filepath",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      },
      {
        "name": "encryptionKey",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      },
      {
        "name": "runChecks",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      }
    ]
  },
  {
    "__docId__": 293,
    "kind": "member",
    "name": "filepath",
    "memberof": "src/core/Encryption.js~Encryption",
    "static": false,
    "longname": "src/core/Encryption.js~Encryption#filepath",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 294,
    "kind": "member",
    "name": "encryptionKey",
    "memberof": "src/core/Encryption.js~Encryption",
    "static": false,
    "longname": "src/core/Encryption.js~Encryption#encryptionKey",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 295,
    "kind": "method",
    "name": "fileExists",
    "memberof": "src/core/Encryption.js~Encryption",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Encryption.js~Encryption#fileExists",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 296,
    "kind": "method",
    "name": "isKeyValid",
    "memberof": "src/core/Encryption.js~Encryption",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Encryption.js~Encryption#isKeyValid",
    "access": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 297,
    "kind": "method",
    "name": "encrypt",
    "memberof": "src/core/Encryption.js~Encryption",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Encryption.js~Encryption#encrypt",
    "access": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 298,
    "kind": "method",
    "name": "decrypt",
    "memberof": "src/core/Encryption.js~Encryption",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Encryption.js~Encryption#decrypt",
    "access": null,
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 299,
    "kind": "method",
    "name": "readSync",
    "memberof": "src/core/Encryption.js~Encryption",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Encryption.js~Encryption#readSync",
    "access": null,
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 300,
    "kind": "method",
    "name": "read",
    "memberof": "src/core/Encryption.js~Encryption",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Encryption.js~Encryption#read",
    "access": null,
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 301,
    "kind": "method",
    "name": "save",
    "memberof": "src/core/Encryption.js~Encryption",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Encryption.js~Encryption#save",
    "access": null,
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      },
      {
        "name": "flag",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "w",
        "defaultValue": "w"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 302,
    "kind": "file",
    "name": "src/core/SSH.js",
    "content": "import NodeSSH from 'node-ssh';\nimport fs from 'fs';\nimport { remote } from 'electron';\nimport { swal } from 'react-redux-sweetalert';\nimport { add as addLog } from '../actions/logs';\nimport * as LOG from '../constants/logs';\nimport SSHStats from './SSHStats';\nimport ConfigurationGenerator from './ConfigurationGenerator';\n\nconst certDirectory = '~/openvpn-ca';\nconst varsFile = `${certDirectory}/vars`;\nconst certBegin = `cd ${certDirectory} && source ${varsFile}`;\n\nconst cleanAll = `${certDirectory}/clean-all`;\nconst buildCa = `${certDirectory}/pkitool --initca`;\nconst buildKeyServer = `${certBegin} && ${certDirectory}/pkitool --batch --server server`;\n\nconst buildDh = `${certBegin} && ${certDirectory}/build-dh`;\nconst buildHmac = `openvpn --genkey --secret ${certDirectory}/keys/ta.key`;\nconst allKeys = 'ca.crt ca.key server.crt server.key ta.key dh2048.pem';\nconst copyKeys = `cd ${certDirectory}/keys && sudo cp ${allKeys} /etc/openvpn`;\nconst checkKeys = `cd ${certDirectory}/keys && ls ${allKeys}`;\n\n\nconst generateClientKey = `${certDirectory}/pkitool --batch`;\nconst confFile = '/etc/openvpn/server.conf';\nconst clientKeysDir = '~/openvpn-ca/keys';\nconst clientOutputDir = '~/client-configs/files';\nconst ccdDir = '/etc/openvpn/ccd'; // it should be able to reassigned by server configuration\n\nexport default class SSH {\n    constructor(dispatch, server) {\n        this.dispatch = dispatch;\n        this.server = server;\n        this.ssh = new NodeSSH();\n\n        this.config = {\n            host: server.host,\n            port: server.port,\n            username: server.username,\n        };\n\n        if (server.key) {\n            this.config.privateKey = fs.readFileSync(server.key, 'utf-8', 'r');\n        }\n\n        if (server.password) {\n            this.config.password = server.password;\n        }\n\n        this.sudoPasswordRequired = false;\n\n        this.connection = this.ssh.connect(this.config)\n            .catch(e => Promise.reject(this.defaultError(e)))\n            .then(() => this.determineSudoPasswordNeeded());\n\n        this.statistics = new SSHStats(this, dispatch);\n    }\n\n    determineSudoPasswordNeeded() {\n        return this.runCommand('sudo -n true').then(() => null).catch((e) => {\n            if (e.stderr.indexOf('password is required') !== -1) {\n                // Got sudo access but password is required\n                this.sudoPasswordRequired = true;\n                return this.runCommand(`echo \"${this.config.password}\" | sudo -S -v`)\n                    .then(() => null)\n                    .catch(error => Promise.reject(this.defaultError(error)));\n            }\n            return Promise.reject(this.defaultError(e));\n        });\n    }\n\n    log(msg, level) {\n        this.dispatch(addLog(msg, level, 'SSH'));\n    }\n\n    setupServer() {\n        this.log('Starting setup_server', LOG.LEVEL.INFO);\n\n        return new Promise((resolve, reject) => {\n            this.connection\n                .then(() => this.aptGetUpdate()\n                    .then(() => this.aptGetInstall())\n                    .then(() => this.makeCADir())\n                    .then(() => this.configureCAVars())\n                    .then(() => this.generateServerKeys())\n                    .then(() => this.copyKeys())\n                    .then(() => this.uploadServerConfig())\n                    .then(() => this.enableIpForward())\n                    .then(() => this.configureFirewall())\n                    .then(() => this.restartVpn())\n                    .then(() => this.setupClientInfrastructure())\n                    .then(resolve)\n                    .catch((e) => {\n                        this.log('Something failed...', LOG.LEVEL.ERROR);\n                        this.log(e, LOG.LEVEL.ERROR);\n                        reject(e);\n                    }))\n                .catch(e => reject(e));\n        });\n    }\n\n    uploadConfig() {\n        return new Promise((resolve, reject) => {\n            this.connection\n                .then(() => this.uploadServerConfig()\n                    .then(() => this.restartVpn())\n                    .then(resolve)\n                    .catch((e) => {\n                        this.log('Something failed...', LOG.LEVEL.ERROR);\n                        this.log(e, LOG.LEVEL.ERROR);\n                        reject(e);\n                    }))\n                .catch(e => reject(e));\n        });\n    }\n\n    setupClient({ id, ipAddress, config }) {\n        this.log('Starting setup_client', LOG.LEVEL.INFO);\n\n        return new Promise((resolve, reject) => {\n            const checkUserFilesCommand = `ls ${clientKeysDir}/${id}.key && ls ${clientKeysDir}/${id}.crt && ls ${clientKeysDir}/${id}.csr`;\n            this.connection\n                .then(() => this.runCommand(checkUserFilesCommand, {}, false)\n                    .then((response) => {\n                        if (response.code === 0) {\n                            // Cert with given name exists\n                            this.log(`Key with name ${id} already exists`, LOG.LEVEL.WARNING);\n                            return new Promise((responseResolve, responseReject) => {\n                                this.dispatch(swal({\n                                    title: 'Key exists',\n                                    type: 'warning',\n                                    confirmButtonText: 'Yes',\n                                    cancelButtonText: 'No',\n                                    text: `Key with name ${id} already exists. Do you want to regenerate it?`,\n                                    showCancelButton: true,\n                                    closeOnConfirm: true,\n                                    onConfirm: () => responseResolve(response),\n                                    onCancel: () => responseReject(response),\n                                    allowOutsideClick: true,\n                                    onOutsideClick: () => responseReject(response),\n                                    onEscapeKey: () => responseReject(response),\n                                }));\n                            }).then(() => this.runCommand(`rm ${clientKeysDir}/${id}.key`)\n                                .then(() => this.removeCrtFromDB(id))\n                                .then(() => this.generateClientKey(id))\n                                .then(() => this.generateClientConfigFiles(id, config))\n                                .then(() => this.bindClientIp(id, ipAddress)))\n                            // eslint-disable-next-line arrow-body-style\n                            .catch(() => {\n                                // eslint-disable-next-line arrow-body-style\n                                return this.runCommand(`ls ${clientOutputDir}/${id}.ovpn`).then(() => {\n                                    return this.shouldRegenerateOvpn(response)\n                                        .then(() => this.generateClientConfigFiles(id, config))\n                                        .catch(() => {});\n                                }).catch(() => {});\n                            });\n                        } else if (response.code === 2) {\n                            // Cert not exist\n                            return this.generateClientKey(id)\n                                .then(() => this.generateClientConfigFiles(id, config)\n                                .then(() => this.bindClientIp(id, ipAddress)));\n                        }\n                        throw response;\n                    }))\n                .then(() => this.restartVpn())\n                .then(resolve)\n                .catch((e) => {\n                    this.log('Something failed...', LOG.LEVEL.ERROR);\n                    this.log(e, LOG.LEVEL.ERROR);\n                    reject(e);\n                });\n        });\n    }\n\n    shouldRegenerateOvpn(response) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => this.dispatch(swal({\n                title: 'Key exists',\n                type: 'warning',\n                confirmButtonText: 'Yes',\n                cancelButtonText: 'No',\n                text: 'Do you want to regenerate ovpn file??',\n                showCancelButton: true,\n                closeOnConfirm: true,\n                onConfirm: () => resolve(response),\n                onCancel: () => reject(response),\n                allowOutsideClick: true,\n                onOutsideClick: () => reject(response),\n                onEscapeKey: () => reject(response),\n            })), 200);\n        });\n    }\n\n    deleteClientFiles({ id }) {\n        return new Promise((resolve, reject) => {\n            this.connection\n                .then(() => this.runCommand(\n                    `rm -rf ${clientKeysDir}/${id}.key ${clientOutputDir}/${id}.ovpn ${clientKeysDir}/${id}.crt`,\n                ))\n                .then(() => this.removeCrtFromDB(id))\n                .then(() => this.restartVpn())\n                .then(resolve)\n                .catch((e) => {\n                    this.log('Something failed...', LOG.LEVEL.ERROR);\n                    this.log(e, LOG.LEVEL.ERROR);\n                    reject(e);\n                });\n        });\n    }\n\n    generateServerKeys() {\n        return this.runCommand(`${checkKeys}`, {}, false).then((response) => {\n            if (response.code === 0) {\n                return new Promise((resolve, reject) => {\n                    this.dispatch(swal({\n                        title: 'Key exists',\n                        confirmButtonText: 'Yes',\n                        cancelButtonText: 'No',\n                        type: 'warning',\n                        text: 'Server keys already exists. ' +\n                        'Do you want to regenerate them? ' +\n                        'Please note that this action will erase all server and client keys from the server and ' +\n                        'this action cannot be undone',\n                        showCancelButton: true,\n                        closeOnConfirm: true,\n                        onConfirm: () => resolve(response),\n                        onCancel: () => reject(response),\n                        allowOutsideClick: true,\n                        onOutsideClick: () => reject(response),\n                        onEscapeKey: () => reject(response),\n                    }));\n                }).then(() => this.generateAllServerKeys()).catch(keysResponse => keysResponse);\n            }\n            return this.generateAllServerKeys();\n        });\n    }\n\n    generateAllServerKeys() {\n        return this.cleanAll()\n            .then(() => this.buildCA())\n            .then(() => this.buildKeyServer())\n            .then(() => this.buildDH())\n            .then(() => this.buildHMAC());\n    }\n\n    generateClientKey(id) {\n        return this.runCommand(\n            `${certBegin} && ${generateClientKey} ${id}`,\n        );\n    }\n\n    removeCrtFromDB(id) {\n        return this.runCommand(\n            `sed -i '/CN=${id}/d' ${clientKeysDir}/index.txt`,\n        );\n    }\n\n    generateClientConfigFiles(id, userConfig) {\n        return this.runCommand(\n            `cat /dev/null \\\n            <(echo -e '${this.generateClientConfig(userConfig)}') \\\n            <(echo -e '<ca>') \\\n            ${clientKeysDir}/ca.crt \\\n            <(echo -e '</ca>\\n<cert>') \\\n            ${clientKeysDir}/${id}.crt \\\n            <(echo -e '</cert>\\n<key>') \\\n            ${clientKeysDir}/${id}.key \\\n            <(echo -e '</key>\\n<tls-auth>') \\\n            ${clientKeysDir}/ta.key \\\n            <(echo -e '</tls-auth>') \\\n            > ${clientOutputDir}/${id}.ovpn`,\n        );\n    }\n\n    bindClientIp(id, ipAddress) {\n        return this.runCommand(\n            `sudo mkdir -p ${ccdDir} && sudo touch ${ccdDir}/${id} && echo \"${ipAddress} ${SSH.nextIpAddress(ipAddress)}\" | sudo tee ${ccdDir}/${id}`,\n        );\n    }\n\n    static nextIpAddress(ipAddress) {\n        const sections = ipAddress.split('.');\n        sections[3] = +(sections[3]) + 1;\n        return sections.join('.');\n    }\n\n    defaultError(e) {\n        this.log(e, LOG.LEVEL.ERROR);\n        return e;\n    }\n\n    defaultSuccess(response, errorOnNonZero = true) {\n        if (errorOnNonZero && response.code !== 0) {\n            return Promise.reject(response);\n        }\n\n        if (response.code !== 0) {\n            this.log(response, LOG.LEVEL.WARNING);\n        } else {\n            this.log(response, LOG.LEVEL.INFO);\n        }\n\n        return response;\n    }\n\n    runCommand(command, params = {}, errorOnNonZero = true) {\n        const logTime = (t0) => {\n            const time = (performance.now() - t0) / 1000;\n            this.log(`${command} has finished, took: ${time} seconds`, LOG.LEVEL.INFO);\n            return time;\n        };\n\n        const t0 = performance.now();\n\n        this.log(`${command} has started`, LOG.LEVEL.INFO);\n\n        let finalCommand = command;\n        if (this.sudoPasswordRequired && command.indexOf('sudo') !== -1) {\n            finalCommand = `echo \"${this.config.password}\" | sudo -S -v && ${command}`\n        }\n\n        return this.ssh.execCommand(finalCommand, params)\n            .then(response => ({ ...response, command, command_time: logTime(t0) }))\n            .catch(e => this.defaultError(e))\n            .then(response => this.defaultSuccess(response, errorOnNonZero));\n    }\n\n    ls() {\n        return this.runCommand(`ls -al ${certDirectory}`);\n    }\n\n    aptGetUpdate() {\n        return this.runCommand('sudo apt-get update');\n    }\n\n    aptGetInstall() {\n        return this.runCommand('sudo apt-get install openvpn easy-rsa -y');\n    }\n\n    makeCADir() {\n        return this.runCommand(`make-cadir ${certDirectory}`, {}, false).then((response) => {\n            if (response.code === 0) {\n                return response;\n            } else if (response.code === 1 && response.stdout.includes('openvpn-ca exists')) {\n                this.log(`Directory ${certDirectory} exists, omitting`, LOG.LEVEL.INFO);\n                return response;\n            }\n            return Promise.reject(response);\n        });\n    }\n\n    setCAVar(key, value) {\n        return `sed -i 's/${key}=\".*\"/${key}=\"${value || ''}\"/' ${varsFile}`;\n    }\n\n    configureCAVars() {\n        const run = command => this.runCommand(command);\n        const server = this.server;\n\n        return this.runCommand(this.setCAVar('KEY_NAME', 'server'))\n            .then(() => run(this.setCAVar('KEY_COUNTRY', server.country)))\n            .then(() => run(this.setCAVar('KEY_PROVINCE', server.province)))\n            .then(() => run(this.setCAVar('KEY_CITY', server.city)))\n            .then(() => run(this.setCAVar('KEY_ORG', server.org)))\n            .then(() => run(this.setCAVar('KEY_EMAIL', server.email)))\n            .then(() => run(this.setCAVar('KEY_OU', server.ou)));\n    }\n\n    setCaCommonNameVar() {\n        return this.runCommand(`cat ${varsFile}`).then((response) => {\n            if (response.stdout.match(/^export KEY_CN=\".*\"/gm)) {\n                return this.runCommand(this.setCAVar('KEY_CN', 'server'));\n            } else {\n                return this.runCommand(`echo 'export KEY_CN=\"server\"' >> ${varsFile}`);\n            }\n        });\n    }\n\n    cleanAll() {\n        return this.runCommand(\n            `${certBegin} && ${cleanAll}`,\n        );\n    }\n\n    buildCA() {\n        return this.runCommand(\n            `${certBegin} && ${buildCa}`,\n        );\n    }\n\n    buildKeyServer() {\n        return this.runCommand(\n            `${buildKeyServer}`,\n        );\n    }\n\n    buildDH() {\n        return this.runCommand(\n            `${buildDh}`,\n        );\n    }\n\n    buildHMAC() {\n        return this.runCommand(\n            `${buildHmac}`,\n        );\n    }\n\n    copyKeys() {\n        return this.runCommand(\n            `${copyKeys}`,\n        );\n    }\n\n    enableIpForward() {\n        return this.runCommand(\n            // eslint-disable-next-line no-useless-escape\n            'sudo sed -i -r \\'s/#?net\\.ipv4\\.ip_forward\\=.*/net\\.ipv4\\.ip_forward=1/\\' /etc/sysctl.conf && sudo sysctl -p',\n        );\n    }\n\n    configureFirewall() {\n        let interfaceName = '';\n        return this.runCommand('ip route | grep default').then((response) => {\n            interfaceName = response.stdout.split(' ');\n            interfaceName = interfaceName[4];\n\n            if (!interfaceName) {\n                throw Error('Could not find interface name');\n            }\n\n            const command = `*nat\\n:POSTROUTING ACCEPT [0:0]\\n-A POSTROUTING -s 10.8.0.0/8 -o ${interfaceName} -j MASQUERADE\\nCOMMIT\\n`;\n\n            return this.runCommand('sudo cat /etc/ufw/before.rules').then((catResponse) => {\n                const data = catResponse.stdout;\n                if (data.indexOf(command) !== -1) {\n                    return;\n                }\n                return this.runCommand(`echo \"${command}\\n${data}\" | sudo tee /etc/ufw/before.rules`);\n            });\n        })\n            .then(() => this.runCommand('sudo sed -i \\'s/DEFAULT_FORWARD_POLICY=\".*\"/DEFAULT_FORWARD_POLICY=\"ACCEPT\"/\\' /etc/default/ufw'))\n            .then(() => this.runCommand(`sudo ufw allow ${this.server.config.port}/${this.server.config.protocol}`))\n            .then(() => this.runCommand('sudo ufw allow OpenSSH'))\n            .then(() => this.runCommand('sudo ufw disable && sudo ufw --force enable')); // force is needed for non-interactive mode\n    }\n\n    setupClientInfrastructure() {\n        return this.runCommand(\n            'mkdir -p ~/client-configs/files && chmod 700 ~/client-configs/files');\n    }\n\n    uploadServerConfig() {\n        const configContent = this.generateServerConfig();\n        return this.runCommand(\n            `echo \"${configContent}\" | sudo tee ${confFile}`,\n        );\n    }\n\n    generateServerConfig() {\n        return ConfigurationGenerator.generate(this.server.config);\n    }\n\n    generateClientConfig(userConfig) {\n        const server = this.server;\n        const config = this.server.config;\n        return ConfigurationGenerator.generateUser(config, server, userConfig);\n    }\n\n    downloadConfiguration({ id }) {\n        return new Promise((resolve, reject) => {\n            this.connection\n                .then(() => {\n                    const filePath = `${clientOutputDir}/${id}.ovpn`;\n                    return this.runCommand(`ls ${filePath}`, {}, false)\n                        .then((response) => {\n                            if (response.code === 0) {\n                                return this.downloadConfigFile(filePath, id, reject);\n                            } else if (response.code === 2) {\n                                return reject('File does not exists');\n                            }\n                            return reject(response);\n                        });\n                })\n                .then(resolve)\n                .catch((e) => {\n                    this.log('Something failed...', LOG.LEVEL.ERROR);\n                    this.log(e, LOG.LEVEL.ERROR);\n                    reject(e);\n                });\n        });\n    }\n\n    downloadConfigFile(filePath, id, reject) {\n        return this.runCommand(`readlink -f ${filePath}`).then((response) => {\n            const absoluteFilePath = response.stdout;\n            const filename = remote.dialog.showSaveDialog(\n                remote.getCurrentWindow(),\n                {\n                    defaultPath: `${id}.ovpn`,\n                },\n            );\n\n            return this.ssh.getFile(filename, absoluteFilePath);\n        }).catch(e => reject(e));\n    }\n\n    getConfigFromServer() {\n        return this.catFile(confFile);\n    }\n\n    catFile(path) {\n        return this.connection.then(() => this.runCommand(`cat ${path}`));\n    }\n\n    reboot() {\n        return this.runCommand('sudo reboot');\n    }\n\n    startVpn() {\n        return this.runCommand('sudo systemctl start openvpn@server')\n            .then(() => this.runCommand('sudo systemctl status openvpn@server'))\n            .then(() => this.runCommand('sudo systemctl enable openvpn@server'));\n    }\n\n    stopVpn() {\n        return this.runCommand('sudo systemctl stop openvpn@server');\n    }\n\n    restartVpn() {\n        return this.runCommand('sudo systemctl restart openvpn@server')\n            .then(() => this.runCommand('sudo systemctl status openvpn@server'));\n    }\n\n    runAction(action) {\n        return this.connection.then(() => this[action]());\n    }\n}\n\n",
    "static": true,
    "longname": "src/core/SSH.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 303,
    "kind": "variable",
    "name": "certDirectory",
    "memberof": "src/core/SSH.js",
    "static": true,
    "longname": "src/core/SSH.js~certDirectory",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/core/SSH.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 304,
    "kind": "variable",
    "name": "varsFile",
    "memberof": "src/core/SSH.js",
    "static": true,
    "longname": "src/core/SSH.js~varsFile",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/core/SSH.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 305,
    "kind": "variable",
    "name": "certBegin",
    "memberof": "src/core/SSH.js",
    "static": true,
    "longname": "src/core/SSH.js~certBegin",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/core/SSH.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 306,
    "kind": "variable",
    "name": "cleanAll",
    "memberof": "src/core/SSH.js",
    "static": true,
    "longname": "src/core/SSH.js~cleanAll",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/core/SSH.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 307,
    "kind": "variable",
    "name": "buildCa",
    "memberof": "src/core/SSH.js",
    "static": true,
    "longname": "src/core/SSH.js~buildCa",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/core/SSH.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 308,
    "kind": "variable",
    "name": "buildKeyServer",
    "memberof": "src/core/SSH.js",
    "static": true,
    "longname": "src/core/SSH.js~buildKeyServer",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/core/SSH.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 309,
    "kind": "variable",
    "name": "buildDh",
    "memberof": "src/core/SSH.js",
    "static": true,
    "longname": "src/core/SSH.js~buildDh",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/core/SSH.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 310,
    "kind": "variable",
    "name": "buildHmac",
    "memberof": "src/core/SSH.js",
    "static": true,
    "longname": "src/core/SSH.js~buildHmac",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/core/SSH.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 311,
    "kind": "variable",
    "name": "allKeys",
    "memberof": "src/core/SSH.js",
    "static": true,
    "longname": "src/core/SSH.js~allKeys",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/core/SSH.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 312,
    "kind": "variable",
    "name": "copyKeys",
    "memberof": "src/core/SSH.js",
    "static": true,
    "longname": "src/core/SSH.js~copyKeys",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/core/SSH.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 313,
    "kind": "variable",
    "name": "checkKeys",
    "memberof": "src/core/SSH.js",
    "static": true,
    "longname": "src/core/SSH.js~checkKeys",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/core/SSH.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 314,
    "kind": "variable",
    "name": "generateClientKey",
    "memberof": "src/core/SSH.js",
    "static": true,
    "longname": "src/core/SSH.js~generateClientKey",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/core/SSH.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 315,
    "kind": "variable",
    "name": "confFile",
    "memberof": "src/core/SSH.js",
    "static": true,
    "longname": "src/core/SSH.js~confFile",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/core/SSH.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 316,
    "kind": "variable",
    "name": "clientKeysDir",
    "memberof": "src/core/SSH.js",
    "static": true,
    "longname": "src/core/SSH.js~clientKeysDir",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/core/SSH.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 317,
    "kind": "variable",
    "name": "clientOutputDir",
    "memberof": "src/core/SSH.js",
    "static": true,
    "longname": "src/core/SSH.js~clientOutputDir",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/core/SSH.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 318,
    "kind": "variable",
    "name": "ccdDir",
    "memberof": "src/core/SSH.js",
    "static": true,
    "longname": "src/core/SSH.js~ccdDir",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/core/SSH.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 319,
    "kind": "class",
    "name": "SSH",
    "memberof": "src/core/SSH.js",
    "static": true,
    "longname": "src/core/SSH.js~SSH",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/core/SSH.js",
    "importStyle": "SSH",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false
  },
  {
    "__docId__": 320,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#constructor",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "dispatch",
        "types": [
          "*"
        ]
      },
      {
        "name": "server",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 321,
    "kind": "member",
    "name": "dispatch",
    "memberof": "src/core/SSH.js~SSH",
    "static": false,
    "longname": "src/core/SSH.js~SSH#dispatch",
    "access": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 322,
    "kind": "member",
    "name": "server",
    "memberof": "src/core/SSH.js~SSH",
    "static": false,
    "longname": "src/core/SSH.js~SSH#server",
    "access": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 323,
    "kind": "member",
    "name": "ssh",
    "memberof": "src/core/SSH.js~SSH",
    "static": false,
    "longname": "src/core/SSH.js~SSH#ssh",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 324,
    "kind": "member",
    "name": "config",
    "memberof": "src/core/SSH.js~SSH",
    "static": false,
    "longname": "src/core/SSH.js~SSH#config",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"host\": *, \"port\": *, \"username\": *}"
      ]
    }
  },
  {
    "__docId__": 325,
    "kind": "member",
    "name": "sudoPasswordRequired",
    "memberof": "src/core/SSH.js~SSH",
    "static": false,
    "longname": "src/core/SSH.js~SSH#sudoPasswordRequired",
    "access": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 326,
    "kind": "member",
    "name": "connection",
    "memberof": "src/core/SSH.js~SSH",
    "static": false,
    "longname": "src/core/SSH.js~SSH#connection",
    "access": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 327,
    "kind": "member",
    "name": "statistics",
    "memberof": "src/core/SSH.js~SSH",
    "static": false,
    "longname": "src/core/SSH.js~SSH#statistics",
    "access": null,
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 328,
    "kind": "method",
    "name": "determineSudoPasswordNeeded",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#determineSudoPasswordNeeded",
    "access": null,
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 329,
    "kind": "member",
    "name": "sudoPasswordRequired",
    "memberof": "src/core/SSH.js~SSH",
    "static": false,
    "longname": "src/core/SSH.js~SSH#sudoPasswordRequired",
    "access": null,
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 330,
    "kind": "method",
    "name": "log",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#log",
    "access": null,
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "msg",
        "types": [
          "*"
        ]
      },
      {
        "name": "level",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 331,
    "kind": "method",
    "name": "setupServer",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#setupServer",
    "access": null,
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 332,
    "kind": "method",
    "name": "uploadConfig",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#uploadConfig",
    "access": null,
    "description": null,
    "lineNumber": 103,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 333,
    "kind": "method",
    "name": "setupClient",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#setupClient",
    "access": null,
    "description": null,
    "lineNumber": 118,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"id\": *, \"ipAddress\": *, \"config\": *}"
        ],
        "defaultRaw": {
          "id": null,
          "ipAddress": null,
          "config": null
        },
        "defaultValue": "{\"id\":null,\"ipAddress\":null,\"config\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 334,
    "kind": "method",
    "name": "shouldRegenerateOvpn",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#shouldRegenerateOvpn",
    "access": null,
    "description": null,
    "lineNumber": 176,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "response",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 335,
    "kind": "method",
    "name": "deleteClientFiles",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#deleteClientFiles",
    "access": null,
    "description": null,
    "lineNumber": 195,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"id\": *}"
        ],
        "defaultRaw": {
          "id": null
        },
        "defaultValue": "{\"id\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 336,
    "kind": "method",
    "name": "generateServerKeys",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#generateServerKeys",
    "access": null,
    "description": null,
    "lineNumber": 212,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 337,
    "kind": "method",
    "name": "generateAllServerKeys",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#generateAllServerKeys",
    "access": null,
    "description": null,
    "lineNumber": 239,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 338,
    "kind": "method",
    "name": "generateClientKey",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#generateClientKey",
    "access": null,
    "description": null,
    "lineNumber": 247,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 339,
    "kind": "method",
    "name": "removeCrtFromDB",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#removeCrtFromDB",
    "access": null,
    "description": null,
    "lineNumber": 253,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 340,
    "kind": "method",
    "name": "generateClientConfigFiles",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#generateClientConfigFiles",
    "access": null,
    "description": null,
    "lineNumber": 259,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "userConfig",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 341,
    "kind": "method",
    "name": "bindClientIp",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#bindClientIp",
    "access": null,
    "description": null,
    "lineNumber": 276,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "ipAddress",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 342,
    "kind": "method",
    "name": "nextIpAddress",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/SSH.js~SSH.nextIpAddress",
    "access": null,
    "description": null,
    "lineNumber": 282,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "ipAddress",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 343,
    "kind": "method",
    "name": "defaultError",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#defaultError",
    "access": null,
    "description": null,
    "lineNumber": 288,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 344,
    "kind": "method",
    "name": "defaultSuccess",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#defaultSuccess",
    "access": null,
    "description": null,
    "lineNumber": 293,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "response",
        "types": [
          "*"
        ]
      },
      {
        "name": "errorOnNonZero",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 345,
    "kind": "method",
    "name": "runCommand",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#runCommand",
    "access": null,
    "description": null,
    "lineNumber": 307,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "command",
        "types": [
          "*"
        ]
      },
      {
        "name": "params",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "errorOnNonZero",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 346,
    "kind": "method",
    "name": "ls",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#ls",
    "access": null,
    "description": null,
    "lineNumber": 329,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 347,
    "kind": "method",
    "name": "aptGetUpdate",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#aptGetUpdate",
    "access": null,
    "description": null,
    "lineNumber": 333,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 348,
    "kind": "method",
    "name": "aptGetInstall",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#aptGetInstall",
    "access": null,
    "description": null,
    "lineNumber": 337,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 349,
    "kind": "method",
    "name": "makeCADir",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#makeCADir",
    "access": null,
    "description": null,
    "lineNumber": 341,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 350,
    "kind": "method",
    "name": "setCAVar",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#setCAVar",
    "access": null,
    "description": null,
    "lineNumber": 353,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 351,
    "kind": "method",
    "name": "configureCAVars",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#configureCAVars",
    "access": null,
    "description": null,
    "lineNumber": 357,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 352,
    "kind": "method",
    "name": "setCaCommonNameVar",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#setCaCommonNameVar",
    "access": null,
    "description": null,
    "lineNumber": 370,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 353,
    "kind": "method",
    "name": "cleanAll",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#cleanAll",
    "access": null,
    "description": null,
    "lineNumber": 380,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 354,
    "kind": "method",
    "name": "buildCA",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#buildCA",
    "access": null,
    "description": null,
    "lineNumber": 386,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 355,
    "kind": "method",
    "name": "buildKeyServer",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#buildKeyServer",
    "access": null,
    "description": null,
    "lineNumber": 392,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 356,
    "kind": "method",
    "name": "buildDH",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#buildDH",
    "access": null,
    "description": null,
    "lineNumber": 398,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 357,
    "kind": "method",
    "name": "buildHMAC",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#buildHMAC",
    "access": null,
    "description": null,
    "lineNumber": 404,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 358,
    "kind": "method",
    "name": "copyKeys",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#copyKeys",
    "access": null,
    "description": null,
    "lineNumber": 410,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 359,
    "kind": "method",
    "name": "enableIpForward",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#enableIpForward",
    "access": null,
    "description": null,
    "lineNumber": 416,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 360,
    "kind": "method",
    "name": "configureFirewall",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#configureFirewall",
    "access": null,
    "description": null,
    "lineNumber": 423,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 361,
    "kind": "method",
    "name": "setupClientInfrastructure",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#setupClientInfrastructure",
    "access": null,
    "description": null,
    "lineNumber": 449,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 362,
    "kind": "method",
    "name": "uploadServerConfig",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#uploadServerConfig",
    "access": null,
    "description": null,
    "lineNumber": 454,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 363,
    "kind": "method",
    "name": "generateServerConfig",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#generateServerConfig",
    "access": null,
    "description": null,
    "lineNumber": 461,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 364,
    "kind": "method",
    "name": "generateClientConfig",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#generateClientConfig",
    "access": null,
    "description": null,
    "lineNumber": 465,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "userConfig",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 365,
    "kind": "method",
    "name": "downloadConfiguration",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#downloadConfiguration",
    "access": null,
    "description": null,
    "lineNumber": 471,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"id\": *}"
        ],
        "defaultRaw": {
          "id": null
        },
        "defaultValue": "{\"id\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 366,
    "kind": "method",
    "name": "downloadConfigFile",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#downloadConfigFile",
    "access": null,
    "description": null,
    "lineNumber": 495,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "filePath",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "reject",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 367,
    "kind": "method",
    "name": "getConfigFromServer",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#getConfigFromServer",
    "access": null,
    "description": null,
    "lineNumber": 509,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 368,
    "kind": "method",
    "name": "catFile",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#catFile",
    "access": null,
    "description": null,
    "lineNumber": 513,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 369,
    "kind": "method",
    "name": "reboot",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#reboot",
    "access": null,
    "description": null,
    "lineNumber": 517,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 370,
    "kind": "method",
    "name": "startVpn",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#startVpn",
    "access": null,
    "description": null,
    "lineNumber": 521,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 371,
    "kind": "method",
    "name": "stopVpn",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#stopVpn",
    "access": null,
    "description": null,
    "lineNumber": 527,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 372,
    "kind": "method",
    "name": "restartVpn",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#restartVpn",
    "access": null,
    "description": null,
    "lineNumber": 531,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 373,
    "kind": "method",
    "name": "runAction",
    "memberof": "src/core/SSH.js~SSH",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSH.js~SSH#runAction",
    "access": null,
    "description": null,
    "lineNumber": 536,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 374,
    "kind": "file",
    "name": "src/core/SSHStats.js",
    "content": "import { map } from 'lodash';\nimport { STATUS } from '../constants/servers';\n\nexport default class SSHStats {\n    constructor(ssh, dispatch) {\n        this.dispatch = dispatch;\n        this.ssh = ssh;\n    }\n\n    getVpnStatus() {\n        return new Promise((resolve, reject) => {\n            this.ssh.connection\n                .then(() => this.isInstalled(resolve, reject))\n                .then(() => this.isActive(resolve, reject))\n                .catch(reject);\n        });\n    }\n\n    getMachineStatus() {\n        let details = '';\n        return new Promise((resolve, reject) => {\n            this.ssh.connection\n                .then(() => this.getMemoryStats().then((message) => {\n                    details += message;\n                }))\n                .then(() => this.getSystemStats(details).then((message) => {\n                    details += message;\n                }))\n                .then(() => this.getVpnStats().then((message) => {\n                    details += message;\n                }))\n                .then(() => resolve(details))\n                .catch(reject);\n        });\n    }\n\n    getVpnStats() {\n        const title = '<h5>OpenVPN - top</h5>';\n        return this.ssh.runCommand('top -bn1 | top -bn 1 -d 0.01 | grep \\'openvpn\\\\|^  PID\\'')\n            .then(r => `${title}<pre>${r.stdout}</pre>`)\n            .catch(() => `${title}<pre>Could not get vpn details, check logs for details</pre>`);\n    }\n\n    getSystemStats() {\n        const title = '<h5>System details</h5>';\n        return this.ssh.runCommand('top -bn 1 | head -n 5')\n            .then(r => `${title}<pre>${r.stdout}</pre>`)\n            .catch(() => `${title}<pre>Could not get system details, check logs for details</pre>`);\n    }\n\n    getMemoryStats() {\n        const title = '<h5>Memory</h5>';\n        return this.ssh.runCommand('free -m')\n            .then(r => `${title}<pre>${' '.repeat(15)}${r.stdout}</pre>`)\n            .catch(() => `${title}<pre>Could not get memory details, check logs for details</pre>`);\n    }\n\n    getUsersStats() {\n        return new Promise((resolve, reject) => {\n            this.ssh.connection\n                .then(() => this.ssh.runCommand('sudo cat /etc/openvpn/openvpn-status.log'))\n                .then((response) => {\n                    let details = '';\n                    details += this.getClientList(response);\n                    details += this.getRoutingTable(response);\n                    details += SSHStats.getGlobalStats(response);\n                    details += SSHStats.getUpdated(response);\n\n                    resolve({\n                        level: STATUS.OK,\n                        description: null,\n                        details,\n                    });\n                })\n                .catch(reject);\n        });\n    }\n\n    static getUpdated(response) {\n        const reg = new RegExp(/Updated,(.*?)\\n/i);\n        const result = reg.exec(response.stdout);\n        if (result && result.length > 1 && result[1]) {\n            return `<p>Updated: ${result[1]}</p>`;\n        }\n        return '';\n    }\n\n    static getGlobalStats(response) {\n        const reg = new RegExp(/GLOBAL STATS\\n(.*?)\\nEND/im);\n        const result = reg.exec(response.stdout);\n        if (result && result.length > 1 && result[1]) {\n            return `<b>Global stats</b><p>${result[1]}</p><div class=\"ui divider\"></div>`;\n        }\n        return '';\n    }\n\n    getRoutingTable(response) {\n        const reg = new RegExp(/(Virtual Address.*)\\n(.*?)\\nGLOBAL STATS/im);\n        const result = reg.exec(response.stdout);\n        if (result && result.length > 2 && result[1] && result[2]) {\n            return `<b>Routing table</b>${SSHStats.getPart(result[1], result[2])}<div class=\"ui divider\"></div>`;\n        }\n        return '';\n    }\n\n    getClientList(response) {\n        const reg = new RegExp(/(Common Name.*)\\n(.*?)\\nROUTING TABLE/im);\n        const result = reg.exec(response.stdout);\n        if (result && result.length > 2 && result[1] && result[2]) {\n            return `<b>Client list</b>${SSHStats.getPart(result[1], result[2])}<div class=\"ui divider\"></div>`;\n        }\n        return '';\n    }\n\n    static getPart(headerContent = '', linesContent = '') {\n        const headers = headerContent.split(',');\n        const lines = map(linesContent.split('\\n'), line => line.split(','));\n\n        return `\n        <table>\n            <thead>${map(headers, header => `<th>${header}</th>`).join('')}</thead>\n            ${map(lines, line =>\n            `<tr>${map(line, field => `<td>${field}</td>`).join('')}</tr>`,\n        ).join('')}\n        </table>`;\n    }\n\n    resolveFunction(resolve, reject, level, description = '') {\n        return this.ssh.runCommand('sudo systemctl status openvpn@server', {}, false)\n            .then((r) => {\n                resolve({\n                    level,\n                    description,\n                    details: r.stdout,\n                });\n            }).catch(reject);\n    }\n\n    isInstalled(resolve, reject) {\n        return this.ssh.runCommand('openvpn', {}, false)\n            .then((r) => {\n                if (r.code === 127) {\n                    return this.resolveFunction(\n                        resolve, reject, STATUS.ERROR, 'Openvpn is not installed',\n                    );\n                } else if (r.code === 1) {\n                    return null;\n                }\n            })\n            .catch(reject);\n    }\n\n    isActive(resolve, reject) {\n        return this.ssh.runCommand('sudo systemctl is-active openvpn@server', {}, false)\n            .then((r) => {\n                if (r.code === 0) {\n                    return this.resolveFunction(\n                        resolve, reject, STATUS.OK,\n                    );\n                } else if (r.stdout === 'inactive') {\n                    return this.isEnabled(resolve, reject);\n                } else if (r.code === 3) {\n                    return this.isFailed(resolve, reject);\n                }\n                return this.resolveFunction(\n                    resolve, reject,\n                    STATUS.ERROR, 'Error while checking service active status',\n                );\n            })\n            .catch(reject);\n    }\n\n    isFailed(resolve, reject) {\n        return this.ssh.runCommand('sudo systemctl is-failed openvpn@server', {}, false)\n            .then((r) => {\n                if (r.code === 0) {\n                    this.resolveFunction(\n                        resolve, reject,\n                        STATUS.ERROR, 'Service status is failed',\n                    );\n                } else if (r.code === 1) {\n                    this.resolveFunction(\n                        resolve, reject,\n                        STATUS.ERROR, 'Service status unknown',\n                    );\n                } else {\n                    this.resolveFunction(\n                        resolve, reject,\n                        STATUS.ERROR, 'Error while checking service failed status',\n                    );\n                }\n            }).catch(reject);\n    }\n\n    isEnabled(resolve, reject) {\n        return this.ssh.runCommand('sudo systemctl is-enabled openvpn@server', {}, false)\n            .then((r) => {\n                if (r.code === 0) {\n                    this.resolveFunction(\n                        resolve, reject,\n                        STATUS.WARNING, 'Service is enabled, but not active',\n                    );\n                } else {\n                    this.resolveFunction(\n                        resolve, reject,\n                        STATUS.ERROR, 'Error while checking service enabled status',\n                    );\n                }\n            }).catch(reject);\n    }\n}\n\n",
    "static": true,
    "longname": "src/core/SSHStats.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 375,
    "kind": "class",
    "name": "SSHStats",
    "memberof": "src/core/SSHStats.js",
    "static": true,
    "longname": "src/core/SSHStats.js~SSHStats",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/core/SSHStats.js",
    "importStyle": "SSHStats",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false
  },
  {
    "__docId__": 376,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/SSHStats.js~SSHStats",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSHStats.js~SSHStats#constructor",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "ssh",
        "types": [
          "*"
        ]
      },
      {
        "name": "dispatch",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 377,
    "kind": "member",
    "name": "dispatch",
    "memberof": "src/core/SSHStats.js~SSHStats",
    "static": false,
    "longname": "src/core/SSHStats.js~SSHStats#dispatch",
    "access": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 378,
    "kind": "member",
    "name": "ssh",
    "memberof": "src/core/SSHStats.js~SSHStats",
    "static": false,
    "longname": "src/core/SSHStats.js~SSHStats#ssh",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 379,
    "kind": "method",
    "name": "getVpnStatus",
    "memberof": "src/core/SSHStats.js~SSHStats",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSHStats.js~SSHStats#getVpnStatus",
    "access": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 380,
    "kind": "method",
    "name": "getMachineStatus",
    "memberof": "src/core/SSHStats.js~SSHStats",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSHStats.js~SSHStats#getMachineStatus",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 381,
    "kind": "method",
    "name": "getVpnStats",
    "memberof": "src/core/SSHStats.js~SSHStats",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSHStats.js~SSHStats#getVpnStats",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 382,
    "kind": "method",
    "name": "getSystemStats",
    "memberof": "src/core/SSHStats.js~SSHStats",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSHStats.js~SSHStats#getSystemStats",
    "access": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 383,
    "kind": "method",
    "name": "getMemoryStats",
    "memberof": "src/core/SSHStats.js~SSHStats",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSHStats.js~SSHStats#getMemoryStats",
    "access": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 384,
    "kind": "method",
    "name": "getUsersStats",
    "memberof": "src/core/SSHStats.js~SSHStats",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSHStats.js~SSHStats#getUsersStats",
    "access": null,
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 385,
    "kind": "method",
    "name": "getUpdated",
    "memberof": "src/core/SSHStats.js~SSHStats",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/SSHStats.js~SSHStats.getUpdated",
    "access": null,
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "response",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 386,
    "kind": "method",
    "name": "getGlobalStats",
    "memberof": "src/core/SSHStats.js~SSHStats",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/SSHStats.js~SSHStats.getGlobalStats",
    "access": null,
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "response",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 387,
    "kind": "method",
    "name": "getRoutingTable",
    "memberof": "src/core/SSHStats.js~SSHStats",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSHStats.js~SSHStats#getRoutingTable",
    "access": null,
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "response",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 388,
    "kind": "method",
    "name": "getClientList",
    "memberof": "src/core/SSHStats.js~SSHStats",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSHStats.js~SSHStats#getClientList",
    "access": null,
    "description": null,
    "lineNumber": 106,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "response",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 389,
    "kind": "method",
    "name": "getPart",
    "memberof": "src/core/SSHStats.js~SSHStats",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/SSHStats.js~SSHStats.getPart",
    "access": null,
    "description": null,
    "lineNumber": 115,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "headerContent",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "",
        "defaultValue": ""
      },
      {
        "name": "linesContent",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "",
        "defaultValue": ""
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 390,
    "kind": "method",
    "name": "resolveFunction",
    "memberof": "src/core/SSHStats.js~SSHStats",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSHStats.js~SSHStats#resolveFunction",
    "access": null,
    "description": null,
    "lineNumber": 128,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "resolve",
        "types": [
          "*"
        ]
      },
      {
        "name": "reject",
        "types": [
          "*"
        ]
      },
      {
        "name": "level",
        "types": [
          "*"
        ]
      },
      {
        "name": "description",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "",
        "defaultValue": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 391,
    "kind": "method",
    "name": "isInstalled",
    "memberof": "src/core/SSHStats.js~SSHStats",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSHStats.js~SSHStats#isInstalled",
    "access": null,
    "description": null,
    "lineNumber": 139,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "resolve",
        "types": [
          "*"
        ]
      },
      {
        "name": "reject",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 392,
    "kind": "method",
    "name": "isActive",
    "memberof": "src/core/SSHStats.js~SSHStats",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSHStats.js~SSHStats#isActive",
    "access": null,
    "description": null,
    "lineNumber": 153,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "resolve",
        "types": [
          "*"
        ]
      },
      {
        "name": "reject",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 393,
    "kind": "method",
    "name": "isFailed",
    "memberof": "src/core/SSHStats.js~SSHStats",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSHStats.js~SSHStats#isFailed",
    "access": null,
    "description": null,
    "lineNumber": 173,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "resolve",
        "types": [
          "*"
        ]
      },
      {
        "name": "reject",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 394,
    "kind": "method",
    "name": "isEnabled",
    "memberof": "src/core/SSHStats.js~SSHStats",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/SSHStats.js~SSHStats#isEnabled",
    "access": null,
    "description": null,
    "lineNumber": 195,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "resolve",
        "types": [
          "*"
        ]
      },
      {
        "name": "reject",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 395,
    "kind": "file",
    "name": "src/reducers/authorization.js",
    "content": "import { Map, List } from 'immutable';\nimport sha256 from 'crypto-js/sha256';\nimport * as AUTH from '../constants/authorization';\n\nconst DEFAULT_STATE = {\n    file: Map({\n        path: './config',\n        filename: 'severs',\n        decrypted: false,\n        password: '',\n        dirty: false,\n        open: false,\n    }),\n    recentFiles: List(),\n};\n\nconst hash = password => sha256(`${password}shOYpJ11dpoEsmll3xnl`);\n\nexport default (state = DEFAULT_STATE, { type, payload }) => {\n    switch (type) {\n        case AUTH.SAVE_SUCCESS:\n            return {\n                ...state,\n                file: state.file\n                    .set('decrypted', false)\n                    .set('dirty', false),\n            };\n        case AUTH.LOAD_SUCCESS:\n            return {\n                ...state,\n                file: state.file\n                    .set('decrypted', true),\n            };\n        case AUTH.NEW:\n            return {\n                ...state,\n                file: state.file\n                    .set('filename', payload.filename)\n                    .set('dirty', true)\n                    .set('open', true)\n                    .set('password', hash(payload.password)),\n            };\n        case AUTH.OPEN:\n            return {\n                ...state,\n                file: state.file\n                    .set('filename', payload.filename)\n                    .set('open', true)\n                    .set('password', hash(payload.password)),\n            };\n        case AUTH.CLOSE:\n            return {\n                ...state,\n                file: state.file.set('open', false),\n            };\n        case AUTH.FETCH_RECENT:\n            return {\n                ...state,\n                recentFiles: List(payload),\n            };\n        default:\n            return state;\n    }\n};\n",
    "static": true,
    "longname": "src/reducers/authorization.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 396,
    "kind": "variable",
    "name": "DEFAULT_STATE",
    "memberof": "src/reducers/authorization.js",
    "static": true,
    "longname": "src/reducers/authorization.js~DEFAULT_STATE",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/reducers/authorization.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"file\": *, \"recentFiles\": *}"
      ]
    }
  },
  {
    "__docId__": 397,
    "kind": "function",
    "name": "hash",
    "memberof": "src/reducers/authorization.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/authorization.js~hash",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/reducers/authorization.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "password",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 398,
    "kind": "function",
    "name": "authorization",
    "memberof": "src/reducers/authorization.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/authorization.js~authorization",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/reducers/authorization.js",
    "importStyle": "authorization",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "DEFAULT_STATE",
        "defaultValue": "DEFAULT_STATE"
      },
      {
        "name": "objectPattern1",
        "types": [
          "{\"type\": *, \"payload\": *}"
        ],
        "defaultRaw": {
          "type": null,
          "payload": null
        },
        "defaultValue": "{\"type\":null,\"payload\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 399,
    "kind": "file",
    "name": "src/reducers/index.js",
    "content": "import { combineReducers } from 'redux';\nimport { routerReducer as routing } from 'react-router-redux';\nimport { reducer as form } from 'redux-form';\nimport { reducer as toastrReducer } from 'react-redux-toastr';\nimport { reducer } from 'react-redux-sweetalert';\n\nimport auth from './authorization';\nimport servers from './servers';\nimport logs from './logs';\nimport users from './users';\nimport menu from './menu';\n\nexport default combineReducers({\n    auth,\n    servers,\n    routing,\n    form,\n    logs,\n    users,\n    menu,\n    toastr: toastrReducer,\n    sweetalert: reducer,\n});\n",
    "static": true,
    "longname": "src/reducers/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 400,
    "kind": "file",
    "name": "src/reducers/logs.js",
    "content": "import { List } from 'immutable';\nimport * as LOG from '../constants/logs';\n\nconst DEFAULT_STATE = {\n    list: List([]),\n    collapsed: true,\n};\n\nexport default (state = DEFAULT_STATE, action) => {\n    switch (action.type) {\n        case LOG.ADD:\n            return { ...state, list: state.list.push(action.payload) };\n        case LOG.TOGGLE_COLLAPSE:\n            return { ...state, collapsed: !state.collapsed };\n        case LOG.CLEAR:\n            return { ...state, list: List([]) };\n        default:\n            return state;\n    }\n};\n",
    "static": true,
    "longname": "src/reducers/logs.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 401,
    "kind": "variable",
    "name": "DEFAULT_STATE",
    "memberof": "src/reducers/logs.js",
    "static": true,
    "longname": "src/reducers/logs.js~DEFAULT_STATE",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/reducers/logs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"list\": *, \"collapsed\": boolean}"
      ]
    }
  },
  {
    "__docId__": 402,
    "kind": "function",
    "name": "logs",
    "memberof": "src/reducers/logs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/logs.js~logs",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/reducers/logs.js",
    "importStyle": "logs",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "DEFAULT_STATE",
        "defaultValue": "DEFAULT_STATE"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 403,
    "kind": "file",
    "name": "src/reducers/menu.js",
    "content": "/* eslint-disable no-case-declarations */\n/* eslint-disable no-useless-escape */\nconst DEFAULT_STATE = {\n    sidebar_active: null,\n};\n\nconst activeRegex = new RegExp(/\\/server\\/(?:show|edit)\\/([^\\/]+)/);\n\nexport default (state = DEFAULT_STATE, { type, payload }) => {\n    switch (type) {\n        case '@@router/LOCATION_CHANGE':\n            const result = activeRegex.exec(payload.pathname);\n            if (result) {\n                return {\n                    ...state,\n                    sidebar_active: result[1],\n                };\n            } else if (payload.pathname === '/server/add') {\n                return {\n                    ...state,\n                    sidebar_active: 'add',\n                };\n            }\n            return { ...DEFAULT_STATE };\n        default:\n            return state;\n    }\n};\n",
    "static": true,
    "longname": "src/reducers/menu.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 404,
    "kind": "variable",
    "name": "DEFAULT_STATE",
    "memberof": "src/reducers/menu.js",
    "static": true,
    "longname": "src/reducers/menu.js~DEFAULT_STATE",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/reducers/menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"sidebar_active\": *}"
      ]
    }
  },
  {
    "__docId__": 405,
    "kind": "variable",
    "name": "activeRegex",
    "memberof": "src/reducers/menu.js",
    "static": true,
    "longname": "src/reducers/menu.js~activeRegex",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/reducers/menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "RegExp"
      ]
    }
  },
  {
    "__docId__": 406,
    "kind": "function",
    "name": "menu",
    "memberof": "src/reducers/menu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/menu.js~menu",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/reducers/menu.js",
    "importStyle": "menu",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "DEFAULT_STATE",
        "defaultValue": "DEFAULT_STATE"
      },
      {
        "name": "objectPattern1",
        "types": [
          "{\"type\": *, \"payload\": *}"
        ],
        "defaultRaw": {
          "type": null,
          "payload": null
        },
        "defaultValue": "{\"type\":null,\"payload\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 407,
    "kind": "file",
    "name": "src/reducers/servers.js",
    "content": "import moment from 'moment';\nimport uuid from 'uuid';\nimport { isUndefined, keyBy, omit } from 'lodash';\nimport { Map } from 'immutable';\nimport * as SERVER from '../constants/servers';\nimport * as AUTH from '../constants/authorization';\n\nconst DEFAULT_STATE = {\n    list: Map(),\n    setupInProgress: Map(),\n    status: Map(),\n    statusFetch: Map(),\n};\n\nexport default (state = DEFAULT_STATE, { type, payload }) => {\n    switch (type) {\n        case SERVER.ADD_SUCCESS:\n        case SERVER.EDIT_SUCCESS:\n            if (isUndefined(payload)) {\n                return state;\n            }\n\n            if (isUndefined(payload.server.id)) {\n// eslint-disable-next-line no-param-reassign\n                payload.server.id = uuid.v1();\n            }\n            return { ...state, list: state.list.set(payload.server.id, payload.server) };\n        case SERVER.UPDATE_CONFIG:\n            return {\n                ...state,\n                list: state.list.update(payload.server.id, item => ({\n                    ...item,\n                    config: payload.config,\n                })),\n            };\n        case SERVER.FETCH:\n            return { ...state, list: Map(keyBy(payload, 'id')) };\n        case SERVER.SETUP:\n            return {\n                ...state,\n                setupInProgress: state.setupInProgress.set(String(payload.server.id), true),\n            };\n        case SERVER.SETUP_FAILURE:\n        case SERVER.SETUP_SUCCESS:\n            return {\n                ...state,\n                setupInProgress: state.setupInProgress.set(String(payload.server.id), false),\n            };\n        case SERVER.STATUS_CHANGE:\n            return {\n                ...state,\n                status: state.status.set(payload.serverId, {\n                    ...state.status.get(payload.serverId, {}),\n                    ...omit(payload, ['serverId']),\n                    updated: moment().toDate().getTime(),\n                }),\n                statusFetch: state.statusFetch.set(payload.serverId, false),\n            };\n        case SERVER.STATUS_FETCH_START:\n            return {\n                ...state,\n                statusFetch: state.statusFetch.set(payload.serverId, true),\n            };\n        case AUTH.CLEAR_STATE:\n            return {\n                ...DEFAULT_STATE,\n            };\n        default:\n            return state;\n    }\n};\n",
    "static": true,
    "longname": "src/reducers/servers.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 408,
    "kind": "variable",
    "name": "DEFAULT_STATE",
    "memberof": "src/reducers/servers.js",
    "static": true,
    "longname": "src/reducers/servers.js~DEFAULT_STATE",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/reducers/servers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"list\": *, \"setupInProgress\": *, \"status\": *, \"statusFetch\": *}"
      ]
    }
  },
  {
    "__docId__": 409,
    "kind": "function",
    "name": "servers",
    "memberof": "src/reducers/servers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/servers.js~servers",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/reducers/servers.js",
    "importStyle": "servers",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "DEFAULT_STATE",
        "defaultValue": "DEFAULT_STATE"
      },
      {
        "name": "objectPattern1",
        "types": [
          "{\"type\": *, \"payload\": *}"
        ],
        "defaultRaw": {
          "type": null,
          "payload": null
        },
        "defaultValue": "{\"type\":null,\"payload\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 410,
    "kind": "file",
    "name": "src/reducers/users.js",
    "content": "import { Map } from 'immutable';\nimport uuid from 'uuid';\nimport { omit, isUndefined, forIn } from 'lodash';\nimport * as USER from '../constants/users';\nimport * as AUTH from '../constants/authorization';\n\nconst DEFAULT_STATE = {\n    list: Map(),\n    setupInProgress: Map()\n};\n\nexport default (state = DEFAULT_STATE, { type, payload }) => {\n    switch (type) {\n        case USER.ADD:\n            if (isUndefined(payload.id)) {\n                // eslint-disable-next-line no-param-reassign\n                payload.id = uuid.v1();\n            }\n            return {\n                ...state,\n                list: state.list\n                    .setIn(\n                        [payload.serverId, payload.id], {\n                            ...omit(payload, ['serverId']),\n                            ranSetup: false,\n                        },\n                    ),\n            };\n        case USER.EDIT:\n            return { ...state, list: state.list.setIn([payload.serverId, payload.id], omit(payload, ['serverId'])) };\n        case USER.SETUP:\n            return {\n                ...state,\n                setupInProgress: state.setupInProgress.set(payload.user.id, true),\n            };\n        case USER.SETUP_SUCCESS:\n            return {\n                ...state,\n                list: state.list.updateIn(\n                    [payload.serverId, payload.user.id],\n                    item => ({\n                        ...item,\n                        ranSetup: true,\n                    }),\n                ),\n                setupInProgress: state.setupInProgress.set(payload.user.id, false),\n            };\n        case USER.SETUP_FAILURE:\n            return {\n                ...state,\n                setupInProgress: state.setupInProgress.set(payload.user.id, false),\n            };\n        case USER.REMOVE:\n            return {\n                ...state,\n                list: state.list.removeIn([payload.serverId, payload.id]),\n            };\n        // eslint-disable-next-line\n        case USER.FETCH:\n            let newList = Map();\n            forIn(payload, (users, serverId) => {\n                forIn(users, (user, userId) => {\n                    newList = newList.setIn([serverId, userId], user);\n                });\n            });\n\n            return { ...state, list: newList };\n        case AUTH.CLEAR_STATE:\n            return {\n                ...DEFAULT_STATE,\n            };\n        default:\n            return state;\n    }\n};\n",
    "static": true,
    "longname": "src/reducers/users.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 411,
    "kind": "variable",
    "name": "DEFAULT_STATE",
    "memberof": "src/reducers/users.js",
    "static": true,
    "longname": "src/reducers/users.js~DEFAULT_STATE",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/reducers/users.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"list\": *, \"setupInProgress\": *}"
      ]
    }
  },
  {
    "__docId__": 412,
    "kind": "function",
    "name": "users",
    "memberof": "src/reducers/users.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers/users.js~users",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/reducers/users.js",
    "importStyle": "users",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "DEFAULT_STATE",
        "defaultValue": "DEFAULT_STATE"
      },
      {
        "name": "objectPattern1",
        "types": [
          "{\"type\": *, \"payload\": *}"
        ],
        "defaultRaw": {
          "type": null,
          "payload": null
        },
        "defaultValue": "{\"type\":null,\"payload\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 413,
    "kind": "file",
    "name": "src/render.jsx",
    "content": "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport electronContextMenu from 'electron-context-menu';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-redux-toastr/src/styles/index.scss';\nimport App from './containers/App';\nimport './resource/main.scss';\n\nelectronContextMenu();\nReactDOM.render(<App />, document.getElementById('main'));\n",
    "static": true,
    "longname": "src/render.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 414,
    "kind": "file",
    "name": "src/selectors/authorization.js",
    "content": "import { createSelector } from 'reselect';\nimport { Map } from 'immutable';\n\nexport const getFileMap = state => state.auth.file;\nconst isFile = property => (file) => {\n    if (Map.isMap(file)) {\n        return file.get(property, false);\n    }\n\n    return false;\n};\n\nexport const isFileOpen = createSelector([\n    getFileMap,\n], isFile('open'));\n\nexport const getRecentFiles = createSelector([\n    state => state.auth.recentFiles,\n], recentFiles => recentFiles.toJS());\n",
    "static": true,
    "longname": "src/selectors/authorization.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 415,
    "kind": "function",
    "name": "getFileMap",
    "memberof": "src/selectors/authorization.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/selectors/authorization.js~getFileMap",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/selectors/authorization.js",
    "importStyle": "{getFileMap}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 416,
    "kind": "function",
    "name": "isFile",
    "memberof": "src/selectors/authorization.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/selectors/authorization.js~isFile",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/selectors/authorization.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "property",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 417,
    "kind": "variable",
    "name": "isFileOpen",
    "memberof": "src/selectors/authorization.js",
    "static": true,
    "longname": "src/selectors/authorization.js~isFileOpen",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/selectors/authorization.js",
    "importStyle": "{isFileOpen}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 418,
    "kind": "variable",
    "name": "getRecentFiles",
    "memberof": "src/selectors/authorization.js",
    "static": true,
    "longname": "src/selectors/authorization.js~getRecentFiles",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/selectors/authorization.js",
    "importStyle": "{getRecentFiles}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 419,
    "kind": "file",
    "name": "src/selectors/logs.js",
    "content": "import { createSelector } from 'reselect';\nimport { List } from 'immutable';\n\nexport const getLogsList = state => state.logs.list;\n\nexport const getLogsArray = createSelector(\n    [getLogsList],\n    (list) => {\n        if (List.isList(list)) {\n            return list.toArray().reverse();\n        }\n\n        return [];\n    },\n);\n\nexport const getLogsCollapsed = state => state.logs.collapsed;\n",
    "static": true,
    "longname": "src/selectors/logs.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 420,
    "kind": "function",
    "name": "getLogsList",
    "memberof": "src/selectors/logs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/selectors/logs.js~getLogsList",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/selectors/logs.js",
    "importStyle": "{getLogsList}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 421,
    "kind": "variable",
    "name": "getLogsArray",
    "memberof": "src/selectors/logs.js",
    "static": true,
    "longname": "src/selectors/logs.js~getLogsArray",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/selectors/logs.js",
    "importStyle": "{getLogsArray}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 422,
    "kind": "function",
    "name": "getLogsCollapsed",
    "memberof": "src/selectors/logs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/selectors/logs.js~getLogsCollapsed",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/selectors/logs.js",
    "importStyle": "{getLogsCollapsed}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 423,
    "kind": "file",
    "name": "src/selectors/servers.js",
    "content": "import { createSelector } from 'reselect';\nimport { Map } from 'immutable';\nimport { formValueSelector } from 'redux-form';\nimport os from 'os';\nimport { DEFAULT_SERVER_STATUS } from '../constants/servers';\nimport ConfigurationGenerator from '../core/ConfigurationGenerator';\n\nexport const getServersMap = state => state.servers.list;\nexport const getSetupInProgressMap = state => state.servers.setupInProgress;\nexport const getServerStatusMap = state => state.servers.status;\nexport const getServerFetchStatusMap = state => state.servers.statusFetch;\nexport const canOpenTerminal = () => os.platform() === 'linux';\n\nexport const getServerArray = createSelector(\n    [getServersMap],\n    (map) => {\n        if (Map.isMap(map)) {\n            return map.toArray();\n        }\n\n        return [];\n    },\n);\n\nexport const getServer = createSelector([\n    getServersMap,\n    (_, { params }) => params.id,\n], (map, id) => map.get(id));\n\nexport const getSetupInProgress = createSelector([\n    getSetupInProgressMap,\n    (_, { params, id }) => String(params ? params.id : id),\n], (map, id) => map.get(id, false));\n\nexport const getServerStatus = createSelector([\n    getServerStatusMap,\n    (_, { server }) => String(server.id),\n], (map, id) => map.get(id, DEFAULT_SERVER_STATUS));\n\nexport const getServerFetchStatus = createSelector([\n    getServerFetchStatusMap,\n    (_, { server }) => String(server.id),\n], (map, id) => map.get(id, false));\n\nexport const getFormSelector = formValueSelector('server');\n\nexport const getPreview = createSelector([\n    state => getFormSelector(state, 'config'),\n], config => ConfigurationGenerator.generate(config));\n",
    "static": true,
    "longname": "src/selectors/servers.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 424,
    "kind": "function",
    "name": "getServersMap",
    "memberof": "src/selectors/servers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/selectors/servers.js~getServersMap",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/selectors/servers.js",
    "importStyle": "{getServersMap}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 425,
    "kind": "function",
    "name": "getSetupInProgressMap",
    "memberof": "src/selectors/servers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/selectors/servers.js~getSetupInProgressMap",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/selectors/servers.js",
    "importStyle": "{getSetupInProgressMap}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 426,
    "kind": "function",
    "name": "getServerStatusMap",
    "memberof": "src/selectors/servers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/selectors/servers.js~getServerStatusMap",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/selectors/servers.js",
    "importStyle": "{getServerStatusMap}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 427,
    "kind": "function",
    "name": "getServerFetchStatusMap",
    "memberof": "src/selectors/servers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/selectors/servers.js~getServerFetchStatusMap",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/selectors/servers.js",
    "importStyle": "{getServerFetchStatusMap}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 428,
    "kind": "function",
    "name": "canOpenTerminal",
    "memberof": "src/selectors/servers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/selectors/servers.js~canOpenTerminal",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/selectors/servers.js",
    "importStyle": "{canOpenTerminal}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 429,
    "kind": "variable",
    "name": "getServerArray",
    "memberof": "src/selectors/servers.js",
    "static": true,
    "longname": "src/selectors/servers.js~getServerArray",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/selectors/servers.js",
    "importStyle": "{getServerArray}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 430,
    "kind": "variable",
    "name": "getServer",
    "memberof": "src/selectors/servers.js",
    "static": true,
    "longname": "src/selectors/servers.js~getServer",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/selectors/servers.js",
    "importStyle": "{getServer}",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 431,
    "kind": "variable",
    "name": "getSetupInProgress",
    "memberof": "src/selectors/servers.js",
    "static": true,
    "longname": "src/selectors/servers.js~getSetupInProgress",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/selectors/servers.js",
    "importStyle": "{getSetupInProgress}",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 432,
    "kind": "variable",
    "name": "getServerStatus",
    "memberof": "src/selectors/servers.js",
    "static": true,
    "longname": "src/selectors/servers.js~getServerStatus",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/selectors/servers.js",
    "importStyle": "{getServerStatus}",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 433,
    "kind": "variable",
    "name": "getServerFetchStatus",
    "memberof": "src/selectors/servers.js",
    "static": true,
    "longname": "src/selectors/servers.js~getServerFetchStatus",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/selectors/servers.js",
    "importStyle": "{getServerFetchStatus}",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 434,
    "kind": "variable",
    "name": "getFormSelector",
    "memberof": "src/selectors/servers.js",
    "static": true,
    "longname": "src/selectors/servers.js~getFormSelector",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/selectors/servers.js",
    "importStyle": "{getFormSelector}",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 435,
    "kind": "variable",
    "name": "getPreview",
    "memberof": "src/selectors/servers.js",
    "static": true,
    "longname": "src/selectors/servers.js~getPreview",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/selectors/servers.js",
    "importStyle": "{getPreview}",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 436,
    "kind": "file",
    "name": "src/selectors/users.js",
    "content": "import { createSelector } from 'reselect';\nimport { Map } from 'immutable';\n\nexport const getSetupInProgressMap = state => state.users.setupInProgress;\n\nexport const getUsersMap = createSelector([\n    state => state.users.list,\n    (_, { params }) => params.id,\n], (users, serverId) => users.get(serverId));\n\nexport const getUsersArray = createSelector([\n    getUsersMap,\n], (map) => {\n    if (Map.isMap(map)) {\n        return map.toArray();\n    }\n\n    return [];\n});\n\nexport const getUser = createSelector([\n    getUsersMap,\n    (_, { params }) => params.user_id,\n], (map, userId) => map.get(userId));\n",
    "static": true,
    "longname": "src/selectors/users.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 437,
    "kind": "function",
    "name": "getSetupInProgressMap",
    "memberof": "src/selectors/users.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/selectors/users.js~getSetupInProgressMap",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/selectors/users.js",
    "importStyle": "{getSetupInProgressMap}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 438,
    "kind": "variable",
    "name": "getUsersMap",
    "memberof": "src/selectors/users.js",
    "static": true,
    "longname": "src/selectors/users.js~getUsersMap",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/selectors/users.js",
    "importStyle": "{getUsersMap}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 439,
    "kind": "variable",
    "name": "getUsersArray",
    "memberof": "src/selectors/users.js",
    "static": true,
    "longname": "src/selectors/users.js~getUsersArray",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/selectors/users.js",
    "importStyle": "{getUsersArray}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 440,
    "kind": "variable",
    "name": "getUser",
    "memberof": "src/selectors/users.js",
    "static": true,
    "longname": "src/selectors/users.js~getUser",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/selectors/users.js",
    "importStyle": "{getUser}",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 441,
    "kind": "file",
    "name": "src/store/index.js",
    "content": "/* eslint-disable no-underscore-dangle */\nimport { createStore, applyMiddleware } from 'redux';\nimport { browserHistory } from 'react-router';\nimport { syncHistoryWithStore, routerMiddleware } from 'react-router-redux';\nimport thunk from 'redux-thunk';\nimport reducers from '../reducers';\n\nconst middleware = applyMiddleware(thunk, routerMiddleware(browserHistory));\n\nconst store = createStore(\n    reducers,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n    middleware,\n);\n\nexport default store;\nexport const history = syncHistoryWithStore(browserHistory, store);\n",
    "static": true,
    "longname": "src/store/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 442,
    "kind": "variable",
    "name": "middleware",
    "memberof": "src/store/index.js",
    "static": true,
    "longname": "src/store/index.js~middleware",
    "access": null,
    "export": false,
    "importPath": "ownVpn/src/store/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 443,
    "kind": "variable",
    "name": "history",
    "memberof": "src/store/index.js",
    "static": true,
    "longname": "src/store/index.js~history",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/store/index.js",
    "importStyle": "{history}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 444,
    "kind": "variable",
    "name": "store",
    "memberof": "src/store/index.js",
    "static": true,
    "longname": "src/store/index.js~store",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/store/index.js",
    "importStyle": "store",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 445,
    "kind": "file",
    "name": "src/utils/messages.js",
    "content": "import { isString, isObject } from 'lodash';\n\nexport const compileMessage = (...params) => {\n    const parts = [];\n\n    for (const part of params) {\n        if (isString(part)) {\n            parts.push(part);\n        } else if (isObject(part)) {\n            parts.push(JSON.stringify(part, null, 2));\n        } else {\n            parts.push(`${part}`);\n        }\n    }\n\n    return parts.join(', ');\n};\n",
    "static": true,
    "longname": "src/utils/messages.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 446,
    "kind": "function",
    "name": "compileMessage",
    "memberof": "src/utils/messages.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/messages.js~compileMessage",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/utils/messages.js",
    "importStyle": "{compileMessage}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "params",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 447,
    "kind": "file",
    "name": "src/utils/validators.js",
    "content": "import {SubmissionError} from \"redux-form\";\nexport const required = (value) => {\n    if (!value) {\n        return 'Required';\n    }\n};\nexport const minLength = min => (value) => {\n    if (value && value.length < min) {\n        return `Must be ${min} characters or more`;\n    }\n};\nexport const minValue = min => (value) => {\n    if (value && value < min) {\n        return `Must be at least ${min}`;\n    }\n};\nexport const maxValue = max => (value) => {\n    if (value && value > max) {\n        return `Must be lower than ${max}`;\n    }\n};\nexport const email = (value) => {\n    if (value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n        return 'Invalid email address';\n    }\n};\nexport const ipAddress = (value) => {\n    if (value && !/^(?!0)(?!.*\\.$)((1?\\d?\\d|25[0-5]|2[0-4]\\d)(\\.|$)){4}$/.test(value)) {\n        return 'Invalid IPv4 address';\n    }\n};\n\nexport const validateUser = (user) => {\n    if (user.config.httpProxyServer && !user.config.httpProxyPort) {\n        throw new SubmissionError({\n            config: {\n                httpProxyPort: 'Http proxy port must be set',\n            },\n        });\n    }\n    if (!user.config.httpProxyServer && user.config.httpProxyPort) {\n        throw new SubmissionError({\n            config: {\n                httpProxyServer: 'Http proxy server must be set',\n            },\n        });\n    }\n};\n\nexport const validateServer = (server) => {\n    if (server.config.server_mode === 'server') {\n        if (server.config.explicit_exit_notify === '1') {\n            throw new SubmissionError({\n                config: {\n                    explicit_exit_notify: 'Explicit-exit-notify cannot be used with mode server',\n                },\n            });\n        }\n    }\n};\n",
    "static": true,
    "longname": "src/utils/validators.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 448,
    "kind": "function",
    "name": "required",
    "memberof": "src/utils/validators.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/validators.js~required",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/utils/validators.js",
    "importStyle": "{required}",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 449,
    "kind": "function",
    "name": "minLength",
    "memberof": "src/utils/validators.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/validators.js~minLength",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/utils/validators.js",
    "importStyle": "{minLength}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "min",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 450,
    "kind": "function",
    "name": "minValue",
    "memberof": "src/utils/validators.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/validators.js~minValue",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/utils/validators.js",
    "importStyle": "{minValue}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "min",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 451,
    "kind": "function",
    "name": "maxValue",
    "memberof": "src/utils/validators.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/validators.js~maxValue",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/utils/validators.js",
    "importStyle": "{maxValue}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "max",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 452,
    "kind": "function",
    "name": "email",
    "memberof": "src/utils/validators.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/validators.js~email",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/utils/validators.js",
    "importStyle": "{email}",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 453,
    "kind": "function",
    "name": "ipAddress",
    "memberof": "src/utils/validators.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/validators.js~ipAddress",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/utils/validators.js",
    "importStyle": "{ipAddress}",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 454,
    "kind": "function",
    "name": "validateUser",
    "memberof": "src/utils/validators.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/validators.js~validateUser",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/utils/validators.js",
    "importStyle": "{validateUser}",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "user",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 455,
    "kind": "function",
    "name": "validateServer",
    "memberof": "src/utils/validators.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/validators.js~validateServer",
    "access": null,
    "export": true,
    "importPath": "ownVpn/src/utils/validators.js",
    "importStyle": "{validateServer}",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "server",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 457,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 458,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 459,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 460,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 461,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 462,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 463,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 464,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 465,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 466,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 467,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 468,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 469,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 470,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 471,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 472,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 473,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 474,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 475,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 476,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 477,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 478,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 479,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 480,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 481,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 482,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 483,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 484,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 485,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 486,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 487,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 488,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 489,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 490,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 491,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 492,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 493,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 494,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 495,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 496,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 497,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 498,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 499,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 500,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 501,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 502,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 503,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "lineNumber": 193,
    "builtinExternal": true
  },
  {
    "__docId__": 505,
    "kind": "external",
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 506,
    "kind": "external",
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 507,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 508,
    "kind": "external",
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 509,
    "kind": "external",
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 510,
    "kind": "external",
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 511,
    "kind": "external",
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 512,
    "kind": "external",
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "builtinExternal": true
  }
]